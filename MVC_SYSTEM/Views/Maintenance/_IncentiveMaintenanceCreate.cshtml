@using MVC_SYSTEM.Class
@model MVC_SYSTEM.MasterModels.tbl_JenisInsentif

@{
    @Scripts.Render("~/bundles/jqueryval")
}

<section class="content-wrapper main-content clear-fix">

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 class="modal-title">@GlobalResEstate.lblIncentiveAdd</h3>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="panel panel-primary">
                    <div class="panel-heading">@GlobalResEstate.lblIncentiveInfo</div>
                    <div class="panel-body">
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveType:</label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(model => model.fld_JenisInsentif, new SelectList(ViewBag.IncentiveList, "Value", "Text"), new { @class = "selectionList form-control" })
                                @Html.ValidationMessageFor(model => model.fld_JenisInsentif, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveCode:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.fld_KodInsentif, htmlAttributes: new { @class = "form-control col-sm-2", @readonly = "true" })
                                @Html.ValidationMessageFor(model => model.fld_KodInsentif, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveKodAktvt:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.fld_KodAktvt, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                                @Html.ValidationMessageFor(model => model.fld_KodAktvt, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveName:</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.fld_Keterangan, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_Keterangan, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveKodGL:</label>
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.fld_KodGL, new SelectList(ViewBag.GLList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_KodGL, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveIsKwspSocso:</label>
                            <div class="col-sm-2">
                                @Html.DropDownListFor(model => model.fld_AdaCaruman, new SelectList(ViewBag.OptionList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_AdaCaruman, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-offset-1 col-sm-2">@GlobalResEstate.lblIncentiveIsFixedValue:</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.fld_TetapanNilai, new SelectList(ViewBag.IncentiveValueTypeList, "Value", "Text"), new { @class = "optionList form-control" })
                                @Html.ValidationMessageFor(model => model.fld_TetapanNilai, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveMinValue:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.fld_MinValue, htmlAttributes: new { @class = "minVal form-control", @readonly = "true", @Value = "0.00" })
                                @Html.ValidationMessageFor(model => model.fld_MinValue, "", new { @class = "validation text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveMaxValue:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.fld_MaxValue, htmlAttributes: new { @class = "maxVal form-control", @readonly = "true", @Value = "0.00" })
                                @Html.ValidationMessageFor(model => model.fld_MaxValue, "", new { @class = "validation text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveFixedValue:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.fld_FixedValue, htmlAttributes: new { @class = "fixedVal form-control", @readonly = "true", @Value = "0.00" })
                                @Html.ValidationMessageFor(model => model.fld_FixedValue, "", new { @class = "validation text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResEstate.lblIncentiveDailyFixedValue:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.fld_DailyFixedValue, htmlAttributes: new { @class = "dailyVal form-control", @readonly = "true", @Value = "0.00" })
                                @Html.ValidationMessageFor(model => model.fld_DailyFixedValue, "", new { @class = "validation text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResEstate.lblWorkerType:</label>
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.fld_KelayakanKepada, new SelectList(ViewBag.WorkerTypeList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_KelayakanKepada, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <input class="btn btn-success" type="submit" value=@GlobalResEstate.btnSave>
            <button class="btn btn-warning" data-dismiss="modal">@GlobalResEstate.btnBack</button>
        </div>
    }
</section>

<script>
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");

    $(".selectionList").on("change",
        function () {
            console.log($(this).val());
            $.ajax({
                type: 'POST',
                url: '@Url.Action("checkIncentiveRunningNo", "Maintenance")',
                dataType: 'json',
                contentType: 'application/json',
                async: false,
                data: JSON.stringify({ incentiveType: $(this).val() }),
                success: function (result) {
                    console.log(result);
                    $('#fld_KodInsentif').val(result.incentiveCode);
                    $('#fld_KodAktvt').val(result.activityCode);
                }
            });
        });

    $(".optionList").on("change",
        function () {
            console.log($(this).val());
            $('.field-validation-error').html("");
            $('.minMaxVal').removeClass("input-validation-error");
            $('.fixedVal').removeClass("input-validation-error");
            $('.minVal').val("0.00");
            $('.maxVal').val("0.00");
            $('.fixedVal').val("0.00");
            $('.dailyVal').val("0.00");
            if ($(this).val() === "0")
            {
                $('.minVal').prop("readonly", false);
                $('.maxVal').prop("readonly", false);
                $('.minVal').val("");
                $('.maxVal').val("");
                $('.fixedVal').prop("readonly", true);
                $('.dailyVal').prop("readonly", true);
            }

            else if ($(this).val() === "1")
            {
                $('.minVal').prop("readonly", true);
                $('.maxVal').prop("readonly", true);
                $('.fixedVal').val("");
                $('.fixedVal').prop("readonly", false);
                $('.dailyVal').prop("readonly", true);
            }

            else if ($(this).val() === "2")
            {
                $('.minVal').prop("readonly", true);
                $('.maxVal').prop("readonly", false);
                $('.dailyVal').val("");
                $('.maxVal').val("");
                $('.fixedVal').prop("readonly", true);
                $('.dailyVal').prop("readonly", false);
            }

            else
            {
                $('.fixedVal').prop("readonly", true);
                $('.minVal').prop("readonly", true);
                $('.maxVal').prop("readonly", true);
                $('.dailyVal').prop("readonly", true);
            }
        });
</script>