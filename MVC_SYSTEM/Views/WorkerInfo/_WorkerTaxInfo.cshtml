@model List<MVC_SYSTEM.Models.tbl_TaxWorkerDetailsList>


@{
    GetConfig getConfig = new GetConfig();
}

<div>
    @if (Model != null && Model.Count > 0)
    {
        var grid = new WebGrid(
            source: Model,
            canPage: true,
            rowsPerPage: ViewBag.pageSize,
            canSort: false,
            ajaxUpdateContainerId: "grid");

        grid.Pager(WebGridPagerModes.All);

        <div class="text-center">@grid.TotalRowCount @Html.Label(GlobalResEstate.lblTotalRecord)</div>
        @grid.GetHtml(htmlAttributes: new { id = "grid" },
            tableStyle: "table table-bordered table-striped table-list table-hover",
            headerStyle: "header_table",
            alternatingRowStyle: "Grid-alt",
            selectedRowStyle: "Grid-selected",
            rowStyle: "Grid-rowstyle",
            footerStyle: "table-pager",
            mode: WebGridPagerModes.All,
            columns: grid.Columns(
                grid.Column(header: "No."
                    , format: item => item.WebGrid.Rows.IndexOf(item) + 1
                    + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex, style: "count"),
                grid.Column("Pkjmast.fld_Nopkj", GlobalResEstate.hdrNoPkj, style: "nopkj"),
                grid.Column("Pkjmast.fld_NopkjPermanent", GlobalResEstate.hdrNoPkjPermanent, style: "nokp"),
                grid.Column("Pkjmast.fld_Nama", GlobalResEstate.hdrName, style: "namapkj"),
                grid.Column(header: GlobalResEstate.hdrTaxNo, format: @<text>
                        @(item.WorkerTax != null && item.WorkerTax.Count > 0 ? item.WorkerTax[0].fld_TaxNo : "")</text>, style: "account"),
                grid.Column(header: GlobalResEstate.hdrResidency, format: @<text>
                    @(getConfig.GetResidency(item.WorkerTax != null && item.WorkerTax.Count > 0 ? item.WorkerTax[0].fld_TaxResidency : "", item.Pkjmast.fld_NegaraID, item.Pkjmast.fld_SyarikatID)) </text>, style: "account"),
                grid.Column(header: GlobalResEstate.lblMaritalStatus, format: @<text>
                    @(getConfig.GetMaritalStatus(item.WorkerTax != null && item.WorkerTax.Count > 0 ? item.WorkerTax[0].fld_TaxMaritalStatus : "", item.Pkjmast.fld_NegaraID, item.Pkjmast.fld_SyarikatID))</text>, style: "status"),
                grid.Column(header: GlobalResEstate.lblYear, format: @<text>
                                @(item.WorkerTax != null && item.WorkerTax.Count > 0 ? item.WorkerTax[0].fld_Year : "")</text>, style: "account"),
                grid.Column(GlobalResEstate.hdrAction, format: (item) =>
                    {
                        if (item.WorkerTax.Count > 0)
                        {
                            var tindakan = "<a data-modal1='' href='" + @Url.Action("_WorkerTaxInfoEdit", "WorkerInfo") + "/?id=" + item.Pkjmast.fld_NopkjPermanent + "' title='Update Worker Tax Info' class='btn btn-success'><i class='fa fa-edit fa-lg'></i></a>";
                            return @Html.Raw(tindakan);
                        }
                        else
                        {
                            var tindakan = "<a data-modal1='' href='" + @Url.Action("_WorkerTaxInfoCreate", "WorkerInfo") + "/?id=" + item.Pkjmast.fld_NopkjPermanent + "' title='Add Worker Tax Info' class='btn btn-success'><i class='fa fa-plus fa-lg'></i></a>";

                            return @Html.Raw(tindakan);
                        }
                    }, canSort: false, style: "tindakan")
                    ))

    }
    else
    {
        <div>
            @Html.Label(GlobalResEstate.msgErrorSearch)
        </div>
    }
</div>

<style>
    // Your styles
</style>


<style>
    .header_table th {
        text-align: center;
        vertical-align: middle !important;
    }

    .count {
        width: 30px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .nopkj {
        width: 100px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .namapkj {
        width: 200px;
        font-size: 12px;
        text-align: left;
        vertical-align: middle !important;
    }

    .nokp {
        width: 100px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .nokwsp {
        width: 100px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .nosocso {
        width: 100px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .account {
        width: 100px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .status {
        width: 150px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .appliedby {
        width: 100px;
        font-size: 12px;
        text-align: center;
        vertical-align: middle !important;
    }

    .tindakan {
        width: 80px;
        text-align: center;
    }
</style>


