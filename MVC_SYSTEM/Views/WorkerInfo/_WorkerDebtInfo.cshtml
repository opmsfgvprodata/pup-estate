@{
    GetConfig getConfig = new GetConfig();

    var grid = new WebGrid(
        source: Model,
        canPage: true,
        rowsPerPage: @ViewBag.pageSize,
        canSort: false,
        ajaxUpdateContainerId: "gridT");

    grid.Pager(WebGridPagerModes.All);

    if (@grid.TotalRowCount > 0)
    {
        <div class="text-center">@grid.TotalRowCount @Html.Label(GlobalResEstate.lblTotalRecord)</div>

        @grid.GetHtml(
                 htmlAttributes: new { id = "gridT" },
                 tableStyle: "table table-striped table-bordered table-list table-hover",
                 headerStyle: "header_table",
                 alternatingRowStyle: "Grid-alt",
                 selectedRowStyle: "Grid-selected",
                 rowStyle: "Grid-rowstyle",
                 mode: WebGridPagerModes.All,
                 columns: grid.Columns(
                     grid.Column(header: GlobalResEstate.hdrNo
                         , format: item => item.WebGrid.Rows.IndexOf(item) + 1
                                           + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage)
                                           * grid.RowsPerPage * grid.PageIndex, style: "count"),
                     grid.Column("Pkjmast.fld_Nopkj", GlobalResEstate.hdrNoPkj, style: "nopkj"),
                     grid.Column("Pkjmast.fld_Nama", GlobalResEstate.hdrName, style: "namapkj"),
                     grid.Column(GlobalResEstate.lblDebtList, format: (item) =>
                     {
                         WebGrid subGrid = new WebGrid(source: item.HutangPekerja);

                         if (@subGrid.TotalRowCount > 0)
                         {
                             return subGrid.GetHtml(
                                 htmlAttributes: new { id = "nestedT" },
                                 tableStyle: "table borderless",
                                 headerStyle: "header_table",
                                 alternatingRowStyle: "Grid-alt",
                                 rowStyle: "Grid-rowstyle borderless",
                                 displayHeader: false,

                                 columns: subGrid.Columns(
                                     subGrid.Column(format: (HutangPekerja) =>
                                     {
                                         var keterangan = HutangPekerja.fld_KodHutang + " - " + getConfig.GetWebConfigDesc(HutangPekerja.fld_KodHutang, "hutangPekerja", HutangPekerja.fld_NegaraID, HutangPekerja.fld_SyarikatID);
                                         return @Html.Raw(keterangan);
                                     }, canSort: false, style: "insentif borderless"),
                                     subGrid.Column("fld_NilaiHutang", format: (fld_NilaiInsentif) => $"RM", style: "rmind borderless"),
                                     subGrid.Column("fld_NilaiHutang", style: "nilaiinsentif borderless"),
                                     subGrid.Column(GlobalResEstate.hdrAction, format: (HutangPekerja) =>
                                     {
                                         var tindakan = "<a data-modal1='' href='" + @Url.Action("_WorkerDebtInfoEdit", "WorkerInfo") + "/?id=" + HutangPekerja.fld_HutangPkjID + "' class='btn btn-success' role='button' title='" + GlobalResEstate.lblWorkerDebtEdit + "' onclick='return DisplayProgressMessage2(this);'><i class='fa fa-edit fa-lg'></i></a>" +
                                                        "&nbsp;<a data-modal1='' href='" + @Url.Action("_WorkerDebtInfoDelete", "WorkerInfo") + "/?id=" + HutangPekerja.fld_HutangPkjID + "' class='btn btn-danger' role='button' title='" + GlobalResEstate.lblWorkerDebtDelete + "' onclick='return DisplayProgressMessage2(this);'><i class='fa fa-trash fa-lg'></i></a>";
                                         return @Html.Raw(tindakan);

                                     }, canSort: false, style: "tindakan2 borderless"))
                                 );
                         }
                         else
                         {
                             return @Html.Raw("<br/><div class='text-center'>" + @GlobalResEstate.lblNoDebt + "</div><br/>");
                         }
                     }, canSort: false, style: "tetapan2"),
                     grid.Column(GlobalResEstate.hdrAction, format: (item) =>
                     {
                         var tindakan = "<a data-modal1='' href='" + @Url.Action("_WorkerDebtInfoCreate", "WorkerInfo") + "/?id=" + item.Pkjmast.fld_Nopkj + "' class='btn btn-success' role='button' title='" + GlobalResEstate.lblWorkerDebtAdd + "' onclick='return DisplayProgressMessage2(this);'><i class='fa fa-plus fa-lg'></i></a>";
                         return @Html.Raw(tindakan);
                     }, canSort: false, style: "tindakan")

                     )
                 )
    }

    else
    {
        <hr />
        <div class="text-center">
            @Html.Label(GlobalResEstate.msgErrorSearch)
        </div>
        <hr />
    }
}

