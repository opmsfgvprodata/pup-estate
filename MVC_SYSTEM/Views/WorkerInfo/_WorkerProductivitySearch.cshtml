
<div id="productivityList">

    @{
        var grid = new WebGrid(
            canPage: true,
            rowsPerPage: Model.PageSize,
            canSort: false,
            ajaxUpdateContainerId: "grid");

        grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
        //grid.Pager(WebGridPagerModes.All);

        if (@grid.TotalRowCount > 0)
        {
            <div class="text-center">@grid.TotalRowCount @Html.Label(GlobalResEstate.lblTotalRecord)</div>

            @grid.GetHtml(htmlAttributes: new { id = "grid" }, // id for ajaxUpdateontainerId parameter
            tableStyle: "table table-bordered table-striped table-list table-hover",
            headerStyle: "header_table",
            alternatingRowStyle: "Grid-alt",
            selectedRowStyle: "Grid-selected",
            rowStyle: "Grid-rowstyle",
            footerStyle: "table-pager",
            mode: WebGridPagerModes.All,
            columns: grid.Columns(
                grid.Column(header: GlobalResEstate.hdrNo
                    , format: item => item.WebGrid.Rows.IndexOf(item) + 1
                                      + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage)
                                      * grid.RowsPerPage * grid.PageIndex, style: "count"),
                grid.Column(columnName: "fld_Nopkj", header: GlobalResEstate.hdrNoPkj, style: "nopkj"),
                grid.Column(columnName: "fld_Nama", header: GlobalResEstate.hdrName, style: "namapkj"),
                grid.Column(columnName: "fld_Nokp", header: GlobalResEstate.hdrNoKp, style: "nokp"),
                grid.Column(
                    header: GlobalResEstate.hdrCategory, style: "jenisPelan",
                    format: @<text>
                        <span id="jenisPelan" class="display-mode">@item.fld_JenisPelan</span>
                        @Html.DropDownList("jenisPelanLists", new SelectList(ViewBag.jenisPelanList, "Value", "Text", item.fld_JenisPelan), htmlAttributes: new { @class = "selection edit-mode form-control", Style = "display:none" })
                    </text>),

                grid.Column(
                    header: GlobalResEstate.hdrTarget, style: "targetHarian",
                    format: @<text>
                        <span id="targetHarian" class="display-mode">@item.fld_TargetHarian</span>
                        @Html.TextBox("fld_targetHarian", (int?)item.fld_TargetHarian, htmlAttributes: new { @class = "edit-mode form-control", Style = "display:none; text-align: center;", size = 10 })
                    </text>),
                grid.Column(
                    header: GlobalResEstate.hdrUnit, style: "unit",
                    format: @<text>
                        <span id="unit" class="display-mode">@item.fld_Unit</span>
                        @Html.DropDownList("UnitLists", new SelectList(ViewBag.UnitList, "Value", "Text", item.fld_Unit), new { @class = "selectionList edit-mode form-control", Style = "display:none" })
                    </text>),
                grid.Column(
                    header: GlobalResEstate.hdrTargetWorkingDay, style: "hadirKerja",
                    format: @<text>
                        <span id="hadirKerja1" class="display-mode">@item.fld_HadirKerja</span>
                        @Html.TextBox("fld_hadirKerja", (int?)item.fld_hadirKerja, htmlAttributes: new { @class = "edit-mode form-control", Style = "display:none; text-align: center;", size = 10, @readonly = "readonly", @Value = @item.fld_hadirKerja })
                    </text>),
                grid.Column(GlobalResEstate.hdrAction, format: (item) =>
                {
                    if (item.fld_JenisPelan != "" && item.fld_Unit != null)
                    {
                        var nopkj = @item.fld_Nopkj;
                        var tindakan = "<button class='edit-book display-mode btn btn-success' title='" + @GlobalResEstate.btnUpdate + "'><i class='fa fa-pencil-square-o  fa-lg'></i></button> " +
                                       "<button class='save-book edit-mode btn btn-success' id='" + nopkj + "' style='display: none;' title='" + @GlobalResEstate.btnSave + "'><i class='fa fa-check fa-lg'></i></button> " +
                                       "<button class='edit-mode cancel btn btn-danger' style='display: none;' title='" + @GlobalResEstate.btnCancel + "'><i class='fa fa-remove fa-lg'></i></button> " +
                                       "<a data-modal1='' href='" + @Url.Action("_ProductivitiInfoDelete", "WorkerInfo") + "/?id=" + nopkj + "' class='display-mode btn btn-danger' role='button' title='" + GlobalResEstate.btnDelete + "' onclick='return DisplayProgressMessage(this);'><i class='fa fa-trash fa-lg'></i></a>&nbsp;";
                        return @Html.Raw(tindakan);
                    }
                    else
                    {
                        var nopkj = @item.fld_Nopkj;
                        var tindakan = "<button class='edit-book display-mode btn btn-success' title='" + @GlobalResEstate.btnAdd + "'><i class='fa fa-plus fa-lg'></i></button>" +
                                       "<button class='save-book edit-mode btn btn-success' id='" + nopkj + "' style='display: none;' title='" + @GlobalResEstate.btnSave + "'><i class='fa fa-check fa-lg'></i></button>" +
                                       "<button class='edit-mode cancel btn btn-danger' style='display: none;' title='" + @GlobalResEstate.btnCancel + "'><i class='fa fa-remove fa-lg'></i></button>";
                        return @Html.Raw(tindakan);
                    }
                }, canSort: false, style: "tindakan")
                ));
        }
        else
        {
            <hr />
            <div class="text-center">
                @Html.Label(GlobalResEstate.msgErrorSearch)
            </div>
            <hr />
        }
    }
</div>

<script>
    $(function () {
        $('.edit-mode').hide();
        $('.edit-book').prop("disabled", false);
        $('.edit-book').on('click',
            function () {
                var tr = $(this).parents('tr:first');
                tr.find('.edit-mode, .display-mode').toggle();
                $('.edit-book').prop("disabled", true)
            });
        $('.cancel').on('click',
            function () {
                var tr = $(this).parents('tr:first');
                tr.find('.edit-mode, .display-mode').toggle();
                $('.edit-book').prop("disabled", false);
            });
        $('.save-book').on('click',
            function () {
                var tr = $(this).parents('tr:first');
                var nopkj = $(this).prop('id');
                console.log(nopkj);
                var jenisPelan = tr.find('#jenisPelanLists').val();
                console.log(jenisPelan);
                var unit = tr.find('#UnitLists').val();
                console.log(unit);
                var targetHarian = tr.find('#fld_targetHarian').val();
                console.log(targetHarian);
                var hadirKerja = tr.find('#fld_hadirKerja').val();
                console.log(hadirKerja);
                var filter = $('#txtfilter').val();
                console.log(filter);

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("addProductivityInfo", "WorkerInfo")',
                    dataType: 'json',
                    contentType: 'application/json',
                    async: false,
                    data: JSON.stringify({ nopkj: nopkj, jenisPelan: jenisPelan, targetHarian: targetHarian, hadirKerja: hadirKerja, unit: unit }),
                    success: function(result) {
                        $.simplyToast(result.msg, result.status);
                        if (result.status == "success") {
                            $("#productivityList").load('@Url.Action("_WorkerProductivitySearch", "WorkerInfo")', { filter: filter });
                            $('.edit-book').prop("disabled", false);
                        }
                    }
                });
            });
    });

    $(function () {
        $('.selection').on('change',
            function () {
                var tr = $(this).parents('tr:first');
                var jenisPelan = tr.find('#jenisPelanLists').val();
                console.log(jenisPelan);
                var unit = tr.find('#UnitLists').val();
                console.log(unit);
                var UnitList = tr.find('#UnitLists');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("checkCategoryType", "WorkerInfo")',
                    dataType: 'json',
                    contentType: 'application/json',
                    async: false,
                    data: JSON.stringify({ jenisPelan: jenisPelan }),
                    success: function (result) {
                        UnitList.prop("disabled", false);
                        UnitList.empty();
                        for (var i = 0; i < result.UnitList.length; i++) {
                            UnitList.append("<option value=" +
                                result.UnitList[i].Value +
                                    ">" +
                                result.UnitList[i].Text +
                                    "</option>");
                        }

                            if (jenisPelan === '' || jenisPelan === null) {
                                UnitList.prop("disabled", true);
                            }
                    }
                });
            });
    });
</script>




