@model MVC_SYSTEM.AuthModels.tblUser

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 class="modal-title">Add New User</h3>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="modal-body">
        <div class="form-horizontal">
            <span id="progress" class="text-center" style="display: none;">
                <img src="~/Asset/Images/wait.gif" alt="wait" />
            </span>
            <div class="form-group">
                @Html.LabelFor(model => model.fldUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.fldUserName, new { htmlAttributes = new { @class = "form-control required" } })
                    @Html.ValidationMessageFor(model => model.fldUserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fldUserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.fldUserPassword, new { htmlAttributes = new { @class = "form-control required" } })
                    @Html.ValidationMessageFor(model => model.fldUserPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fldUserFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.fldUserFullName, new { htmlAttributes = new { @class = "form-control required" } })
                    @Html.ValidationMessageFor(model => model.fldUserFullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fldUserShortName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.fldUserShortName, new { htmlAttributes = new { @class = "form-control required" } })
                    @Html.ValidationMessageFor(model => model.fldUserShortName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fldUserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.fldUserEmail, new { htmlAttributes = new { @class = "form-control required" } })
                    @Html.ValidationMessageFor(model => model.fldUserEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
               @Html.LabelFor(model => model.fldRoleID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownList("fldRoleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.fldRoleID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fldWilayahID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownList("fldWilayahID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.fldWilayahID, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
        <div class="modal-footer">
            <input class="btn btn-primary" type="submit" value="Save" />
            <button class="btn btn-warning" data-dismiss="modal">Close</button>
        </div>
}
<script>
                $("form").removeData("validator");
                $("form").removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse("form");
</script>