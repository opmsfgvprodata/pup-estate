////using System;
////using System.Collections.Generic;
////using System.Data.Entity;
////using System.Data.Entity.Infrastructure.MappingViews;
////using System.Linq;
////using System.Linq.Dynamic;
////using System.Web;
////using System.Web.Mvc;
////using MVC_SYSTEM.MasterModels;
////using MVC_SYSTEM.Class;
////using MVC_SYSTEM.log;
////using MVC_SYSTEM.ViewingModels;
////using MVC_SYSTEM.App_LocalResources;
////using MVC_SYSTEM.Models;
////using Microsoft.Ajax.Utilities;
////using static MVC_SYSTEM.Class.GlobalFunction;
////using MVC_SYSTEM.CustomModels;
////using Itenso.TimePeriod;

//////using OfficeOpenXml;

////namespace MVC_SYSTEM.Controllers
////{
////    //Check_Balik
////    public class MaintenanceController : Controller
////    {
////        private MVC_SYSTEM_MasterModels db = new MVC_SYSTEM_MasterModels();
////        private GetIdentity GetIdentity = new GetIdentity();
////        private GetConfig GetConfig = new GetConfig();
////        private GetNSWL GetNSWL = new GetNSWL();
////        private Connection Connection = new Connection();
////        private ChangeTimeZone timezone = new ChangeTimeZone();
////        errorlog geterror = new errorlog();
////        private GlobalFunction GlobalFunction = new GlobalFunction();

////        // GET: Maintenance
////        public ActionResult Index()
////        {
////            ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            List<SelectListItem> sublist = new List<SelectListItem>();
////            ViewBag.MaintenanceSubList = sublist;
////            ViewBag.Maintenance = "class = active";
////            ViewBag.MaintenanceList = new SelectList(db.tblMenuLists.Where(x => x.fld_Flag == "maintenance" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).Select(s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_Desc }), "Value", "Text").ToList();
////            db.Dispose();
////            return View();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult Index(string MaintenanceList, string MaintenanceSubList)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            if (MaintenanceSubList != null)
////            {
////                return RedirectToAction(MaintenanceSubList, "Maintenance");
////            }
////            else
////            {
////                int maintenancelist = int.Parse(MaintenanceList);
////                var action = db.tblMenuLists.Where(x => x.fld_ID == maintenancelist && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).Select(s => s.fld_Val).FirstOrDefault();
////                db.Dispose();
////                return RedirectToAction(action, "Maintenance");
////            }
////        }

////        public JsonResult GetSubList(int ListID)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            var findsub = db.tblMenuLists.Where(x => x.fld_ID == ListID).Select(s => s.fld_Sub).FirstOrDefault();
////            List<SelectListItem> sublist = new List<SelectListItem>();
////            if (findsub!=null)
////            {
////                sublist = new SelectList(db.tblMenuLists.Where(x => x.fld_Flag == findsub && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_Val, Text = s.fld_Desc }), "Value", "Text").ToList();
////            }
////            db.Dispose();
////            return Json(sublist);
////        }

////        public ActionResult PayrateMaintenance()
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            ViewBag.Maintenance = "class = active";
////            List<SelectListItem> menuailist = new List<SelectListItem>();
////            menuailist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            menuailist.Insert(0, (new SelectListItem { Text =GlobalResEstate.lblChoose, Value = "0" }));
////            ViewBag.MenuaiList = menuailist;
////            db.Dispose();
////            return View();
////        }

////        public ActionResult PayrateDetail(string MenuaiList, int page = 1, string sort = "fld_HasilLower", string sortdir = "ASC")
////        {
////            ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.tbl_UpahMenuai>();

////            if (MenuaiList != "0")
////            {
////                records.Content = dbview.tbl_UpahMenuai.Where(x => x.fld_Jadual==MenuaiList && x.fld_Deleted==false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = records.Content.Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                dbview.Dispose();
////            }
////            return PartialView(records);
////        }

////        public ActionResult PayrateInsert()
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            List<SelectListItem> JnsJadual = new List<SelectListItem>();
////            List<SelectListItem> Catitan = new List<SelectListItem>();

////            JnsJadual = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            JnsJadual.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            Catitan.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));


////            ViewBag.fld_Jadual = JnsJadual;
////            ViewBag.fld_Catitan = Catitan;
////            db.Dispose();
////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult PayrateInsert(MasterModels.tbl_UpahMenuai tbl_UpahMenuai)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            var checkdata = db.tbl_UpahMenuai.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_Jadual == tbl_UpahMenuai.fld_Jadual && x.fld_HasilLower == tbl_UpahMenuai.fld_HasilLower && x.fld_HasilUpper == tbl_UpahMenuai.fld_HasilUpper).FirstOrDefault();
////            if (checkdata == null)
////            {
////                tbl_UpahMenuai.fld_Deleted = false;
////                db.tbl_UpahMenuai.Add(tbl_UpahMenuai);
////                db.SaveChanges();
////                db.Dispose();
////                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
////                return Json(new { success = true, msg = GlobalResEstate.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
////            }
////            else
////            {
////                return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////            }
////        }

////        public ActionResult PayrateUpdate(int? id)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            if (id == null)
////            {
////                return RedirectToAction("PayrateMaintenance");
////            }
////            MasterModels.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_UpahMenuai == null)
////            {
////                return RedirectToAction("PayrateMaintenance");
////            }
////            List<SelectListItem> JnsJadual = new List<SelectListItem>();
////            List<SelectListItem> Catitan = new List<SelectListItem>();

////            JnsJadual = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Jadual).ToList();
////            JnsJadual.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Catitan).ToList();
////            Catitan.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.fld_Jadual = JnsJadual;
////            ViewBag.fld_Catitan = Catitan;
////            db.Dispose();
////            return PartialView(tbl_UpahMenuai);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult PayrateUpdate(MasterModels.tbl_UpahMenuai tbl_UpahMenuai)
////        {
////            var getdata = db.tbl_UpahMenuai.Where(w =>w.fld_ID==tbl_UpahMenuai.fld_ID).FirstOrDefault();

////            getdata.fld_Kadar = tbl_UpahMenuai.fld_Kadar;
////            getdata.fld_Catitan = tbl_UpahMenuai.fld_Catitan;

////            db.Entry(getdata).State = EntityState.Modified;
////            db.SaveChanges();
////            db.Dispose();
////            return Json(new { success = true, msg = GlobalResEstate.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////        }

////        public ActionResult PayrateDelete(int? id)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            if (id == null)
////            {
////                return RedirectToAction("PayrateMaintenance");
////            }
////            MasterModels.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_UpahMenuai == null)
////            {
////                return RedirectToAction("PayrateMaintenance");
////            }
////            List<SelectListItem> JnsJadual = new List<SelectListItem>();
////            List<SelectListItem> Catitan = new List<SelectListItem>();

////            JnsJadual = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Jadual).ToList();
////            JnsJadual.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Catitan).ToList();
////            Catitan.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.fld_Jadual = JnsJadual;
////            ViewBag.fld_Catitan = Catitan;
////            db.Dispose();
////            return PartialView(tbl_UpahMenuai);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult PayrateDelete(MasterModels.tbl_UpahMenuai tbl_UpahMenuai)
////        {
////            errorlog geterror = new errorlog();
////            try
////            {
////                //MasterModels.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
////                if (tbl_UpahMenuai == null)
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////                }
////                else
////                {
////                    var getdata = db.tbl_UpahMenuai.Where(x => x.fld_ID == tbl_UpahMenuai.fld_ID && x.fld_NegaraID == tbl_UpahMenuai.fld_NegaraID && x.fld_SyarikatID == tbl_UpahMenuai.fld_SyarikatID && x.fld_Deleted == false).FirstOrDefault();
////                    getdata.fld_Deleted = true;
////                    db.Entry(getdata).State = EntityState.Modified;
////                    //db.tbl_UpahMenuai.Remove(tbl_UpahMenuai);
////                    db.SaveChanges();
////                    db.Dispose();
////                    return Json(new { success = true, msg = GlobalResEstate.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////                }
////            }
////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new { success = true, msg = GlobalResEstate.msgError, status = "danger", checkingdata = "1" });
////            }
////        }

////        public ActionResult PayrateFullMaintenance()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);
////            List<SelectListItem> aktvtlist = new List<SelectListItem>();
////            aktvtlist = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
////            aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.Maintenance = "class = active";
////            ViewBag.AktvtList = aktvtlist;

////            return View();
////        }

////        public ActionResult _PayrateFullMaintenance(string AktvtList = "", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
////        {
////            //ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            //List<SelectListItem> aktvtlist = new List<SelectListItem>();
////            //aktvtlist = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID==SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
////            //aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_UpahAktiviti>();

////            if (AktvtList != "0")
////            {
////                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                //ViewBag.AktvtList = AktvtList;
////                db.Dispose();
////                dbview.Dispose();
////            }
////            else
////            {
////                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                db.Dispose();
////                dbview.Dispose();
////            }

////            //ViewBag.AktvtList = aktvtlist;
////            ViewBag.Datacount = records.TotalRecords;
////            return View(records);
           
////        }

////        //public ActionResult PayrateFullDetail(string AktvtList="", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
////        //{
////        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
////        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////        //    MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////        //    //int role = GetIdentity.RoleID(getuserid).Value;

////        //    int pageSize = int.Parse(GetConfig.GetData("paging"));
////        //    var records = new PagedList<ViewingModels.tbl_UpahAktiviti>();

////        //    if (AktvtList != "0")
////        //    {
////        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID==SyarikatID && x.fld_NegaraID==NegaraID && x.fld_Deleted == false)
////        //               .OrderBy(sort + " " + sortdir)
////        //               .Skip((page - 1) * pageSize)
////        //               .Take(pageSize)
////        //               .ToList();

////        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////        //        records.CurrentPage = page;
////        //        records.PageSize = pageSize;
////        //        //ViewBag.AktvtList = AktvtList;
////        //        dbview.Dispose();
////        //    }
////        //    else
////        //    {
////        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////        //               .OrderBy(sort + " " + sortdir)
////        //               .Skip((page - 1) * pageSize)
////        //               .Take(pageSize)
////        //               .ToList();

////        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////        //        records.CurrentPage = page;
////        //        records.PageSize = pageSize;
////        //        dbview.Dispose();
////        //    }
////        //    ViewBag.Datacount = records.TotalRecords;
////        //    return PartialView(records);
////        //}

////        public ActionResult PayrateFullInsert()
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            List<SelectListItem> JnsAktvt = new List<SelectListItem>();
////            List<SelectListItem> unitlist = new List<SelectListItem>();
////            List<SelectListItem> Flaglist = new List<SelectListItem>();
////            JnsAktvt = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID==SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
////            JnsAktvt.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));
////            unitlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));
////            Flaglist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            Flaglist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.fld_DisabledFlag = Flaglist;
////            ViewBag.fld_Unit = unitlist;
////            ViewBag.fld_KodJenisAktvt = JnsAktvt;
////            db.Dispose();
////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult PayrateFullInsert(MasterModels.tbl_UpahAktiviti UpahAktiviti)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {

////                        UpahAktiviti.fld_KodAktvt = UpahAktiviti.fld_KodAktvt;
////                        UpahAktiviti.fld_Desc = UpahAktiviti.fld_Desc.ToUpper();
////                        UpahAktiviti.fld_Unit = UpahAktiviti.fld_Unit.ToUpper();
////                        UpahAktiviti.fld_Harga = UpahAktiviti.fld_Harga;
////                        UpahAktiviti.fld_KodJenisAktvt = UpahAktiviti.fld_KodJenisAktvt;
////                        UpahAktiviti.fld_DisabledFlag = UpahAktiviti.fld_DisabledFlag;
////                        UpahAktiviti.fld_KdhByr = "B";
////                        //UpahAktiviti.
////                        UpahAktiviti.fld_Deleted = false;
////                        UpahAktiviti.fld_NegaraID = NegaraID;
////                        UpahAktiviti.fld_SyarikatID = SyarikatID;

////                        db.tbl_UpahAktiviti.Add(UpahAktiviti);
////                        db.SaveChanges();

//                    //string appname = Request.ApplicationPath;
//                    //string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    //var lang = Request.RequestContext.RouteData.Values["lang"];
////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

//                    //if (appname != "/")
//                    //{
//                    //    domain = domain + appname;
//                    //}
////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "UpahMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_PayrateFullMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }

//            //        return Json(new
//            //        {
//            //            success = true,
//            //            msg = GlobalResEstate.msgUpdate,
//            //            status = "success",
//            //            checkingdata = "0",
//            //            method = "1",
//            //            div = "UpahMaintenanceDetails",
//            //            rootUrl = domain,
//            //            action = "_PayrateFullMaintenance",
//            //            controller = "Maintenance"
//            //        });
//            //    }


//            //    else
//            //    {
//            //        return Json(new
//            //        {
//            //            success = false,
//            //            msg = GlobalResEstate.msgErrorData,
//            //            status = "danger",
//            //            checkingdata = "0"
//            //        });
//            //    }
//            //}
////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                tbl_UpahAktiviti.fld_DisabledFlag = 1;
////                tbl_UpahAktiviti.fld_KdhByr = "B";
////                tbl_UpahAktiviti.fld_NegaraID = NegaraID;
////                tbl_UpahAktiviti.fld_SyarikatID = SyarikatID;
////                tbl_UpahAktiviti.fld_Deleted = false;
////                db.tbl_UpahAktiviti.Add(tbl_UpahAktiviti);
////                db.SaveChanges();
////                db.Dispose();
////            }
////        }
        
////                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
////        public ActionResult _PayrateFullUpdate(int? id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> unitlist = new List<SelectListItem>();
////            List<SelectListItem> Flaglist = new List<SelectListItem>();

////            unitlist = new SelectList(db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && 
////                x.fld_SyarikatID == SyarikatID)
////                .OrderBy(o => o.fldOptConfID)
////                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
////                , "Value", "Text").ToList();

////            Flaglist = new SelectList(db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
////                x.fld_SyarikatID == SyarikatID)
////                .OrderBy(o => o.fldOptConfID)
////                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
////                , "Value", "Text").ToList();

////            //unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            var PayData = db.tbl_UpahAktiviti.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            MasterModels.tbl_UpahAktivitiViewModel unitViewModel = new MasterModels.tbl_UpahAktivitiViewModel();

////            PropertyCopy.Copy(unitViewModel, PayData);

////            ViewBag.fld_Select = Flaglist;
////            ViewBag.fld_Selection = unitlist;
////            return View(unitViewModel);

////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PayrateFullUpdate(MasterModels.tbl_UpahAktivitiViewModel tbl_UpahAktiviti)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
////                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fld_Desc = tbl_UpahAktiviti.fld_Desc;
////                    unitData.fld_Harga = tbl_UpahAktiviti.fld_Harga;
////                    unitData.fld_Unit = tbl_UpahAktiviti.fld_Unit;
////                    unitData.fld_DisabledFlag = tbl_UpahAktiviti.fld_DisabledFlag;
////                    //getdata.fld_Produktvt = tbl_UpahAktiviti.fld_Produktvt;

////                    //db.Entry(unitData).State = EntityState.Modified;
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "UpahMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PayrateFullMaintenance",
////                        controller = "Maintenance"
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PayrateFullDelete(int? id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_UpahAktiviti Payrate = db.tbl_UpahAktiviti
////                .Single(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////            return PartialView(Payrate);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult PayrateFullDelete(MasterModels.tbl_UpahAktiviti tbl_UpahAktiviti)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
////                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgAdd,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "UpahMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_PayrateFullMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KwspContributionMaintenance(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _KwspContributionMaintenance(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_JenisCaruman>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

////            var kwspContributionData = db.tbl_JenisCaruman
////                .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = kwspContributionData
////                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = kwspContributionData
////                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = kwspContributionData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = kwspContributionData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KwspContributionMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var kwspConfigData = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                x.fldOptConfFlag1 == "kodCarumanKwsp" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                x.fldDeleted == false);

////            var getKwspContributionRunningNo = db.tbl_JenisCaruman
////                .Where(x => x.fld_JenisCaruman == kwspConfigData.fldOptConfValue && x.fldNegaraID == NegaraID &&
////                            x.fldSyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fld_JenisCarumanID)
////                .Select(s => s.fld_KodCaruman)
////                .FirstOrDefault();

////            string kwspContributionCode = "";

////            if (getKwspContributionRunningNo == null)
////            {
////                kwspContributionCode = kwspConfigData.fldOptConfFlag2 + "01";
////            }

////            else
////            {
////                int generateNewKwspCOntributionNo = Convert.ToInt32(getKwspContributionRunningNo.Substring(kwspConfigData.fldOptConfFlag2.Length)) + 1;
////                kwspContributionCode = kwspConfigData.fldOptConfFlag2 + generateNewKwspCOntributionNo.ToString("00");
////            }

////            tbl_JenisCarumanKWSPViewModelCreate jenisCarumanKwspViewModelCreate = new tbl_JenisCarumanKWSPViewModelCreate();

////            jenisCarumanKwspViewModelCreate.fld_JenisCaruman = kwspConfigData.fldOptConfValue;
////            jenisCarumanKwspViewModelCreate.fld_KodCaruman = kwspContributionCode;

////            return PartialView(jenisCarumanKwspViewModelCreate);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KwspContributionMaintenanceCreate(MasterModels.tbl_JenisCarumanKWSPViewModelCreate jenisCarumanKwspViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    tbl_JenisCaruman jenisCaruman = new tbl_JenisCaruman();

////                    PropertyCopy.Copy(jenisCaruman, jenisCarumanKwspViewModelCreate);

////                    jenisCaruman.fld_Keterangan = jenisCaruman.fld_Keterangan.ToUpper();
////                    jenisCaruman.fldNegaraID = (int)NegaraID;
////                    jenisCaruman.fldSyarikatID = (int)SyarikatID;
////                    jenisCaruman.fld_Deleted = false;
////                    jenisCaruman.fld_Default = false;

////                    db.tbl_JenisCaruman.Add(jenisCaruman);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "kwspContributionMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KwspContributionMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KwspContributionMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var kwspContributionData = db.tbl_JenisCaruman
////                .SingleOrDefault(x => x.fld_JenisCarumanID == id && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            tbl_JenisCarumanKWSPViewModelEdit jenisCarumanKwspViewModelEdit = new tbl_JenisCarumanKWSPViewModelEdit();

////            PropertyCopy.Copy(jenisCarumanKwspViewModelEdit, kwspContributionData);
            
////            return PartialView(jenisCarumanKwspViewModelEdit);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KwspContributionMaintenanceEdit(MasterModels.tbl_JenisCarumanKWSPViewModelEdit jenisCarumanKwspViewModelEdit)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var kwspContributionData = db.tbl_JenisCaruman
////                        .SingleOrDefault(x =>
////                            x.fld_JenisCarumanID == jenisCarumanKwspViewModelEdit.fld_JenisCarumanID &&
////                            x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////                    kwspContributionData.fld_Keterangan = jenisCarumanKwspViewModelEdit.fld_Keterangan.ToUpper();
////                    kwspContributionData.fld_UmurLower = jenisCarumanKwspViewModelEdit.fld_UmurLower;
////                    kwspContributionData.fld_UmurUpper = jenisCarumanKwspViewModelEdit.fld_UmurUpper;
////                    kwspContributionData.fld_PeratusCarumanPekerja = jenisCarumanKwspViewModelEdit.fld_PeratusCarumanPekerja;
////                    kwspContributionData.fld_PeratusCarumanMajikanBawah5000 = jenisCarumanKwspViewModelEdit.fld_PeratusCarumanMajikanBawah5000;
////                    kwspContributionData.fld_PeratusCarumanMajikanAtas5000 = jenisCarumanKwspViewModelEdit.fld_PeratusCarumanMajikanAtas5000;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "kwspContributionMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KwspContributionMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KwspContributionMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var kwspContributionData = db.tbl_JenisCaruman
////                .SingleOrDefault(x =>
////                    x.fld_JenisCarumanID == id &&
////                    x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            return PartialView(kwspContributionData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KwspContributionMaintenanceDelete(MasterModels.tbl_JenisCaruman jenisCaruman)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var kwspContributionData = db.tbl_JenisCaruman
////                    .SingleOrDefault(x =>
////                        x.fld_JenisCarumanID == jenisCaruman.fld_JenisCarumanID &&
////                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (kwspContributionData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                kwspContributionData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "kwspContributionMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_KwspContributionMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KwspTableMaintenance(int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

////            List<SelectListItem> kwspList = new List<SelectListItem>();

////            kwspList = new SelectList(db.tbl_JenisCaruman
////                    .Where(x => x.fld_JenisCaruman == kwspCode && x.fld_Deleted == false && x.fldNegaraID == NegaraID &&
////                                x.fldSyarikatID == SyarikatID)
////                    .OrderBy(o => o.fld_KodCaruman)
////                    .Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan })
////                , "Value", "Text").ToList();

////            kwspList.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" }));

////            ViewBag.KwspList = kwspList;

////            return View();
////        }

////        public ActionResult _KwspTableMaintenance(string kwspList, int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_Kwsp>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var message = "";
////            if (String.IsNullOrEmpty(kwspList))
////            {
////                message = GlobalResEstate.msgNoIncentiveCategory;
////                ViewBag.Message = message;
////            }

////            else
////            {
////                message = GlobalResEstate.msgErrorSearch;
////                ViewBag.Message = message;
////            }

////            var kwspData = db.tbl_Kwsp
////                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            records.Content = kwspData
////                .Where(x => x.fld_KodCaruman.ToUpper().Contains(kwspList.ToUpper()))
////                .OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = kwspData
////                .Count(x => x.fld_KodCaruman.ToUpper().Contains(kwspList.ToUpper()));

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KwspTableMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

////            List<SelectListItem> carumanList = new List<SelectListItem>();

////            carumanList = new SelectList(
////                db.tbl_JenisCaruman
////                    .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID &&
////                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodCaruman)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }),
////                "Value", "Text").ToList();
////            carumanList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.CarumanList = carumanList;

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KwspTableMaintenanceCreate(MasterModels.tbl_KwspViewModelCreate kwspViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tbl_Kwsp Kwsp = new MasterModels.tbl_Kwsp();

////                    PropertyCopy.Copy(Kwsp, kwspViewModelCreate);

////                    Kwsp.fld_NegaraID = (int)NegaraID;
////                    Kwsp.fld_SyarikatID = (int)SyarikatID;
////                    Kwsp.fld_Deleted = false;

////                    db.tbl_Kwsp.Add(Kwsp);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "kwspTableMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KwspTableMaintenance",
////                        controller = "Maintenance",
////                        paramName = "kwspList",
////                        paramValue = kwspViewModelCreate.fld_KodCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KwspTableMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            MasterModels.tbl_KwspViewModelEdit kwspViewModelEdit = new tbl_KwspViewModelEdit();

////            PropertyCopy.Copy(kwspViewModelEdit, kwspTableData);

////            return PartialView(kwspViewModelEdit);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KwspTableMaintenanceEdit(MasterModels.tbl_KwspViewModelEdit kwspViewModelEdit)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
////                        x => x.fld_ID == kwspViewModelEdit.fld_ID && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    kwspTableData.fld_KdrLower = kwspViewModelEdit.fld_KdrLower;
////                    kwspTableData.fld_KdrUpper = kwspViewModelEdit.fld_KdrUpper;
////                    kwspTableData.fld_Pkj = kwspViewModelEdit.fld_Pkj;
////                    kwspTableData.fld_Mjkn = kwspViewModelEdit.fld_Mjkn;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "kwspTableMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KwspTableMaintenance",
////                        controller = "Maintenance",
////                        paramName = "kwspList",
////                        paramValue = kwspTableData.fld_KodCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KwspTableMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(kwspTableData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KwspTableMaintenanceDelete(MasterModels.tbl_Kwsp kwsp)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
////                    x => x.fld_ID == kwsp.fld_ID && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (kwspTableData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                kwspTableData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "kwspTableMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_KwspTableMaintenance",
////                    controller = "Maintenance",
////                    paramName = "kwspList",
////                    paramValue = kwspTableData.fld_KodCaruman
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KwspContributionMaintenanceInUse(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _KwspContributionMaintenanceInUse(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_JenisCaruman>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

////            var kwspContributionData = db.tbl_JenisCaruman
////                .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = kwspContributionData
////                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = kwspContributionData
////                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = kwspContributionData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = kwspContributionData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KwspContributionMaintenanceInUseEdit(List<int> carumanKwspID)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            try
////            {
////                var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

////                var kwspContributionData = db.tbl_JenisCaruman
////                    .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID &&
////                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false);

////                var warganegaraCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                    x.fldOptConfFlag1 == "krytnlist" && x.fldOptConfFlag3 == "1" && x.fld_NegaraID == NegaraID &&
////                    x.fld_SyarikatID == SyarikatID).fldOptConfValue;

////                foreach (var kwspContribution in kwspContributionData)
////                {
////                    kwspContribution.fld_Default = false;
////                }

////                if (carumanKwspID != null)
////                {
////                    //remove checkall value from carumanTambahanID list
////                    carumanKwspID.Remove(0);

////                    foreach (var id in carumanKwspID)
////                    {
////                        var selectedKwspContributionData = db.tbl_JenisCaruman.SingleOrDefault(x => x.fld_JenisCarumanID == id);

////                        selectedKwspContributionData.fld_Default = true;
////                    }
////                }

////                db.SaveChanges();

////                var connectionData = db.tblConnections.Where(x =>
////                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

////                foreach (var connection in connectionData)
////                {
////                    var wilayahID = connection.wilayahID;
////                    string hostEstate, catalogEstate, userEstate, passEstate = "";
////                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate,
////                        wilayahID, SyarikatID.Value, NegaraID.Value);
////                    MVC_SYSTEM_Models estateConnection =
////                        MVC_SYSTEM_Models.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

////                    var workerData = estateConnection.tbl_Pkjmast.Where(x =>
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Kdaktf == "1");

////                    var activeKwspContributionData = db.tbl_JenisCaruman.Where(x => x.fld_JenisCaruman == kwspCode && 
////                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_Deleted == false &&
////                        x.fld_Default == true);

////                    foreach (var worker in workerData)
////                    {
////                        if (worker.fld_Kdrkyt == warganegaraCode)
////                        {
////                            DateDiff workerAge = new DateDiff(Convert.ToDateTime(worker.fld_Trlhr).AddDays(-1),
////                               DateTime.Now);

////                            foreach (var activeKwspContribution in activeKwspContributionData)
////                            {
////                                if (activeKwspContribution.fld_UmurLower <= workerAge.Years &&
////                                    activeKwspContribution.fld_UmurUpper >= workerAge.Years)
////                                {
////                                    worker.fld_KodKWSP = activeKwspContribution.fld_KodCaruman;
////                                }
////                            }
////                        }

////                        else
////                        {
////                            worker.fld_KodKWSP = null;
////                        }
////                    }

////                    estateConnection.SaveChanges();
////                    estateConnection.Dispose();
////                }

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgUpdate,
////                    status = "success",
////                    checkingdata = "1"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult SocsoContributionMaintenance(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _SocsoContributionMaintenance(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_JenisCaruman>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

////            var socsoContributionData = db.tbl_JenisCaruman
////                .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = socsoContributionData
////                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = socsoContributionData
////                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = socsoContributionData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = socsoContributionData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _SocsoContributionMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var socsoConfigData = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                x.fldOptConfFlag1 == "kodCarumanSocso" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                x.fldDeleted == false);

////            var getSocsoContributionRunningNo = db.tbl_JenisCaruman
////                .Where(x => x.fld_JenisCaruman == socsoConfigData.fldOptConfValue && x.fldNegaraID == NegaraID &&
////                            x.fldSyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fld_JenisCarumanID)
////                .Select(s => s.fld_KodCaruman)
////                .FirstOrDefault();

////            string socsoContributionCode = "";

////            if (getSocsoContributionRunningNo == null)
////            {
////                socsoContributionCode = socsoConfigData.fldOptConfFlag2 + "01";
////            }

////            else
////            {
////                int generateNewKwspCOntributionNo = Convert.ToInt32(getSocsoContributionRunningNo.Substring(socsoConfigData.fldOptConfFlag2.Length)) + 1;
////                socsoContributionCode = socsoConfigData.fldOptConfFlag2 + generateNewKwspCOntributionNo.ToString("00");
////            }

////            tbl_JenisCarumanSOCSOViewModelCreate jenisCarumanSocsoViewModelCreate = new tbl_JenisCarumanSOCSOViewModelCreate();

////            jenisCarumanSocsoViewModelCreate.fld_JenisCaruman = socsoConfigData.fldOptConfValue;
////            jenisCarumanSocsoViewModelCreate.fld_KodCaruman = socsoContributionCode;

////            return PartialView(jenisCarumanSocsoViewModelCreate);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _SocsoContributionMaintenanceCreate(MasterModels.tbl_JenisCarumanSOCSOViewModelCreate jenisCarumanSocsoViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    tbl_JenisCaruman jenisCaruman = new tbl_JenisCaruman();

////                    PropertyCopy.Copy(jenisCaruman, jenisCarumanSocsoViewModelCreate);

////                    jenisCaruman.fld_Keterangan = jenisCaruman.fld_Keterangan.ToUpper();
////                    jenisCaruman.fldNegaraID = (int)NegaraID;
////                    jenisCaruman.fldSyarikatID = (int)SyarikatID;
////                    jenisCaruman.fld_Deleted = false;
////                    jenisCaruman.fld_Default = false;

////                    db.tbl_JenisCaruman.Add(jenisCaruman);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "socsoContributionMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_SocsoContributionMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _SocsoContributionMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var socsoContributionData = db.tbl_JenisCaruman
////                .SingleOrDefault(x => x.fld_JenisCarumanID == id && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            tbl_JenisCarumanSOCSOViewModelEdit jenisCarumanSocsoViewModelEdit = new tbl_JenisCarumanSOCSOViewModelEdit();

////            PropertyCopy.Copy(jenisCarumanSocsoViewModelEdit, socsoContributionData);

////            return PartialView(jenisCarumanSocsoViewModelEdit);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _SocsoContributionMaintenanceEdit(MasterModels.tbl_JenisCarumanSOCSOViewModelEdit jenisCarumanSocsoViewModelEdit)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var socsoContributionData = db.tbl_JenisCaruman
////                        .SingleOrDefault(x =>
////                            x.fld_JenisCarumanID == jenisCarumanSocsoViewModelEdit.fld_JenisCarumanID &&
////                            x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////                    socsoContributionData.fld_Keterangan = jenisCarumanSocsoViewModelEdit.fld_Keterangan.ToUpper();
////                    socsoContributionData.fld_UmurLower = jenisCarumanSocsoViewModelEdit.fld_UmurLower;
////                    socsoContributionData.fld_UmurUpper = jenisCarumanSocsoViewModelEdit.fld_UmurUpper;
////                    socsoContributionData.fld_PeratusCarumanPekerja = jenisCarumanSocsoViewModelEdit.fld_PeratusCarumanPekerja;
////                    socsoContributionData.fld_PeratusCarumanMajikanBawah5000 = jenisCarumanSocsoViewModelEdit.fld_PeratusCarumanMajikanBawah5000;
////                    socsoContributionData.fld_PeratusCarumanMajikanAtas5000 = jenisCarumanSocsoViewModelEdit.fld_PeratusCarumanMajikanAtas5000;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "socsoContributionMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_SocsoContributionMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _SocsoContributionMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var socsoContributionData = db.tbl_JenisCaruman
////                .SingleOrDefault(x =>
////                    x.fld_JenisCarumanID == id &&
////                    x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            return PartialView(socsoContributionData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _SocsoContributionMaintenanceDelete(MasterModels.tbl_JenisCaruman jenisCaruman)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var socsoContributionData = db.tbl_JenisCaruman
////                    .SingleOrDefault(x =>
////                        x.fld_JenisCarumanID == jenisCaruman.fld_JenisCarumanID &&
////                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (socsoContributionData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                socsoContributionData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "socsoContributionMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_SocsoContributionMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult SocsoTableMaintenance(int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

////            List<SelectListItem> socsoList = new List<SelectListItem>();

////            socsoList = new SelectList(db.tbl_JenisCaruman
////                    .Where(x => x.fld_JenisCaruman == socsoCode && x.fld_Deleted == false && x.fldNegaraID == NegaraID &&
////                                x.fldSyarikatID == SyarikatID)
////                    .OrderBy(o => o.fld_KodCaruman)
////                    .Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan })
////                , "Value", "Text").ToList();

////            socsoList.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" }));

////            ViewBag.SocsoList = socsoList;

////            return View();
////        }

////        public ActionResult _SocsoTableMaintenance(string socsoList, int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_Socso>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var message = "";
////            if (String.IsNullOrEmpty(socsoList))
////            {
////                message = GlobalResEstate.msgNoSOCSOTableData;
////                ViewBag.Message = message;
////            }

////            else
////            {
////                message = GlobalResEstate.msgErrorSearch;
////                ViewBag.Message = message;
////            }

////            var socsoData = db.tbl_Socso
////                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            records.Content = socsoData
////                .Where(x => x.fld_KodCaruman.ToUpper().Contains(socsoList.ToUpper()))
////                .OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = socsoData
////                .Count(x => x.fld_KodCaruman.ToUpper().Contains(socsoList.ToUpper()));

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _SocsoTableMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

////            List<SelectListItem> carumanList = new List<SelectListItem>();

////            carumanList = new SelectList(
////                db.tbl_JenisCaruman
////                    .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID &&
////                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodCaruman)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }),
////                "Value", "Text").ToList();
////            carumanList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.CarumanList = carumanList;

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _SocsoTableMaintenanceCreate(MasterModels.tbl_SocsoViewModelCreate socsoViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tbl_Socso socso = new MasterModels.tbl_Socso();

////                    PropertyCopy.Copy(socso, socsoViewModelCreate);

////                    socso.fld_NegaraID = (int)NegaraID;
////                    socso.fld_SyarikatID = (int)SyarikatID;
////                    socso.fld_Deleted = false;

////                    db.tbl_Socso.Add(socso);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "socsoTableMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_SocsoTableMaintenance",
////                        controller = "Maintenance",
////                        paramName = "SocsoList",
////                        paramValue = socsoViewModelCreate.fld_KodCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _SocsoTableMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var socsoTableData = db.tbl_Socso.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            MasterModels.tbl_SocsoViewModelEdit socsoViewModelEdit = new tbl_SocsoViewModelEdit();

////            PropertyCopy.Copy(socsoViewModelEdit, socsoTableData);

////            return PartialView(socsoViewModelEdit);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _SocsoTableMaintenanceEdit(MasterModels.tbl_SocsoViewModelEdit socsoViewModelEdit)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var socsoTableData = db.tbl_Socso.SingleOrDefault(
////                        x => x.fld_ID == socsoViewModelEdit.fld_ID && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    socsoTableData.fld_KdrLower = socsoViewModelEdit.fld_KdrLower;
////                    socsoTableData.fld_KdrUpper = socsoViewModelEdit.fld_KdrUpper;
////                    socsoTableData.fld_SocsoPkj = socsoViewModelEdit.fld_SocsoPkj;
////                    socsoTableData.fld_SocsoMjkn = socsoViewModelEdit.fld_SocsoMjkn;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "socsoTableMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_SocsoTableMaintenance",
////                        controller = "Maintenance",
////                        paramName = "socsoList",
////                        paramValue = socsoTableData.fld_KodCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _SocsoTableMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var socsoTableData = db.tbl_Socso.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(socsoTableData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _SocsoTableMaintenanceDelete(MasterModels.tbl_Socso socso)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var socsoTableData = db.tbl_Socso.SingleOrDefault(
////                    x => x.fld_ID == socso.fld_ID && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (socsoTableData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                socsoTableData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "socsoTableMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_SocsoTableMaintenance",
////                    controller = "Maintenance",
////                    paramName = "socsoList",
////                    paramValue = socsoTableData.fld_KodCaruman
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult SocsoContributionMaintenanceInUse(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _SocsoContributionMaintenanceInUse(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_JenisCaruman>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

////            var socsoContributionData = db.tbl_JenisCaruman
////                .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = socsoContributionData
////                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = socsoContributionData
////                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = socsoContributionData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = socsoContributionData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _SocsoContributionMaintenanceInUseEdit(List<int> carumanSocsoID)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            try
////            {
////                var socsoCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

////                var socsoContributionData = db.tbl_JenisCaruman
////                    .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID &&
////                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false);

////                var warganegaraCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                    x.fldOptConfFlag1 == "krytnlist" && x.fldOptConfFlag3 == "1" && x.fld_NegaraID == NegaraID &&
////                    x.fld_SyarikatID == SyarikatID).fldOptConfValue;

////                foreach (var socsoContribution in socsoContributionData)
////                {
////                    socsoContribution.fld_Default = false;
////                }

////                if (carumanSocsoID != null)
////                {
////                    //remove checkall value from carumanTambahanID list
////                    carumanSocsoID.Remove(0);

////                    foreach (var id in carumanSocsoID)
////                    {
////                        var selectedSocsoContributionData = db.tbl_JenisCaruman.SingleOrDefault(x => x.fld_JenisCarumanID == id);

////                        selectedSocsoContributionData.fld_Default = true;
////                    }
////                }

////                db.SaveChanges();

////                var connectionData = db.tblConnections.Where(x =>
////                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

////                foreach (var connection in connectionData)
////                {
////                    var wilayahID = connection.wilayahID;
////                    string hostEstate, catalogEstate, userEstate, passEstate = "";
////                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate,
////                        wilayahID, SyarikatID.Value, NegaraID.Value);
////                    MVC_SYSTEM_Models estateConnection =
////                        MVC_SYSTEM_Models.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

////                    var workerData = estateConnection.tbl_Pkjmast.Where(x =>
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Kdaktf == "1");

////                    var activeSocsoContributionData = db.tbl_JenisCaruman.Where(x =>
////                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_Deleted == false &&
////                        x.fld_Default == true);

////                    foreach (var worker in workerData)
////                    {
////                        if (worker.fld_Kdrkyt == warganegaraCode)
////                        {
////                            DateDiff workerAge = new DateDiff(Convert.ToDateTime(worker.fld_Trlhr).AddDays(-1),
////                                DateTime.Now);

////                            foreach (var activeSocsoContribution in activeSocsoContributionData)
////                            {
////                                if (activeSocsoContribution.fld_UmurLower <= workerAge.Years &&
////                                    activeSocsoContribution.fld_UmurUpper >= workerAge.Years)
////                                {
////                                    worker.fld_KodSocso = activeSocsoContribution.fld_KodCaruman;
////                                }
////                            }
////                        }

////                        else
////                        {
////                            worker.fld_KodSocso = null;
////                        }
////                    }

////                    estateConnection.SaveChanges();
////                    estateConnection.Dispose();
////                }

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgUpdate,
////                    status = "success",
////                    checkingdata = "1"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KwspMaintenance(string KwspList = "", int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            List<SelectListItem> jnskwsp = new List<SelectListItem>();
////            jnskwsp = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "KWSP" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
////            jnskwsp.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.tbl_Kwsp>();
////            string KeteranganKwsp = "";
////            if (KwspList != "0")
////            {
////                KeteranganKwsp = db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "KWSP" && x.fld_Deleted == false && x.fld_KodCaruman == KwspList).Select(s => s.fld_Keterangan).FirstOrDefault();
////                records.Content = dbview.tbl_Kwsp.Where(x => x.fld_KodCaruman == KwspList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = dbview.tbl_Kwsp.Where(x => x.fld_KodCaruman == KwspList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                db.Dispose();
////                dbview.Dispose();
////            }
////            ViewBag.JnsKwsp = KeteranganKwsp;
////            ViewBag.KwspList = jnskwsp;
////            ViewBag.Datacount = records.TotalRecords;
////            return View(records);
////        }

////        public ActionResult KwspMaintenanceInsert()
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            List<SelectListItem> JnsKwsp = new List<SelectListItem>();
////            JnsKwsp = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "KWSP" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
////            JnsKwsp.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.fld_KodCaruman = JnsKwsp;
////            //ViewBag.fld_KodJenisAktvt = JnsAktvt;
////            db.Dispose();
////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult KwspMaintenanceInsert(MasterModels.tbl_Kwsp tbl_Kwsp)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            var checkdata = db.tbl_Kwsp.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodCaruman == tbl_Kwsp.fld_KodCaruman && x.fld_KdrLower == tbl_Kwsp.fld_KdrLower && x.fld_KdrUpper==tbl_Kwsp.fld_KdrUpper && x.fld_Deleted == false).FirstOrDefault();
////            if (checkdata == null)
////            {
////                tbl_Kwsp.fld_SyarikatID = SyarikatID;
////                tbl_Kwsp.fld_NegaraID = NegaraID;
////                tbl_Kwsp.fld_Deleted = false;
////                db.tbl_Kwsp.Add(tbl_Kwsp);
////                db.SaveChanges();
////                db.Dispose();
////                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
////                return Json(new { success = true, msg = GlobalResEstate.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
////            }
////            else
////            {
////                return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////            }
////        }

////        public ActionResult KwspMaintenanceUpdate(int? id)
////        {
////            if (id == null)
////            {
////                return RedirectToAction("KwspMaintenance");
////            }
////            MasterModels.tbl_Kwsp tbl_Kwsp = db.tbl_Kwsp.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_Kwsp == null)
////            {
////                return RedirectToAction("KwspMaintenance");
////            }
////            db.Dispose();
////            return PartialView(tbl_Kwsp);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult KwspMaintenanceUpdate(MasterModels.tbl_Kwsp tbl_Kwsp)
////        {
////            var getdata = db.tbl_Kwsp.Where(w => w.fld_ID == tbl_Kwsp.fld_ID).FirstOrDefault();

////            getdata.fld_KdrLower = tbl_Kwsp.fld_KdrLower;
////            getdata.fld_KdrUpper = tbl_Kwsp.fld_KdrUpper;
////            getdata.fld_Mjkn = tbl_Kwsp.fld_Mjkn;
////            getdata.fld_Pkj = tbl_Kwsp.fld_Pkj;

////            db.Entry(getdata).State = EntityState.Modified;
////            db.SaveChanges();
////            db.Dispose();
////            return Json(new { success = true, msg = GlobalResEstate.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////        }

////        public ActionResult KwspMaintenanceDelete(int? id)
////        {
////            if (id == null)
////            {
////                return RedirectToAction("KwspMaintenance");
////            }
////            MasterModels.tbl_Kwsp tbl_Kwsp = db.tbl_Kwsp.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_Kwsp == null)
////            {
////                return RedirectToAction("KwspMaintenance");
////            }
////            db.Dispose();
////            return PartialView(tbl_Kwsp);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult KwspMaintenanceDelete(MasterModels.tbl_Kwsp tbl_Kwsp)
////        {
////            errorlog geterror = new errorlog();
////            try
////            {
////                //MasterModels.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
////                if (tbl_Kwsp == null)
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////                }
////                else
////                {
////                    var getdata = db.tbl_Kwsp.Where(x => x.fld_ID == tbl_Kwsp.fld_ID && x.fld_NegaraID == tbl_Kwsp.fld_NegaraID && x.fld_SyarikatID == tbl_Kwsp.fld_SyarikatID && x.fld_Deleted == false).FirstOrDefault();
////                    getdata.fld_Deleted = true;
////                    db.Entry(getdata).State = EntityState.Modified;
////                    //db.tbl_UpahMenuai.Remove(tbl_UpahMenuai);
////                    db.SaveChanges();
////                    db.Dispose();
////                    return Json(new { success = true, msg = GlobalResEstate.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////                }
////            }
////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new { success = true, msg = GlobalResEstate.msgError, status = "danger", checkingdata = "1" });
////            }
////        }

////        public ActionResult SocsoMaintenance(string SocsoList = "", int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            List<SelectListItem> jnsSocso = new List<SelectListItem>();
////            jnsSocso = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "SOCSO" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
////            jnsSocso.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.tbl_Socso>();

////            if (SocsoList != "0")
////            {
////                records.Content = dbview.tbl_Socso.Where(x => x.fld_KodCaruman == SocsoList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = dbview.tbl_Socso.Where(x => x.fld_KodCaruman == SocsoList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                db.Dispose();
////                dbview.Dispose();
////            }

////            ViewBag.SocsoList = jnsSocso;
////            ViewBag.Datacount = records.TotalRecords;
////            return View(records);
////        }

////        public ActionResult SocsoMaintenanceInsert()
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            List<SelectListItem> JnsSocso = new List<SelectListItem>();
////            JnsSocso = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "SOCSO" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
////            JnsSocso.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.fld_KodCaruman = JnsSocso;
////            //ViewBag.fld_KodJenisAktvt = JnsAktvt;
////            db.Dispose();
////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult SocsoMaintenanceInsert(MasterModels.tbl_Socso tbl_Socso)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            var checkdata = db.tbl_Socso.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodCaruman == tbl_Socso.fld_KodCaruman && x.fld_KdrLower == tbl_Socso.fld_KdrLower && x.fld_KdrUpper == tbl_Socso.fld_KdrUpper && x.fld_Deleted == false).FirstOrDefault();
////            if (checkdata == null)
////            {
////                tbl_Socso.fld_SyarikatID = SyarikatID;
////                tbl_Socso.fld_NegaraID = NegaraID;
////                tbl_Socso.fld_Deleted = false;
////                db.tbl_Socso.Add(tbl_Socso);
////                db.SaveChanges();
////                db.Dispose();
////                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
////                return Json(new { success = true, msg = GlobalResEstate.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
////            }
////            else
////            {
////                return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////            }
////        }

////        public ActionResult SocsoMaintenanceUpdate(int? id)
////        {
////            if (id == null)
////            {
////                return RedirectToAction("SocsoMaintenance");
////            }
////            MasterModels.tbl_Socso tbl_Socso = db.tbl_Socso.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_Socso == null)
////            {
////                return RedirectToAction("SocsoMaintenance");
////            }
////            db.Dispose();
////            return PartialView(tbl_Socso);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult SocsoMaintenanceUpdate(MasterModels.tbl_Socso tbl_Socso)
////        {
////            var getdata = db.tbl_Socso.Where(w => w.fld_ID == tbl_Socso.fld_ID).FirstOrDefault();

////            getdata.fld_KdrLower = tbl_Socso.fld_KdrLower;
////            getdata.fld_KdrUpper = tbl_Socso.fld_KdrUpper;
////            getdata.fld_SocsoMjkn = tbl_Socso.fld_SocsoMjkn;
////            getdata.fld_SocsoPkj = tbl_Socso.fld_SocsoMjkn;

////            db.Entry(getdata).State = EntityState.Modified;
////            db.SaveChanges();
////            db.Dispose();
////            return Json(new { success = true, msg = GlobalResEstate.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////        }

////        public ActionResult SocsoMaintenanceDelete(int? id)
////        {
////            if (id == null)
////            {
////                return RedirectToAction("SocsoMaintenance");
////            }
////            MasterModels.tbl_Socso tbl_Socso = db.tbl_Socso.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_Socso == null)
////            {
////                return RedirectToAction("SocsoMaintenance");
////            }
////            db.Dispose();
////            return PartialView(tbl_Socso);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult SocsoMaintenanceDelete(MasterModels.tbl_Socso tbl_Socso)
////        {
////            errorlog geterror = new errorlog();
////            try
////            {
////                //MasterModels.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
////                if (tbl_Socso == null)
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////                }
////                else
////                {
////                    var getdata = db.tbl_Socso.Where(x => x.fld_ID == tbl_Socso.fld_ID && x.fld_NegaraID == tbl_Socso.fld_NegaraID && x.fld_SyarikatID == tbl_Socso.fld_SyarikatID && x.fld_Deleted == false).FirstOrDefault();
////                    getdata.fld_Deleted = true;
////                    db.Entry(getdata).State = EntityState.Modified;
////                    //db.tbl_UpahMenuai.Remove(tbl_UpahMenuai);
////                    db.SaveChanges();
////                    db.Dispose();
////                    return Json(new { success = true, msg = GlobalResEstate.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////                }
////            }
////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new { success = true, msg = GlobalResEstate.msgError, status = "danger", checkingdata = "1" });
////            }
////        }

////        public ActionResult ProductivityMaintenance(string KategoriList = "", int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
////        {
////            ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            List<SelectListItem> jnskategori = new List<SelectListItem>();
////            jnskategori = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1== "jenisPelan" && x.fld_NegaraID==NegaraID && x.fld_SyarikatID==SyarikatID && x.fldDeleted==false).OrderBy(o => o.fldOptConfValue).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            jnskategori.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_UpahAktiviti>();

////            if (KategoriList != "0")
////            {
////                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_Kategori == KategoriList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = db.tbl_UpahAktiviti.Where(x => x.fld_Kategori == KategoriList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                db.Dispose();
////                dbview.Dispose();
////            }

////            ViewBag.KategoriList = jnskategori;
////            ViewBag.Datacount = records.TotalRecords;
////            return View(records);
////        }

////        //public ActionResult ProductivityMaintenanceInsert()
////        //{

////        //}

////        public ActionResult ProductivityMaintenanceUpdate(int? id)
////        {
////            if (id == null)
////            {
////                return RedirectToAction("ProductivityMaintenance");
////            }
////            MasterModels.tbl_UpahAktiviti tbl_UpahAktiviti = db.tbl_UpahAktiviti.Where(w => w.fld_ID == id).FirstOrDefault();
////            if (tbl_UpahAktiviti == null)
////            {
////                return RedirectToAction("ProductivityMaintenance");
////            }
////            db.Dispose();
////            return PartialView(tbl_UpahAktiviti);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult ProductivityMaintenanceUpdate(MasterModels.tbl_UpahAktiviti tbl_UpahAktiviti)
////        {
////            var getdata = db.tbl_UpahAktiviti.Where(w => w.fld_ID == tbl_UpahAktiviti.fld_ID).FirstOrDefault();

////            //getdata.fld_BonusProduktvt = tbl_UpahAktiviti.fld_BonusProduktvt;
////            //getdata.fld_BonusKehadiran = tbl_UpahAktiviti.fld_BonusKehadiran;
////            //getdata.fld_BonusKualiti = tbl_UpahAktiviti.fld_BonusKualiti;

////            db.Entry(getdata).State = EntityState.Modified;
////            db.SaveChanges();
////            db.Dispose();
////            return Json(new { success = true, msg = GlobalResEstate.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
////        }

////        //public ActionResult ProductivityMaintenanceDelete()
////        //{

////        //}

////        public ActionResult WorkerKategoryMaintenance(int page = 1, string sort = "fldOptConfID", string sortdir = "ASC")
////        {
////            //designation
////            ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            //List<SelectListItem> jnsSocso = new List<SelectListItem>();
////            //jnsSocso = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "SOCSO" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
////            //jnsSocso.Insert(0, (new SelectListItem { Text = "Sila Pilih", Value = "0" }));

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.tblOptionConfigsWeb>();

////            records.Content = dbview.tblOptionConfigsWeb.Where(x => x.fldOptConfFlag1 == "designation" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false)
////                      .OrderBy(sort + " " + sortdir)
////                      .Skip((page - 1) * pageSize)
////                      .Take(pageSize)
////                      .ToList();

////            records.TotalRecords = dbview.tblOptionConfigsWeb.Where(x => x.fldOptConfFlag1 == "designation" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false).Count();
////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            db.Dispose();
////            dbview.Dispose();

////            //ViewBag.SocsoList = jnsSocso;
////            ViewBag.Datacount = records.TotalRecords;
////            return View(records);
////        }

////        public ActionResult WorkerKategoryMaintenanceInsert()
////        {
            
////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult WorkerKategoryMaintenanceInsert(MasterModels.tblOptionConfigsWeb tblOptionConfigsWeb)
////        {

////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            var checkdata = db.tblOptionConfigsWebs.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted==false && x.fldOptConfDesc==tblOptionConfigsWeb.fldOptConfDesc ).FirstOrDefault();
////            if (checkdata == null)
////            {
////                string datacode = db.tblOptionConfigsWebs.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfID).Select(s => s.fldOptConfValue).LastOrDefault();
////                int newcode = int.Parse(datacode) + 1;
////                tblOptionConfigsWeb.fldOptConfValue = newcode.ToString();
////                tblOptionConfigsWeb.fldOptConfFlag1 = "designation";
////                tblOptionConfigsWeb.fld_SyarikatID = SyarikatID;
////                tblOptionConfigsWeb.fld_NegaraID = NegaraID;
////                tblOptionConfigsWeb.fldDeleted = false;
////                db.tblOptionConfigsWebs.Add(tblOptionConfigsWeb);
////                db.SaveChanges();
////                db.Dispose();
////                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
////                return Json(new { success = true, msg = GlobalResEstate.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
////            }
////            else
////            {
////                return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////            }
////        }

////        //public ActionResult WorkerKategoryMaintenanceUpdate(int? id)
////        //{
////        //    if (id == null)
////        //    {
////        //        return RedirectToAction("WorkerKategoryMaintenance");
////        //    }
////        //    MasterModels.tbl_Socso tbl_Socso = db.tbl_Socso.Where(w => w.fld_ID == id).FirstOrDefault();
////        //    if (tbl_Socso == null)
////        //    {
////        //        return RedirectToAction("WorkerKategoryMaintenance");
////        //    }
////        //    db.Dispose();
////        //    return PartialView(tbl_Socso);
////        //}

////        public JsonResult GenerateKodAktvt(string jnsAktvt)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            string lastcode = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodJenisAktvt == jnsAktvt && x.fld_Deleted == false).OrderByDescending(o => o.fld_KodAktvt.Trim()).Select(s => s.fld_KodAktvt).FirstOrDefault();
////            int generated = int.Parse(lastcode) + 1;
////            string newcode = generated.ToString("0000");
////            return Json(newcode);

////        }

////        //public ActionResult Upload(FormCollection formCollection)
////        //{
////        //    if (Request != null)
////        //    {
////        //        HttpPostedFileBase file = Request.Files["UploadedFile"];
////        //        if ((file != null) && (file.ContentLength > 0) && !string.IsNullOrEmpty(file.FileName))
////        //        {
////        //            string fileName = file.FileName;
////        //            string fileContentType = file.ContentType;
////        //            byte[] fileBytes = new byte[file.ContentLength];
////        //            var data = file.InputStream.Read(fileBytes, 0, Convert.ToInt32(file.ContentLength));
////        //            var usersList = new List<Models.tbl_Skb>();
////        //            using (var package = new ExcelPackage(file.InputStream))
////        //            {
////        //                var currentSheet = package.Workbook.Worksheets;
////        //                var workSheet = currentSheet.First();
////        //                var noOfCol = workSheet.Dimension.End.Column;
////        //                var noOfRow = workSheet.Dimension.End.Row;
////        //                for (int rowIterator = 2; rowIterator <= noOfRow; rowIterator++)
////        //                {
////        //                    var user = new Models.tbl_Skb();
////        //                    user.fld_Bulan = workSheet.Cells[rowIterator, 1].Value.ToString();
////        //                    user.fld_NoSkb = workSheet.Cells[rowIterator, 2].Value.ToString();
////        //                    usersList.Add(user);
////        //                }
////        //            }
////        //        }
////        //    }
////        //    return View();
////        //}

////        public ActionResult PaidLeaveCategoryMaintenance(string filter, int page = 1, string sort = "fld_KodCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _PaidLeaveCategoryMaintenance(string filter, int page = 1, string sort = "fld_KodCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_CutiKategori>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var paidLeaveCategoryData = db.tbl_CutiKategori
////                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = paidLeaveCategoryData
////                    .Where(x => x.fld_KodCuti.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_KeteranganCuti.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = paidLeaveCategoryData
////                    .Count(x => x.fld_KodCuti.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_KeteranganCuti.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = paidLeaveCategoryData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = paidLeaveCategoryData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _PaidLeaveCategoryMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            MasterModels.tbl_CutiKategoriViewModelCreate cutiKategori = new MasterModels.tbl_CutiKategoriViewModelCreate();

////            var paidLeaveCode = db.tblOptionConfigsWebs
////                .SingleOrDefault(
////                    x => x.fldOptConfFlag1 == "cutiBerbayar" &&
////                         x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                         x.fldDeleted == false)
////                .fldOptConfValue;

////            var getCurrentRunningLeaveAndActivityCode = dbview.tblOptionConfigsWeb
////                .Where(x => x.fldOptConfFlag1 == "cuti" && x.fldOptConfFlag2 == "xhadirkerja" &&
////                            x.fldOptConfValue.Contains(paidLeaveCode) && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfValue)
////                .FirstOrDefault();

////            if (getCurrentRunningLeaveAndActivityCode == null)
////            {
////                cutiKategori.fld_KodCuti = db.tblOptionConfigsWebs
////                                               .SingleOrDefault(
////                                                   x => x.fldOptConfFlag1 == "cutiBerbayar" &&
////                                                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                                                        x.fldDeleted == false)
////                                               .fldOptConfValue + "01";
////                cutiKategori.fld_KodAktvt = db.tblOptionConfigsWebs
////                                                .SingleOrDefault(
////                                                    x => x.fldOptConfFlag1 == "cutiBerbayar" &&
////                                                         x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                                                         x.fldDeleted == false)
////                                                .fldOptConfFlag2;
////            }

////            else
////            {
////                var getCurrentRunningActivityCode = db.tbl_CutiKategori
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderByDescending(o => o.fld_KodAktvt)
////                    .Select(s => s.fld_KodAktvt).FirstOrDefault();

////                var generateCurrentRunningLeaveCode = Convert.ToInt32(
////                                                          getCurrentRunningLeaveAndActivityCode.fldOptConfValue
////                                                              .Substring(db
////                                                                  .tblOptionConfigsWebs
////                                                                  .SingleOrDefault(
////                                                                      x => x.fldOptConfFlag1 == "cutiBerbayar" &&
////                                                                           x.fld_NegaraID == NegaraID &&
////                                                                           x.fld_SyarikatID == SyarikatID &&
////                                                                           x.fldDeleted == false)
////                                                                  .fldOptConfValue.Length)) + 1;

////                cutiKategori.fld_KodCuti = paidLeaveCode + generateCurrentRunningLeaveCode.ToString("00");

////                var generateCurrentRunningActivityCode = Convert.ToInt32(getCurrentRunningActivityCode) + 1;

////                cutiKategori.fld_KodAktvt = generateCurrentRunningActivityCode.ToString();
////            }

////            List<SelectListItem> waktuBayaranCutiList = new List<SelectListItem>();

////            waktuBayaranCutiList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "wktuBayaranCuti" && x.fldDeleted == false &&
////                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            waktuBayaranCutiList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "", Selected = true });

////            ViewBag.WaktuBayaranCutiList = waktuBayaranCutiList;

////            List<SelectListItem> GLList = new List<SelectListItem>();

////            GLList = new SelectList(
////                db.tbl_Lejar
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodLejar)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
////                "Value", "Text").ToList();
////            GLList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.GLList = GLList;

////            return PartialView(cutiKategori);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PaidLeaveCategoryMaintenanceCreate(MasterModels.tbl_CutiKategoriViewModelCreate cutiKategoriViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            using (var dbContextTransaction = db.Database.BeginTransaction())
////            {
////                try
////                {
////                    if (ModelState.IsValid)
////                    {
////                        MasterModels.tbl_CutiKategori cutiKategori = new MasterModels.tbl_CutiKategori();

////                        cutiKategori.fld_KodCuti = cutiKategoriViewModelCreate.fld_KodCuti;
////                        cutiKategori.fld_KeteranganCuti = cutiKategoriViewModelCreate.fld_KeteranganCuti.ToUpper();
////                        cutiKategori.fld_WaktuBayaranCuti = Convert.ToByte(cutiKategoriViewModelCreate.fld_WaktuBayaranCuti);
////                        cutiKategori.fld_KodGL = cutiKategoriViewModelCreate.fld_KodGL;
////                        cutiKategori.fld_KodAktvt = cutiKategoriViewModelCreate.fld_KodAktvt;
////                        cutiKategori.fld_Deleted = false;
////                        cutiKategori.fld_NegaraID = NegaraID;
////                        cutiKategori.fld_SyarikatID = SyarikatID;

////                        db.tbl_CutiKategori.Add(cutiKategori);
////                        db.SaveChanges();

////                        MasterModels.tblOptionConfigsWeb tblOptionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////                        tblOptionConfigsWeb.fldOptConfValue = cutiKategori.fld_KodCuti;
////                        tblOptionConfigsWeb.fldOptConfDesc = cutiKategori.fld_KeteranganCuti.ToUpper();
////                        tblOptionConfigsWeb.fldOptConfFlag1 = "cuti";
////                        tblOptionConfigsWeb.fldOptConfFlag2 = "xhadirkerja";
////                        tblOptionConfigsWeb.fldDeleted = false;
////                        tblOptionConfigsWeb.fld_NegaraID = NegaraID;
////                        tblOptionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(tblOptionConfigsWeb);
////                        db.SaveChanges();

////                        dbContextTransaction.Commit();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "paidLeaveCategoryMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_PaidLeaveCategoryMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }

////                    else
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorData,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }
////                }

////                catch (Exception ex)
////                {
////                    dbContextTransaction.Rollback();
////                    geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgError,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }

////                finally
////                {
////                    db.Dispose();
////                }
////            }
////        }

////        public ActionResult _PaidLeaveCategoryMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            MasterModels.tbl_CutiKategori cutiKategori = db.tbl_CutiKategori
////                .Single(x => x.fld_CutiKategoriID == id && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

////            List<SelectListItem> waktuBayaranCutiList = new List<SelectListItem>();

////            waktuBayaranCutiList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "wktuBayaranCuti" && x.fldDeleted == false &&
////                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            waktuBayaranCutiList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "", Selected = true });

////            ViewBag.WaktuBayaranCutiList = waktuBayaranCutiList;

////            List<SelectListItem> GLList = new List<SelectListItem>();

////            GLList = new SelectList(
////                db.tbl_Lejar
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodLejar)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
////                "Value", "Text").ToList();
////            GLList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.GLList = GLList;


////            return PartialView(cutiKategori);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PaidLeaveCategoryMaintenanceEdit(MasterModels.tbl_CutiKategori cutiKategori)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var paidLeaveData = db.tbl_CutiKategori
////                        .Single(x => x.fld_CutiKategoriID == cutiKategori.fld_CutiKategoriID &&
////                                     x.fld_NegaraID == NegaraID &&
////                                     x.fld_SyarikatID == SyarikatID);

////                    paidLeaveData.fld_KeteranganCuti = cutiKategori.fld_KeteranganCuti.ToUpper();
////                    paidLeaveData.fld_WaktuBayaranCuti = cutiKategori.fld_WaktuBayaranCuti;
////                    paidLeaveData.fld_KodGL = cutiKategori.fld_KodGL;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "paidLeaveCategoryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PaidLeaveCategoryMaintenance",
////                        controller = "Maintenance"
////                    });

////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }

////        }

////        public ActionResult _PaidLeaveCategoryMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_CutiKategori cutiKategori = db.tbl_CutiKategori
////                .Single(x => x.fld_CutiKategoriID == id && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////            return PartialView(cutiKategori);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PaidLeaveCategoryMaintenanceDelete(MasterModels.tbl_CutiKategori cutiKategori)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            using (var dbContextTransaction = db.Database.BeginTransaction())
////            {
////                try
////                {
////                    MasterModels.tbl_CutiKategori paidLeaveData = db.tbl_CutiKategori
////                        .Single(x => x.fld_CutiKategoriID == cutiKategori.fld_CutiKategoriID &&
////                                     x.fld_NegaraID == NegaraID &&
////                                     x.fld_SyarikatID == SyarikatID);

////                    db.SaveChanges();

////                    MasterModels.tblOptionConfigsWeb paidLeaveDataInConfigsWeb = db.tblOptionConfigsWebs
////                        .Single(x => x.fldOptConfFlag1 == "cuti" && x.fldOptConfFlag2 == "xhadirkerja" &&
////                                     x.fldOptConfValue == cutiKategori.fld_KodCuti && x.fld_NegaraID == NegaraID &&
////                                     x.fld_SyarikatID == SyarikatID);

////                    bool status = true;

////                    var message = "";
////                    if (paidLeaveData.fld_Deleted == paidLeaveDataInConfigsWeb.fldDeleted)
////                    {
////                        if (paidLeaveData.fld_Deleted == false && paidLeaveDataInConfigsWeb.fldDeleted == false)
////                        {
////                            status = true;
////                            message = GlobalResEstate.msgDelete2;
////                        }

////                        else
////                        {
////                            status = false;
////                            message = GlobalResEstate.msgUndelete;
////                        }

////                        paidLeaveData.fld_Deleted = status;
////                        paidLeaveDataInConfigsWeb.fldDeleted = status;
////                    }

////                    else
////                    {
////                        dbContextTransaction.Rollback();
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgError,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    db.SaveChanges();

////                    dbContextTransaction.Commit();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgDelete2,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "paidLeaveCategoryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PaidLeaveCategoryMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                catch (Exception ex)
////                {
////                    dbContextTransaction.Rollback();
////                    geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgError,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }

////                finally
////                {
////                    db.Dispose();
////                }
////            }
////        }

////        public ActionResult PaidLeaveAllocationMaintenance(int page = 1, string sort = "fld_JenisCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            List<SelectListItem> leaveCategoryList = new List<SelectListItem>();

////            var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == "cutiUmumFlag" &&
////                x.fldDeleted == false).fldOptConfValue;

////            leaveCategoryList = new SelectList(
////                db.tbl_CutiKategori
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                                x.fld_KodCuti != publicHolidayCode && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodCuti)
////                    .Select(
////                        s => new SelectListItem {Value = s.fld_KodCuti, Text = s.fld_KeteranganCuti}),
////                "Value", "Text").ToList();
////            leaveCategoryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.LeaveCategoryList = leaveCategoryList;

////            return View();
////        }

////        //public ActionResult PaidLeaveAllocationTest()
////        //{
////        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
////        //    string host, catalog, user, pass = "";
////        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////        //        NegaraID.Value);
////        //    MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

////        //    ViewBag.Maintenance = "class = active";

////        //    int year = DateTime.Now.Year;

////        //    ////dummy starting working date
////        //    //DateTime startingDay = new DateTime(2018, 1, 1);

////        //    DateTime lastDay = new DateTime(year, 12, 31);

////        //    var app2 = dbr.tbl_Pkjmast.Where(x => x.fld_Nopkj == nopkj).FirstOrDefault();
////        //    app2.fld_Kdaktf = "1";
////        //    app2.fld_StatusAkaun = "1";
////        //    app2.fld_StatusApproved = 1;
////        //    app2.fld_ActionBy = User.Identity.Name;
////        //    app2.fld_ActionDate = DateTime.Now;

////        //    //edited
////        //    //DateDiff dateDiff = new DateDiff(Convert.ToDateTime(startingDay).AddDays(-1), lastDay);
////        //    //original
////        //    //DateDiff dateDiff = new DateDiff(Convert.ToDateTime(workerData.fld_Trmlkj).AddDays(-1), lastDay);
////        //    var kodCutiUmum = db.tblOptionConfigsWebs
////        //        .SingleOrDefault(x => x.fldOptConfFlag1 == "cutiUmumFlag" && x.fldDeleted == false
////        //                                                                     && x.fld_NegaraID == 1 &&
////        //                                                                     x.fld_SyarikatID == 1).fldOptConfValue;

////        //    var leaveCategoryData = db.tbl_CutiKategori.Where(x =>
////        //        x.fld_KodCuti != kodCutiUmum && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////        //        x.fld_Deleted == false);

////        //    foreach (var leaveCategory in leaveCategoryData)
////        //    {
////        //        var leaveAllocationData = db.tbl_CutiMaintenance.SingleOrDefault(x =>
////        //                x.fld_JenisCuti == leaveCategory.fld_KodCuti && x.fld_LowerLimit <= dateDiff.Months &&
////        //                x.fld_LowerLimit <= dateDiff.Months && x.fld_UpperLimit >= dateDiff.Months &&
////        //                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////        //            .fld_PeruntukkanCuti;

////        //        Models.tbl_CutiPeruntukan CutiPeruntukanTahunan = new Models.tbl_CutiPeruntukan();

////        //        //CutiPeruntukanTahunan.fld_NoPkj = workerData.fld_Nopkj;
////        //        CutiPeruntukanTahunan.fld_NoPkj = "Dummy";
////        //        CutiPeruntukanTahunan.fld_JumlahCuti = leaveAllocationData;
////        //        CutiPeruntukanTahunan.fld_KodCuti = leaveCategory.fld_KodCuti;
////        //        CutiPeruntukanTahunan.fld_JumlahCutiDiambil = 0;
////        //        CutiPeruntukanTahunan.fld_Tahun = Convert.ToInt16(year);
////        //        CutiPeruntukanTahunan.fld_NegaraID = NegaraID;
////        //        CutiPeruntukanTahunan.fld_SyarikatID = SyarikatID;
////        //        CutiPeruntukanTahunan.fld_WilayahID = WilayahID;
////        //        CutiPeruntukanTahunan.fld_LadangID = LadangID;
////        //        CutiPeruntukanTahunan.fld_Deleted = false;

////        //        dbr.tbl_CutiPeruntukan.Add(CutiPeruntukanTahunan);
////        //    }

////        //    //calculate public holiday
////        //    var kodNegeriLadang = db.tbl_Ladang
////        //        .Where(x => x.fld_ID == LadangID)
////        //        .Select(s => s.fld_KodNegeri)
////        //        .Single();

////        //    //use this
////        //    //var CutiUmum = db.tbl_CutiUmum
////        //    //    .Count(x => x.fld_Negeri == kodNegeriLadang && x.fld_Tahun == year && x.fld_Deleted == false
////        //    //                && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_IsSelected == true &&
////        //    //                x.fld_TarikhCuti > workerData.fld_Trmlkj);

////        //    var cutiUmumCount = db.tbl_CutiUmum
////        //        .Count(x => x.fld_Negeri == kodNegeriLadang && x.fld_Tahun == year && x.fld_Deleted == false
////        //                    && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_IsSelected == true &&
////        //                    x.fld_TarikhCuti >= startingDay);

////        //    Models.tbl_CutiPeruntukan CutiPeruntukanUmum = new Models.tbl_CutiPeruntukan();

////        //    //CutiPeruntukanUmum.fld_NoPkj = workerData.fld_Nopkj;
////        //    CutiPeruntukanUmum.fld_NoPkj = "Dummy";
////        //    CutiPeruntukanUmum.fld_JumlahCuti = cutiUmumCount;
////        //    CutiPeruntukanUmum.fld_KodCuti = kodCutiUmum;
////        //    CutiPeruntukanUmum.fld_JumlahCutiDiambil = 0;
////        //    CutiPeruntukanUmum.fld_Tahun = Convert.ToInt16(year);
////        //    CutiPeruntukanUmum.fld_NegaraID = NegaraID;
////        //    CutiPeruntukanUmum.fld_SyarikatID = SyarikatID;
////        //    CutiPeruntukanUmum.fld_WilayahID = WilayahID;
////        //    CutiPeruntukanUmum.fld_LadangID = LadangID;
////        //    CutiPeruntukanUmum.fld_Deleted = false;
////        //    dbr.tbl_CutiPeruntukan.Add(CutiPeruntukanUmum);

////        //    var jenisMingguNegeri = db.tbl_MingguNegeri.SingleOrDefault(x =>
////        //        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_NegeriID == kodNegeriLadang &&
////        //        x.fld_Deleted == false).fld_JenisMinggu;

////        //    var dayOfWeek = Enum.Parse(typeof(DayOfWeek), jenisMingguNegeri.ToString());

////        //    var cutiUmum = db.tbl_CutiUmum
////        //                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////        //                            x.fld_Deleted == false && x.fld_Negeri == kodNegeriLadang &&
////        //                            x.fld_Tahun == year &&
////        //                            x.fld_TarikhCuti.Value.Month == startingDay.Month)
////        //                .ToList();

////        //    //First We find out last date of month
////        //    //DateTime today = DateTime.Today;
////        //    DateTime endOfMonth = new DateTime(year, Convert.ToInt32(startingDay.Month),
////        //        DateTime.DaysInMonth(year, Convert.ToInt32(startingDay.Month)));

////        //    //get only last day of month
////        //    int daysInMonth = endOfMonth.Day;

////        //    int totalLeaveInAMonth = 0;

////        //    for (int i = 0; i < daysInMonth; ++i)
////        //    {
////        //        DateTime d = new DateTime(year, Convert.ToInt32(startingDay.Month), i + 1);

////        //        //Compare date with sunday
////        //        if (d.DayOfWeek.ToString() == dayOfWeek.ToString())
////        //        {
////        //            totalLeaveInAMonth = totalLeaveInAMonth + 1;
////        //        }
////        //    }

////        //    var workingDaysInMonth = (DateTime.DaysInMonth(year, Convert.ToInt32(startingDay.Month))) - totalLeaveInAMonth -
////        //                             cutiUmum.Count;

////        //    Models.tbl_Produktiviti Produktiviti = new Models.tbl_Produktiviti();
////        //    Produktiviti.fld_Nopkj = "Dummy";
////        //    Produktiviti.fld_HadirKerja = workingDaysInMonth;
////        //    Produktiviti.fld_Year = year;
////        //    Produktiviti.fld_Month = startingDay.Month;
////        //    Produktiviti.fld_NegaraID = NegaraID;
////        //    Produktiviti.fld_SyarikatID = SyarikatID;
////        //    Produktiviti.fld_WilayahID = WilayahID;
////        //    Produktiviti.fld_LadangID = LadangID;
////        //    Produktiviti.fld_Deleted = false;
////        //    dbr.tbl_Produktiviti.Add(Produktiviti);

////        //    return View();
////        //}

////        public ActionResult _PaidLeaveAllocationMaintenance(string LeaveCategoryList, int page = 1, string sort = "fld_LowerLimit",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            var message = "";
////            if (String.IsNullOrEmpty(LeaveCategoryList))
////            {
////                message = GlobalResEstate.msgNoPaidLeaveCategory;
////                ViewBag.Message = message;
////            }

////            else
////            {
////                message = GlobalResEstate.msgErrorSearch;
////                ViewBag.Message = message;
////            }

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.tbl_CutiMaintenance>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var leaveAllocation = dbview.tbl_CutiMaintenance
////                .Where(x => x.fld_JenisCuti == LeaveCategoryList && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            records.Content = leaveAllocation.OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = leaveAllocation
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = pageSize;

////            return View(records);
////        }

////        public ActionResult _PaidLeaveAllocationMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_CutiMaintenanceViewModelCreate cutiMaintenanceViewModelCreate = new MasterModels.tbl_CutiMaintenanceViewModelCreate();

////            List<SelectListItem> leaveCategoryList = new List<SelectListItem>();

////            var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == "cutiUmumFlag" &&
////                x.fldDeleted == false).fldOptConfValue;

////            leaveCategoryList = new SelectList(
////                db.tbl_CutiKategori
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                                x.fld_KodCuti != publicHolidayCode && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodCuti)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodCuti, Text = s.fld_KeteranganCuti }),
////                "Value", "Text").ToList();
////            leaveCategoryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.LeaveCategoryList = leaveCategoryList;

////            return PartialView(cutiMaintenanceViewModelCreate);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PaidLeaveAllocationMaintenanceCreate(MasterModels.tbl_CutiMaintenanceViewModelCreate cutiMaintenanceViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tbl_CutiMaintenance cutiMaintenance = new MasterModels.tbl_CutiMaintenance();

////                    PropertyCopy.Copy(cutiMaintenance, cutiMaintenanceViewModelCreate);

////                    cutiMaintenance.fld_NegaraID = NegaraID;
////                    cutiMaintenance.fld_SyarikatID = SyarikatID;
////                    cutiMaintenance.fld_Deleted = false;

////                    db.tbl_CutiMaintenance.Add(cutiMaintenance);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "paidLeaveAllocationMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PaidLeaveAllocationMaintenance",
////                        controller = "Maintenance",
////                        paramName = "LeaveCategoryList",
////                        paramValue = cutiMaintenance.fld_JenisCuti
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PaidLeaveAllocationMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            MasterModels.tbl_CutiMaintenance cutiMaintenance = db.tbl_CutiMaintenance
////                .SingleOrDefault(x => x.fld_CutiMaintenanceID == id && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

////            MasterModels.tbl_CutiMaintenanceViewModelEdit cutiMaintenanceViewModelEdit = new tbl_CutiMaintenanceViewModelEdit();

////            PropertyCopy.Copy(cutiMaintenanceViewModelEdit, cutiMaintenance);

////            return PartialView(cutiMaintenanceViewModelEdit);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PaidLeaveAllocationMaintenanceEdit(MasterModels.tbl_CutiMaintenanceViewModelEdit cutiMaintenanceViewModelEdit)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tbl_CutiMaintenance paidLeaveData = db.tbl_CutiMaintenance
////                        .Single(x => x.fld_CutiMaintenanceID == cutiMaintenanceViewModelEdit.fld_CutiMaintenanceID &&
////                                     x.fld_NegaraID == NegaraID &&
////                                     x.fld_SyarikatID == SyarikatID);

////                    paidLeaveData.fld_PeruntukkanCuti = cutiMaintenanceViewModelEdit.fld_PeruntukkanCuti;
////                    paidLeaveData.fld_Keterangan = cutiMaintenanceViewModelEdit.fld_Keterangan;
////                    paidLeaveData.fld_LowerLimit = cutiMaintenanceViewModelEdit.fld_LowerLimit;
////                    paidLeaveData.fld_UpperLimit = cutiMaintenanceViewModelEdit.fld_UpperLimit;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "paidLeaveAllocationMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PaidLeaveAllocationMaintenance",
////                        controller = "Maintenance",
////                        paramName = "LeaveCategoryList",
////                        paramValue = paidLeaveData.fld_JenisCuti
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PaidLeaveAllocationMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_CutiMaintenance cutiMaintenance = db.tbl_CutiMaintenance
////                .Single(x => x.fld_CutiMaintenanceID == id && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////            return PartialView(cutiMaintenance);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PaidLeaveAllocationMaintenanceDelete(MasterModels.tbl_CutiMaintenance cutiMaintenance)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                MasterModels.tbl_CutiMaintenance paidLeaveData = db.tbl_CutiMaintenance
////                    .Single(x => x.fld_CutiMaintenanceID == cutiMaintenance.fld_CutiMaintenanceID && x.fld_NegaraID == NegaraID &&
////                                 x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (paidLeaveData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                paidLeaveData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgDelete2,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "paidLeaveAllocationMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_PaidLeaveAllocationMaintenance",
////                    controller = "Maintenance",
////                    paramName = "LeaveCategoryList",
////                    paramValue = paidLeaveData.fld_JenisCuti
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PublicHolidayAllocationMaintenance(int page = 1, string sort = "fld_TarikhCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            int drpyear = 0;
////            int drprangeyear = 0;
////            int month = timezone.gettimezone().Month;

////            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
////            drprangeyear = timezone.gettimezone().Year;

////            var yearlist = new List<SelectListItem>();
////            for (var i = drpyear; i <= drprangeyear; i++)
////            {
////                if (i == timezone.gettimezone().Year)
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
////                }
////                else
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
////                }
////            }

////            ViewBag.MonthList = new SelectList(
////                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "monthlist" && x.fldDeleted == false &&
////                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
////                "fldOptConfValue", "fldOptConfDesc");

////            ViewBag.YearList = yearlist;

////            ViewBag.NegeriList = new SelectList(
////                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "negeri" && x.fldDeleted == false &&
////                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(o => o.fldOptConfDesc),
////                "fldOptConfFlag3", "fldOptConfDesc");

////            return View();
////        }

////        public ActionResult _PublicHolidayAllocationMaintenance(short? YearList, int? NegeriList, int page = 1, string sort = "fld_TarikhCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            var message = "";
////            if (String.IsNullOrEmpty(YearList.ToString()) || String.IsNullOrEmpty(NegeriList.ToString()))
////            {
////                message = GlobalResEstate.msgChoosePublicHolidayAllocation;
////                ViewBag.Message = message;
////            }

////            else
////            {
////                message = GlobalResEstate.msgErrorSearch;
////                ViewBag.Message = message;
////            }

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.vw_CutiUmumNegeri>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var publicHolidayData = dbview.vw_CutiUmumNegeri
////                .Where(x => x.fld_Tahun == YearList && x.fld_Negeri == NegeriList && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID & x.fld_Deleted == false)
////                .OrderBy(o => o.fld_TarikhCuti);

////            records.Content = publicHolidayData.ToList();

////            records.TotalRecords = publicHolidayData
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = pageSize;
////            ViewBag.TotalRecord = publicHolidayData
////                .Count();

////            return View(records);
////        }

////        public ActionResult _PublicHolidayAllocationMaintenanceEdit(List<int> leaveID, int kodNegeri, int year)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);
            
////            try
////            {
////                var publicHolidayData = db.tbl_CutiUmum.Where(x =>
////                    x.fld_NegaraID == NegaraID && x.fld_Negeri == kodNegeri && x.fld_SyarikatID == SyarikatID &&
////                    x.fld_Tahun == year &&
////                    x.fld_Deleted == false);

////                foreach (var publicHoliday in publicHolidayData)
////                {
////                    publicHoliday.fld_IsSelected = false;
////                }

////                if (leaveID != null)
////                {
////                    //remove checkall value from leaveID list
////                    leaveID.Remove(0);

////                    foreach (var id in leaveID)
////                    {
////                        var selectedPublicHolidayData = db.tbl_CutiUmum.SingleOrDefault(x => x.fld_CutiUmumID == id);

////                        selectedPublicHolidayData.fld_IsSelected = true;
////                    }
////                }

////                db.SaveChanges();

////                var connectionData = db.tblConnections.Where(x =>
////                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

////                var allLadangInNegeriData = db.tbl_Ladang.Where(x =>
////                    x.fld_KodNegeri == kodNegeri && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                    x.fld_Deleted == false).Select(s => s.fld_ID);

////                var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                        x.fldOptConfFlag1 == "cutiUmumFlag" &&
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .fldOptConfValue;

////                var selectedPublicHolidayCount = leaveID != null ? leaveID.Count : 0;

////                foreach (var connection in connectionData)
////                {
////                    var wilayahID = connection.wilayahID;
////                    string hostEstate, catalogEstate, userEstate, passEstate = "";
////                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate, wilayahID, SyarikatID.Value, NegaraID.Value);
////                    MVC_SYSTEM_Viewing estateConnection = MVC_SYSTEM_Viewing.ConnectToSqlServer(host, catalog, user, pass);

////                    foreach (var ladangID in allLadangInNegeriData)
////                    {
////                        var workerPublicHolidayData = estateConnection.tbl_CutiPeruntukan.Where(x =>
////                            x.fld_KodCuti == publicHolidayCode && x.fld_Tahun == year &&
////                            x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                            x.fld_WilayahID == wilayahID && x.fld_LadangID == ladangID && x.fld_Deleted == false);

////                        foreach (var workerPublicHoliday in workerPublicHolidayData)
////                        {
////                            workerPublicHoliday.fld_JumlahCuti = selectedPublicHolidayCount;
////                        }

////                        estateConnection.SaveChanges();
////                    }

////                    estateConnection.Dispose();
////                }

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgUpdate,
////                    status = "success",
////                    year = year,
////                    negeri = kodNegeri,
////                    checkingdata = "1"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PublicHolidayMaintenance(int page = 1, string sort = "fld_TarikhCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            List<SelectListItem> leaveCategoryList = new List<SelectListItem>();

////            int drpyear = 0;
////            int drprangeyear = 0;
////            int month = timezone.gettimezone().Month;

////            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
////            drprangeyear = timezone.gettimezone().Year;

////            var yearlist = new List<SelectListItem>();
////            for (var i = drpyear; i <= drprangeyear; i++)
////            {
////                if (i == timezone.gettimezone().Year)
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
////                }
////                else
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
////                }
////            }

////            ViewBag.MonthList = new SelectList(
////                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "monthlist" && x.fldDeleted == false &&
////                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
////                "fldOptConfValue", "fldOptConfDesc");

////            ViewBag.YearList = yearlist;

////            ViewBag.NegeriList = new SelectList(
////                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "negeri" && x.fldDeleted == false &&
////                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(o => o.fldOptConfDesc),
////                "fldOptConfFlag3", "fldOptConfDesc");

////            return View();
////        }

////        public ActionResult _PublicHolidayMaintenance(short? YearList, int? NegeriList, int page = 1, string sort = "fld_TarikhCuti",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            var message = "";
////            if (String.IsNullOrEmpty(YearList.ToString()) || String.IsNullOrEmpty(NegeriList.ToString()))
////            {
////                message = GlobalResEstate.msgChoosePublicHolidayAllocation;
////                ViewBag.Message = message;
////            }

////            else
////            {
////                message = GlobalResEstate.msgErrorSearch;
////                ViewBag.Message = message;
////            }

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<ViewingModels.vw_CutiUmumNegeri>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var publiHolidayData = dbview.vw_CutiUmumNegeri
////                .Where(x => x.fld_Tahun == YearList && x.fld_Negeri == NegeriList && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            records.Content = publiHolidayData.OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = publiHolidayData
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = pageSize;
////            ViewBag.TotalRecord = publiHolidayData
////                .Count();

////            return View(records);
////        }

////        public ActionResult _PublicHolidayMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var negeriData = db.tblOptionConfigsWebs.Where(x =>
////                x.fldOptConfFlag1 == "negeri" && x.fldDeleted == false &&
////                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            List<tblOptionConfigsWebAnnualLeaveViewModelCreate> optionConfigsWebPublicHolidayViewModelCreateList =
////                new List<tblOptionConfigsWebAnnualLeaveViewModelCreate>();

////            foreach (var negeri in negeriData)
////            {
////                MasterModels.tblOptionConfigsWebAnnualLeaveViewModelCreate optionConfigsWebPublicHolidayViewModelCreate = new MasterModels.tblOptionConfigsWebAnnualLeaveViewModelCreate();

////                PropertyCopy.Copy(optionConfigsWebPublicHolidayViewModelCreate, negeri);

////                optionConfigsWebPublicHolidayViewModelCreateList.Add(optionConfigsWebPublicHolidayViewModelCreate);
////            }

////            MasterModels.tbl_CutiUmumViewModelCreate cutiUmumViewModelCreate = new tbl_CutiUmumViewModelCreate();

////            cutiUmumViewModelCreate.fld_IsSelected = optionConfigsWebPublicHolidayViewModelCreateList;
            
////            return PartialView(cutiUmumViewModelCreate);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PublicHolidayMaintenanceCreate(MasterModels.tbl_CutiUmumViewModelCreate cutiUmumViewModelCreate, string[] fld_NegeriIDs)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid || fld_NegeriIDs.Length > 0)
////                {
////                    foreach (var negeri in fld_NegeriIDs)
////                    {
////                        MasterModels.tbl_CutiUmum cutiUmum = new MasterModels.tbl_CutiUmum();

////                        cutiUmum.fld_KeteranganCuti = cutiUmumViewModelCreate.fld_KeteranganCuti.ToUpper();
////                        cutiUmum.fld_TarikhCuti = cutiUmumViewModelCreate.fld_TarikhCuti;
////                        cutiUmum.fld_Negeri = Convert.ToInt32(negeri);
////                        cutiUmum.fld_Tahun = (short)cutiUmumViewModelCreate.fld_TarikhCuti.Value.Year;
////                        cutiUmum.fld_NegaraID = NegaraID;
////                        cutiUmum.fld_SyarikatID = SyarikatID;
////                        cutiUmum.fld_IsSelected = false;
////                        cutiUmum.fld_Deleted = false;

////                        db.tbl_CutiUmum.Add(cutiUmum);
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "publicHolidayMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PublicHolidayMaintenance",
////                        controller = "Maintenance"
////                    });

////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PublicHolidayMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var publicHolidayData = db.tbl_CutiUmum.SingleOrDefault(x => x.fld_CutiUmumID == id);

////            tbl_CutiUmumViewModelEdit cutiUmumViewModelEdit = new tbl_CutiUmumViewModelEdit();

////            PropertyCopy.Copy(cutiUmumViewModelEdit, publicHolidayData);

////            return PartialView(cutiUmumViewModelEdit);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PublicHolidayMaintenanceEdit(MasterModels.tbl_CutiUmumViewModelEdit cutiUmumViewModelEdit)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var publicHolidayData = db.tbl_CutiUmum.SingleOrDefault(x => x.fld_CutiUmumID == cutiUmumViewModelEdit.fld_CutiUmumID);

////                    publicHolidayData.fld_KeteranganCuti = cutiUmumViewModelEdit.fld_KeteranganCuti.ToUpper();
////                    publicHolidayData.fld_TarikhCuti = cutiUmumViewModelEdit.fld_TarikhCuti;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "3",
////                        div = "publicHolidayMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PublicHolidayMaintenance",
////                        controller = "Maintenance",
////                        paramName = "YearList",
////                        paramValue = publicHolidayData.fld_Tahun,
////                        paramName2 = "NegeriList",
////                        paramValue2 = publicHolidayData.fld_Negeri
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PublicHolidayMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var publicHolidayData = db.tbl_CutiUmum.SingleOrDefault(
////                x => x.fld_CutiUmumID == id);

////            return PartialView(publicHolidayData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PublicHolidayMaintenanceDelete(MasterModels.tbl_CutiUmum cutiUmum)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var publicHolidayData = db.tbl_CutiUmum.SingleOrDefault(
////                    x => x.fld_CutiUmumID == cutiUmum.fld_CutiUmumID);

////                bool status = true;

////                var message = "";
////                if (publicHolidayData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                publicHolidayData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "3",
////                    div = "publicHolidayMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_PublicHolidayMaintenance",
////                    controller = "Maintenance",
////                    paramName = "YearList",
////                    paramValue = publicHolidayData.fld_Tahun,
////                    paramName2 = "NegeriList",
////                    paramValue2 = publicHolidayData.fld_Negeri
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CountryMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CountryMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var countryData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "krytnlist" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = countryData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = countryData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = countryData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = countryData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _CountryMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CountryMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var countryData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "krytnlist" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (countryData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "krytnlist";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "countryMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_CountryMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CountryMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var getNegara = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(getNegara);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CountryMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var countryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "krytnlist" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    countryData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        countryData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        countryData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "countryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CountryMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CountryMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var countryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(countryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CountryMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var countryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (countryData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                countryData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "countryMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CountryMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult DesignationMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _DesignationMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var designationData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "designation" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = designationData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = designationData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = designationData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = designationData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _DesignationMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            var getDesignationRunningNo = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfID)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            string designationCode = "";

////            if (getDesignationRunningNo == null)
////            {
////                designationCode = "1";
////            }

////            else
////            {
////                int generateNewDesignationNo =
////                    Convert.ToInt32(getDesignationRunningNo) + 1;
////                designationCode = generateNewDesignationNo.ToString();
////            }

////            optionConfigsWeb.fldOptConfValue = designationCode;

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _DesignationMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var designationData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "designation" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (designationData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "designation";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "designationMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_DesignationMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _DesignationMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(designationData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _DesignationMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "designation" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    designationData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        designationData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        designationData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "designationMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_DesignationMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _DesignationMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(designationData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _DesignationMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "designation" &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (designationData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                designationData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "designationMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_DesignationMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PassportExpiryListMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _PassportExpiryListMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var passportExpiryData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "exprdmonthlist" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = passportExpiryData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = passportExpiryData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = passportExpiryData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = passportExpiryData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _PassportExpiryListMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PassportExpiryListMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var passportExpiryData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "exprdmonthlist" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    int output;
////                    bool bNum = int.TryParse(optionConfigsWeb.fldOptConfValue, out output);

////                    if (bNum == false)
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorOptionConfigNotANumber,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    if (passportExpiryData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "exprdmonthlist";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "passportExpiryListMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_PassportExpiryListMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PassportExpiryListMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "exprdmonthlist" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(passportExpiryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PassportExpiryListMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "exprdmonthlist" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    passportExpiryData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        passportExpiryData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        passportExpiryData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "passportExpiryListMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PassportExpiryListMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PassportExpiryListMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "exprdmonthlist" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(passportExpiryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PassportExpiryListMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "exprdmonthlist" &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (passportExpiryData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                passportExpiryData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "passportExpiryListMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_PassportExpiryListMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CalculationMethodMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CalculationMethodMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var calculationMethodData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "kdhPengiraan" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = calculationMethodData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = calculationMethodData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = calculationMethodData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = calculationMethodData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _CalculationMethodMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CalculationMethodMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var calculationMethodData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "kdhPengiraan" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (calculationMethodData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "kdhPengiraan";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "calculationMethodMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_CalculationMethodMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CalculationMethodMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kdhPengiraan" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(calculationMethodData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CalculationMethodMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kdhPengiraan" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    calculationMethodData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        calculationMethodData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        calculationMethodData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "calculationMethodMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CalculationMethodMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CalculationMethodMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kdhPengiraan" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(calculationMethodData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CalculationMethodMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kdhPengiraan" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (calculationMethodData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                calculationMethodData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "calculationMethodMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CalculationMethodMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult BusinessNatureMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _BusinessNatureMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var businessNatureData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "businesnature" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = businessNatureData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = businessNatureData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = businessNatureData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = businessNatureData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _BusinessNatureMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BusinessNatureMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var businessNatureData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "businesnature" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (businessNatureData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "businesnature";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "businessNatureMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_BusinessNatureMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _BusinessNatureMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "businesnature" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(businessNatureData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BusinessNatureMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "businesnature" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    businessNatureData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        businessNatureData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        businessNatureData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "businessNatureMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_BusinessNatureMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _BusinessNatureMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "businesnature" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(businessNatureData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BusinessNatureMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "businesnature" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (businessNatureData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                businessNatureData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "businessNatureMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_BusinessNatureMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult FamilyRelationshipMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _FamilyRelationshipMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var familyRelationshipData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "relationship" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = familyRelationshipData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = familyRelationshipData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = familyRelationshipData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = familyRelationshipData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _FamilyRelationshipMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _FamilyRelationshipMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var familyRelationshipData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "relationship" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (familyRelationshipData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "relationship";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "familyRelationshipMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_FamilyRelationshipMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _FamilyRelationshipMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "relationship" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(familyRelationshipData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _FamilyRelationshipMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "relationship" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    familyRelationshipData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        familyRelationshipData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        familyRelationshipData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "familyRelationshipMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_FamilyRelationshipMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _FamilyRelationshipMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "relationship" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(familyRelationshipData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _FamilyRelationshipMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "relationship" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (familyRelationshipData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                familyRelationshipData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "familyRelationshipMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_FamilyRelationshipMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CropTypeMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CropTypeMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var cropTypeData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "jnsTanaman" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = cropTypeData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = cropTypeData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = cropTypeData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = cropTypeData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _CropTypeMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CropTypeMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var cropTypeData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "jnsTanaman" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (cropTypeData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "jnsTanaman";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "cropTypeMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_CropTypeMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CropTypeMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsTanaman" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(cropTypeData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CropTypeMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsTanaman" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    cropTypeData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        cropTypeData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        cropTypeData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "cropTypeMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CropTypeMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CropTypeMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsTanaman" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(cropTypeData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CropTypeMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsTanaman" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (cropTypeData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                cropTypeData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "cropTypeMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CropTypeMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CropStatusMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CropStatusMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var cropStatusData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "statusTanaman" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = cropStatusData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = cropStatusData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = cropStatusData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = cropStatusData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _CropStatusMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CropStatusMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var cropStatusData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "statusTanaman" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (cropStatusData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "statusTanaman";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "cropStatusMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_CropStatusMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CropStatusMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "statusTanaman" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(cropStatusData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CropStatusMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "statusTanaman" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    cropStatusData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        cropStatusData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        cropStatusData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "cropStatusMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CropStatusMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CropStatusMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "statusTanaman" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(cropStatusData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CropStatusMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "statusTanaman" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (cropStatusData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                cropStatusData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "cropStatusMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CropStatusMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult WorkerTypeMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _WorkerTypeMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var workerTypeData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "jnsPkj" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = workerTypeData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = workerTypeData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = workerTypeData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = workerTypeData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _WorkerTypeMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _WorkerTypeMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var cropStatusData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "jnsPkj" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (cropStatusData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "jnsPkj";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "workerTypeMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_WorkerTypeMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _WorkerTypeMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(cropStatusData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _WorkerTypeMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsPkj" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    cropStatusData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        cropStatusData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        cropStatusData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "workerTypeMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_WorkerTypeMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _WorkerTypeMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(cropStatusData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _WorkerTypeMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (cropStatusData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                cropStatusData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "workerTypeMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_WorkerTypeMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult StateMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _StateMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var stateData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "negeri" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = stateData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = stateData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = stateData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = stateData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _StateMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            var getStateRunningNo = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfID)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            string stateCode = "";

////            if (getStateRunningNo == null)
////            {
////                stateCode = "1";
////            }

////            else
////            {
////                int generateNewStateNo =
////                    Convert.ToInt32(getStateRunningNo) + 1;
////                stateCode = generateNewStateNo.ToString();
////            }

////            optionConfigsWeb.fldOptConfValue = stateCode;
////            optionConfigsWeb.fldOptConfFlag3 = stateCode;

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _StateMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var stateData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "negeri" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (stateData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "negeri";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "stateMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_StateMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _StateMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(stateData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _StateMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "negeri" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    stateData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        stateData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        stateData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "stateMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_StateMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _StateMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(stateData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _StateMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (stateData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                stateData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "stateMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_StateMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult InactiveReasonMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _InactiveReasonMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var inactiveReasonData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = inactiveReasonData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = inactiveReasonData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = inactiveReasonData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = inactiveReasonData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _InactiveReasonMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            var getInactiveReasonRunningNo = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfID)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            string inactiveReasonCode = "";

////            if (getInactiveReasonRunningNo == null)
////            {
////                inactiveReasonCode = "01";
////            }

////            else
////            {
////                int generateNewInactiveReasonNo = Convert.ToInt32(getInactiveReasonRunningNo) + 1;
////                inactiveReasonCode = generateNewInactiveReasonNo.ToString("00");
////            }

////            optionConfigsWeb.fldOptConfValue = inactiveReasonCode;

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _InactiveReasonMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var inactiveReasonData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (inactiveReasonData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "sbbTakAktif";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "inactiveReasonMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_InactiveReasonMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _InactiveReasonMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(inactiveReasonData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _InactiveReasonMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTakAktif" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    inactiveReasonData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        inactiveReasonData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        inactiveReasonData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "inactiveReasonMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_InactiveReasonMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _InactiveReasonMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(inactiveReasonData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _InactiveReasonMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (inactiveReasonData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                inactiveReasonData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "inactiveReasonMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_InactiveReasonMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult RejectReasonMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _RejectReasonMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var rejectReasonData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "sbbTolak" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = rejectReasonData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = rejectReasonData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = rejectReasonData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = rejectReasonData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _RejectReasonMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            var rejectReasonCodeIndicator = GetConfig.GetWebConfigValue("kdSbbTlkPermohonan", NegaraID, SyarikatID);

////            var getRejectReasonRunningNo = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfID)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            string rejectReasonCode = "";

////            if (getRejectReasonRunningNo == null)
////            {
////                rejectReasonCode = rejectReasonCodeIndicator + "01";
////            }

////            else
////            {
////                int generateNewRejectReasonNo = Convert.ToInt32(getRejectReasonRunningNo.Substring(rejectReasonCodeIndicator.Length)) + 1;
////                rejectReasonCode = rejectReasonCodeIndicator + generateNewRejectReasonNo.ToString("00");
////            }

////            optionConfigsWeb.fldOptConfValue = rejectReasonCode;

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _RejectReasonMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var rejectReasonData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "sbbTolak" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (rejectReasonData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "sbbTolak";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        if (optionConfigsWeb.fldOptConfFlag2 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                        }

////                        if (optionConfigsWeb.fldOptConfFlag3 != null)
////                        {
////                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                        }

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "rejectReasonMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_RejectReasonMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _RejectReasonMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(rejectReasonData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _RejectReasonMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTolak" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    rejectReasonData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    rejectReasonData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    if (optionConfigsWeb.fldOptConfFlag2 != null)
////                    {
////                        rejectReasonData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    }

////                    if (optionConfigsWeb.fldOptConfFlag3 != null)
////                    {
////                        rejectReasonData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
////                    }

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "rejectReasonMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_RejectReasonMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _RejectReasonMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(rejectReasonData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _RejectReasonMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (rejectReasonData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                rejectReasonData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "rejectReasonMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_RejectReasonMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult ContributionCategoryMaintenance(string filter, int page = 1, string sort = "fld_NamaCaruman",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _ContributionCategoryMaintenance(string filter, int page = 1,
////            string sort = "fld_NamaCaruman",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_CarumanTambahan>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var contributionCategoryData = db.tbl_CarumanTambahan
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = contributionCategoryData
////                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = contributionCategoryData
////                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = contributionCategoryData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = contributionCategoryData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _ContributionCategoryMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> pencarumList = new List<SelectListItem>();

////            pencarumList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pencarum" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            pencarumList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "", Selected = true});

////            ViewBag.PencarumList = pencarumList;

////            List<SelectListItem> berjadualList = new List<SelectListItem>();

////            berjadualList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            berjadualList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "", Selected = true });

////            ViewBag.BerjadualList = berjadualList;

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionCategoryMaintenanceCreate(MasterModels.tbl_CarumanTambahanViewModelCreate carumanTambahanViewModelCreate)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            if (db.tbl_CarumanTambahan.Any(x => x.fld_KodCaruman.ToUpper() ==
////                                                carumanTambahanViewModelCreate.fld_KodCaruman.ToUpper()))
////            {
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tbl_CarumanTambahan carumanTambahan = new MasterModels.tbl_CarumanTambahan();

////                    PropertyCopy.Copy(carumanTambahan, carumanTambahanViewModelCreate);

////                    carumanTambahan.fld_KodCaruman = carumanTambahan.fld_KodCaruman.ToUpper();
////                    carumanTambahan.fld_NamaCaruman = carumanTambahan.fld_NamaCaruman.ToUpper();
////                    carumanTambahan.fld_CarumanOleh = carumanTambahan.fld_CarumanOleh;
////                    carumanTambahan.fld_Deleted = false;
////                    carumanTambahan.fld_NegaraID = (int)NegaraID;
////                    carumanTambahan.fld_SyarikatID = (int)SyarikatID;

////                    db.tbl_CarumanTambahan.Add(carumanTambahan);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "contributionCategoryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_ContributionCategoryMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public JsonResult IsContributionCodeExist(string fld_KodCaruman)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return Json(
////                !db.tbl_CarumanTambahan.Any(x => x.fld_KodCaruman.ToUpper() == fld_KodCaruman.ToUpper() &&
////                                                 x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
////                JsonRequestBehavior.AllowGet);
////        }

////        public ActionResult _ContributionCategoryMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
////                x => x.fld_JenisCarumanID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            List<SelectListItem> pencarumList = new List<SelectListItem>();

////            pencarumList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pencarum" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text", contributionCategoryData.fld_CarumanOleh).ToList();
////            pencarumList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.PencarumList = pencarumList;

////            List<SelectListItem> pilihanList = new List<SelectListItem>();

////            pilihanList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            pilihanList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.PilihanList = pilihanList;

////            return PartialView(contributionCategoryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionCategoryMaintenanceEdit(MasterModels.tbl_CarumanTambahan carumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
////                        x => x.fld_JenisCarumanID == carumanTambahan.fld_JenisCarumanID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    contributionCategoryData.fld_NamaCaruman = carumanTambahan.fld_NamaCaruman.ToUpper();
////                    contributionCategoryData.fld_CarumanOleh = carumanTambahan.fld_CarumanOleh;
////                    contributionCategoryData.fld_Berjadual = carumanTambahan.fld_Berjadual;
////                    contributionCategoryData.fld_Default = carumanTambahan.fld_Default;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "contributionCategoryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_ContributionCategoryMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _ContributionCategoryMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
////                x => x.fld_JenisCarumanID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(contributionCategoryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionCategoryMaintenanceDelete(MasterModels.tbl_CarumanTambahan carumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
////                    x => x.fld_JenisCarumanID == carumanTambahan.fld_JenisCarumanID && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (contributionCategoryData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                contributionCategoryData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "contributionCategoryMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_ContributionCategoryMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult ContributionCategoryMaintenanceInUse(string filter, int page = 1, string sort = "fld_NamaCaruman",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _ContributionCategoryMaintenanceInUse(string filter, int page = 1,
////            string sort = "fld_NamaCaruman",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_CarumanTambahan>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var contributionCategoryData = db.tbl_CarumanTambahan
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = contributionCategoryData
////                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = contributionCategoryData
////                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = contributionCategoryData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = contributionCategoryData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _ContributionCategoryMaintenanceInUseEdit(List<int> carumanTambahanID)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            try
////            {
////                var contributionCategoryData = db.tbl_CarumanTambahan.Where(x =>
////                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                    x.fld_Deleted == false);

////                foreach (var contributionCategory in contributionCategoryData)
////                {
////                    contributionCategory.fld_Default = false;
////                }

////                if (carumanTambahanID != null)
////                {
////                    //remove checkall value from carumanTambahanID list
////                    carumanTambahanID.Remove(0);

////                    foreach (var id in carumanTambahanID)
////                    {
////                        var selectedContributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(x => x.fld_JenisCarumanID == id);

////                        selectedContributionCategoryData.fld_Default = true;
////                    }
////                }

////                db.SaveChanges();

////                var connectionData = db.tblConnections.Where(x =>
////                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

////                foreach (var connection in connectionData)
////                {
////                    var wilayahID = connection.wilayahID;
////                    string hostEstate, catalogEstate, userEstate, passEstate = "";
////                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate,
////                        wilayahID, SyarikatID.Value, NegaraID.Value);
////                    MVC_SYSTEM_Models estateConnection =
////                        MVC_SYSTEM_Models.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

////                    var workerContributionData = estateConnection.tbl_PkjCarumanTambahan.Where(x =>
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Deleted == false);

////                    if (workerContributionData.Count() != 0)
////                    {
////                        estateConnection.tbl_PkjCarumanTambahan.RemoveRange(workerContributionData);
////                        estateConnection.SaveChanges();
////                    }

////                    var workerData = estateConnection.tbl_Pkjmast.Where(x =>
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Kdaktf == "1");

////                    var activeContributionCategoryData = db.tbl_CarumanTambahan.Where(x =>
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false &&
////                        x.fld_Default == true);

////                    var warganegaraCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
////                        x.fldOptConfFlag1 == "krytnlist" && x.fldOptConfFlag3 == "1" && x.fld_NegaraID == NegaraID &&
////                        x.fld_SyarikatID == SyarikatID).fldOptConfValue;

////                    var pkjCarumanTambahanData = estateConnection.tbl_PkjCarumanTambahan.Where(x =>
////                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                        x.fld_WilayahID == wilayahID).ToList();

////                    if (pkjCarumanTambahanData.Count != 0)
////                    {
////                        estateConnection.tbl_PkjCarumanTambahan.RemoveRange(pkjCarumanTambahanData);
////                        estateConnection.SaveChanges();
////                    }

////                    foreach (var worker in workerData)
////                    {
////                        if (worker.fld_Kdrkyt == warganegaraCode)
////                        {
////                            DateDiff workerAge = new DateDiff(Convert.ToDateTime(worker.fld_Trlhr).AddDays(-1),
////                                DateTime.Now);

////                            foreach (var activeContribution in activeContributionCategoryData)
////                            {
////                                var activeSubContributionCategoryData = db.tbl_SubCarumanTambahan.Where(x =>
////                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                                    x.fld_Deleted == false && x.fld_KodCaruman == activeContribution.fld_KodCaruman);

////                                foreach (var activeSubContribution in activeSubContributionCategoryData)
////                                {
////                                    if (activeSubContribution.fld_UmurLower <= workerAge.Years &&
////                                        activeSubContribution.fld_UmurUpper >= workerAge.Years)
////                                    {
////                                        tbl_PkjCarumanTambahan pkjCarumanTambahan = new tbl_PkjCarumanTambahan();

////                                        pkjCarumanTambahan.fld_Nopkj = worker.fld_Nopkj;
////                                        pkjCarumanTambahan.fld_KodCaruman = activeContribution.fld_KodCaruman;
////                                        pkjCarumanTambahan.fld_KodSubCaruman = activeSubContribution.fld_KodSubCaruman;
////                                        pkjCarumanTambahan.fld_NegaraID = NegaraID;
////                                        pkjCarumanTambahan.fld_SyarikatID = SyarikatID;
////                                        pkjCarumanTambahan.fld_WilayahID = worker.fld_WilayahID;
////                                        pkjCarumanTambahan.fld_LadangID = worker.fld_LadangID;
////                                        pkjCarumanTambahan.fld_Deleted = false;

////                                        estateConnection.tbl_PkjCarumanTambahan.Add(pkjCarumanTambahan);
////                                    }
////                                }
////                            }
////                        }
////                    }

////                    estateConnection.SaveChanges();
////                    estateConnection.Dispose();
////                }

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgUpdate,
////                    status = "success",
////                    checkingdata = "1"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult ContributionSubCategoryMaintenance(string ContributionList, int page = 1, string sort = "fld_KodSubCaruman",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            List<SelectListItem> contributionList = new List<SelectListItem>();

////            contributionList = new SelectList(
////                db.tbl_CarumanTambahan
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_NamaCaruman)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_NamaCaruman }),
////                "Value", "Text").ToList();
////            contributionList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.ContributionList = contributionList;

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _ContributionSubCategoryMaintenance(string ContributionList, int page = 1,
////            string sort = "fld_KodSubCaruman",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            if (String.IsNullOrEmpty(ContributionList))
////            {
////                ViewBag.Message = "Sila Pilih Caruman";
////                return View();
////            }

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_SubCarumanTambahan>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var contributionSubCategoryData = db.tbl_SubCarumanTambahan
////                .Where(x => x.fld_KodCaruman == ContributionList && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            records.Content = contributionSubCategoryData.OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = contributionSubCategoryData
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;
////            ViewBag.TotalRecords = contributionSubCategoryData
////                .Count();
////            ViewBag.ContributionCode = ContributionList;

////            if (contributionSubCategoryData.Count() <= 0)
////            {
////                ViewBag.Message = "Tiada Maklumat";
////            }

////            return View(records);
////        }

////        public ActionResult _ContributionSubCategoryMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> contributionList = new List<SelectListItem>();

////            contributionList = new SelectList(
////                db.tbl_CarumanTambahan
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_NamaCaruman)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_NamaCaruman }),
////                "Value", "Text").ToList();
////            contributionList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.ContributionList = contributionList;

////            MasterModels.tbl_SubCarumanTambahan subCarumanTambahan = new MasterModels.tbl_SubCarumanTambahan();

////            return PartialView(subCarumanTambahan);
////        }

////        public JsonResult checkSubContributionRunningNo(string contributionCode)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            if (String.IsNullOrEmpty(contributionCode))
////            {
////                return Json(0);
////            }

////            else
////            {
////                var getCurrentSubContributionRunningNo = db.tbl_SubCarumanTambahan
////                    .Where(x => x.fld_KodSubCaruman.Contains(contributionCode) && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID)
////                    .OrderByDescending(o => o.fld_KodSubCaruman)
////                    .Select(s => s.fld_KodSubCaruman)
////                    .FirstOrDefault();

////                int contributionCodeLength = contributionCode.Length;

////                string contributionSubCategoryCode = "";

////                if (getCurrentSubContributionRunningNo == null)
////                {
////                    contributionSubCategoryCode = contributionCode + "01";
////                }

////                else
////                {
////                    int generateNewSubContributionNo = Convert.ToInt32(getCurrentSubContributionRunningNo.Substring(contributionCodeLength)) + 1;
////                    contributionSubCategoryCode = contributionCode + generateNewSubContributionNo.ToString("00");
////                }

////                return Json(new { subContributionCode = contributionSubCategoryCode });
////            }
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionSubCategoryMaintenanceCreate(MasterModels.tbl_SubCarumanTambahan subCarumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    subCarumanTambahan.fld_KeteranganSubCaruman = subCarumanTambahan.fld_KeteranganSubCaruman.ToUpper();
////                    subCarumanTambahan.fld_NegaraID = (int)NegaraID;
////                    subCarumanTambahan.fld_SyarikatID = (int)SyarikatID;
////                    subCarumanTambahan.fld_Deleted = false;

////                    db.tbl_SubCarumanTambahan.Add(subCarumanTambahan);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "contributionSubCategoryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_ContributionSubCategoryMaintenance",
////                        controller = "Maintenance",
////                        paramName = "ContributionList",
////                        paramValue = subCarumanTambahan.fld_KodCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _ContributionSubCategoryMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var contributionSubCategoryData = db.tbl_SubCarumanTambahan
////                .SingleOrDefault(x => x.fld_JenisSubCarumanID == id && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            return PartialView(contributionSubCategoryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionSubCategoryMaintenanceEdit(MasterModels.tbl_SubCarumanTambahan subCarumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var contributionSubCategoryData = db.tbl_SubCarumanTambahan.SingleOrDefault(
////                        x => x.fld_JenisSubCarumanID == subCarumanTambahan.fld_JenisSubCarumanID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    contributionSubCategoryData.fld_KeteranganSubCaruman = subCarumanTambahan.fld_KeteranganSubCaruman.ToUpper();
////                    contributionSubCategoryData.fld_UmurLower = subCarumanTambahan.fld_UmurLower;
////                    contributionSubCategoryData.fld_UmurUpper = subCarumanTambahan.fld_UmurUpper;
////                    contributionSubCategoryData.fld_KadarPekerja = subCarumanTambahan.fld_KadarPekerja;
////                    contributionSubCategoryData.fld_KadarMajikan = subCarumanTambahan.fld_KadarMajikan;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "contributionSubCategoryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_ContributionSubCategoryMaintenance",
////                        controller = "Maintenance",
////                        paramName = "ContributionList",
////                        paramValue = subCarumanTambahan.fld_KodCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _ContributionSubCategoryMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var contributionSubCategoryData = db.tbl_SubCarumanTambahan
////                .SingleOrDefault(x => x.fld_JenisSubCarumanID == id && x.fld_NegaraID == NegaraID &&
////                                      x.fld_SyarikatID == SyarikatID);

////            return PartialView(contributionSubCategoryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionSubCategoryMaintenanceDelete(MasterModels.tbl_SubCarumanTambahan subCarumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var contributionSubCategoryData = db.tbl_SubCarumanTambahan.SingleOrDefault(
////                    x => x.fld_JenisSubCarumanID == subCarumanTambahan.fld_JenisSubCarumanID &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (contributionSubCategoryData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                contributionSubCategoryData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "contributionSubCategoryMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_ContributionSubCategoryMaintenance",
////                    controller = "Maintenance",
////                    paramName = "ContributionList",
////                    paramValue = subCarumanTambahan.fld_KodCaruman
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult ContributionTableMaintenance(string SubContributionList, int page = 1, string sort = "fld_GajiLower",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            List<SelectListItem> subContributionList = new List<SelectListItem>();

////            subContributionList = new SelectList(
////                db.tbl_SubCarumanTambahan
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodSubCaruman)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodSubCaruman, Text = s.fld_KeteranganSubCaruman }),
////                "Value", "Text").ToList();
////            subContributionList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.SubContributionList = subContributionList;

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _ContributionTableMaintenance(string SubContributionList, int page = 1,
////            string sort = "fld_GajiLower",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            if (String.IsNullOrEmpty(SubContributionList))
////            {
////                ViewBag.Message = "Sila Pilih Sub Caruman";
////                return View();
////            }

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_JadualCarumanTambahan>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var contributionTableData = db.tbl_JadualCarumanTambahan
////                .Where(x => x.fld_KodSubCaruman == SubContributionList && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////           records.Content = contributionTableData.OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = contributionTableData
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;
////            ViewBag.TotalRecords = contributionTableData
////                .Count();
////            ViewBag.SubContributionCode = SubContributionList;

////            if (contributionTableData.Count() <= 0)
////            {
////                ViewBag.Message = "Tiada Maklumat";
////            }

////            return View(records);
////        }

////        public ActionResult _ContributionTableMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> subContributionList = new List<SelectListItem>();

////            subContributionList = new SelectList(
////                db.tbl_SubCarumanTambahan
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodSubCaruman)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodSubCaruman, Text = s.fld_KeteranganSubCaruman }),
////                "Value", "Text").ToList();
////            subContributionList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.SubContributionList = subContributionList;

////            MasterModels.tbl_JadualCarumanTambahan jadualCarumanTambahan = new MasterModels.tbl_JadualCarumanTambahan();

////            return PartialView(jadualCarumanTambahan);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionTableMaintenanceCreate(MasterModels.tbl_JadualCarumanTambahan jadualCarumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    //jadualCarumanTambahan.fld_KodSubCaruman = SubContributionList;
////                    jadualCarumanTambahan.fld_NegaraID = (int)NegaraID;
////                    jadualCarumanTambahan.fld_SyarikatID = (int)SyarikatID;
////                    jadualCarumanTambahan.fld_Deleted = false;

////                    db.tbl_JadualCarumanTambahan.Add(jadualCarumanTambahan);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "contributionTableMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_ContributionTableMaintenance",
////                        controller = "Maintenance",
////                        paramName = "SubContributionList",
////                        paramValue = jadualCarumanTambahan.fld_KodSubCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _ContributionTableMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var contributionTableData = db.tbl_JadualCarumanTambahan
////                .SingleOrDefault(x => x.fld_JadualCarumanTambahanID == id && x.fld_NegaraID == NegaraID &&
////                                      x.fld_SyarikatID == SyarikatID);

////            return PartialView(contributionTableData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionTableMaintenanceEdit(MasterModels.tbl_JadualCarumanTambahan jadualCarumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var contributionTableData = db.tbl_JadualCarumanTambahan.SingleOrDefault(
////                        x => x.fld_JadualCarumanTambahanID == jadualCarumanTambahan.fld_JadualCarumanTambahanID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    contributionTableData.fld_GajiLower = jadualCarumanTambahan.fld_GajiLower;
////                    contributionTableData.fld_GajiUpper = jadualCarumanTambahan.fld_GajiUpper;
////                    contributionTableData.fld_CarumanPekerja = jadualCarumanTambahan.fld_CarumanPekerja;
////                    contributionTableData.fld_CarumanMajikan = jadualCarumanTambahan.fld_CarumanMajikan;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "contributionTableMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_ContributionTableMaintenance",
////                        controller = "Maintenance",
////                        paramName = "SubContributionList",
////                        paramValue = jadualCarumanTambahan.fld_KodSubCaruman
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _ContributionTableMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var contributionTableData = db.tbl_JadualCarumanTambahan
////                .SingleOrDefault(x => x.fld_JadualCarumanTambahanID == id && x.fld_NegaraID == NegaraID &&
////                                      x.fld_SyarikatID == SyarikatID);

////            return PartialView(contributionTableData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _ContributionTableMaintenanceDelete(MasterModels.tbl_JadualCarumanTambahan jadualCarumanTambahan)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var contributionTableData = db.tbl_JadualCarumanTambahan.SingleOrDefault(
////                    x => x.fld_JadualCarumanTambahanID == jadualCarumanTambahan.fld_JadualCarumanTambahanID &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (contributionTableData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                contributionTableData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "contributionTableMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_ContributionTableMaintenance",
////                    controller = "Maintenance",
////                    paramName = "SubContributionList",
////                    paramValue = contributionTableData.fld_KodSubCaruman
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult UnitMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _UnitMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "unit" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _UnitMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> numberList = new List<SelectListItem>();

////            numberList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.NumberList = numberList;

////            List<SelectListItem> categoryList = new List<SelectListItem>();

////            categoryList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.CategoryList = categoryList;

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _UnitMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "unit" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "unit";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "unitMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_UnitMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _UnitMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsWebUnitViewModel unitViewModel = new tblOptionConfigsWebUnitViewModel();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            List<SelectListItem> numberList = new List<SelectListItem>();

////            numberList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.NumberList = numberList;

////            List<SelectListItem> categoryList = new List<SelectListItem>();

////            categoryList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.CategoryList = categoryList;

////            return PartialView(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _UnitMaintenanceEdit(MasterModels.tblOptionConfigsWebUnitViewModel optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "unit" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "unitMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_UnitMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _UnitMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(unitData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _UnitMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "unitMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_UnitMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult MinimumWageReasonMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _MinimumWageReasonMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var minimumWageReasonData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "sebabGajiMinima" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = minimumWageReasonData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = minimumWageReasonData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = minimumWageReasonData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = minimumWageReasonData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _MinimumWageReasonMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            var getCurrentMinimumWageReasonRunningNo = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "sebabGajiMinima" && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfID)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            var minimumWageReasonCodeLength = GetConfig.GetWebConfigValue("kdSebabGajiMinima", NegaraID, SyarikatID);

////            string minimumWageReasonCode = "";

////            if (getCurrentMinimumWageReasonRunningNo == null)
////            {
////                minimumWageReasonCode = "01";
////            }

////            else
////            {
////                int generateNewMinimumWageReasonNo =
////                    Convert.ToInt32(getCurrentMinimumWageReasonRunningNo.Substring(minimumWageReasonCodeLength.Length)) + 1;
////                minimumWageReasonCode = generateNewMinimumWageReasonNo.ToString("00");
////            }

////            optionConfigsWeb.fldOptConfValue = minimumWageReasonCodeLength + minimumWageReasonCode;

////            return PartialView(optionConfigsWeb);
////        }


////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageReasonMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    optionConfigsWeb.fldOptConfFlag1 = "sebabGajiMinima";
////                    optionConfigsWeb.fldDeleted = false;
////                    optionConfigsWeb.fld_NegaraID = NegaraID;
////                    optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                    db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "minimumWageReasonMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_MinimumWageReasonMaintenance",
////                        controller = "Maintenance"
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _MinimumWageReasonMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sebabGajiMinima" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(minimumWageReasonData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageReasonMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sebabGajiMinima" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    minimumWageReasonData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    minimumWageReasonData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
////                    minimumWageReasonData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "minimumWageReasonMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_MinimumWageReasonMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _MinimumWageReasonMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sebabGajiMinima" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(minimumWageReasonData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageReasonMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sebabGajiMinima" &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (minimumWageReasonData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                minimumWageReasonData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "minimumWageReasonMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_MinimumWageReasonMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult MinimumWageActionMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _MinimumWageActionMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var minimumWageActionData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "tindakanGajiMinima" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = minimumWageActionData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = minimumWageActionData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = minimumWageActionData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = minimumWageActionData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _MinimumWageActionMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tblOptionConfigsWeb optionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////            var getCurrentMinimumWageActionRunningNo = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "tindakanGajiMinima" && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fldOptConfID)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            var minimumWageActionCodeLength = GetConfig.GetWebConfigValue("kdTindakanGajiMinima", NegaraID, SyarikatID);

////            string minimumWageActionCode = "";

////            if (getCurrentMinimumWageActionRunningNo == null)
////            {
////                minimumWageActionCode = "01";
////            }

////            else
////            {
////                int generateNewMinimumWageActionNo =
////                    Convert.ToInt32(getCurrentMinimumWageActionRunningNo.Substring(minimumWageActionCodeLength.Length)) + 1;
////                minimumWageActionCode = generateNewMinimumWageActionNo.ToString("00");
////            }

////            optionConfigsWeb.fldOptConfValue = minimumWageActionCodeLength + minimumWageActionCode;

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageActionMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var minimumWageActionData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "tindakanGajiMinima" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (minimumWageActionData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "tindakanGajiMinima";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "minimumWageActionMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_MinimumWageActionMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _MinimumWageActionMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "tindakanGajiMinima" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(minimumWageActionData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageActionMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "tindakanGajiMinima" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    minimumWageActionData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    minimumWageActionData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
////                    minimumWageActionData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "minimumWageActionMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_MinimumWageActionMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _MinimumWageActionMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "tindakanGajiMinima" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(minimumWageActionData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageActionMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "tindakanGajiMinima" &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (minimumWageActionData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                minimumWageActionData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "minimumWageActionMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_MinimumWageActionMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult MinimumWageValueMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _MinimumWageValueMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var minimumWageValueData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "gajiMinima" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

////                records.Content = minimumWageValueData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = minimumWageValueData
////                    .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _MinimumWageValueMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var minimumWageValueData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "gajiMinima" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

////            tblOptionConfigsWebMinimumWageValueViewModel minimumWagevalueViewModel = new tblOptionConfigsWebMinimumWageValueViewModel();

////            PropertyCopy.Copy(minimumWagevalueViewModel, minimumWageValueData);

////            return PartialView(minimumWagevalueViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _MinimumWageValueMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var minimumWageValueData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "gajiMinima" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

////                    minimumWageValueData.fldOptConfValue = optionConfigsWeb.fldOptConfValue;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "minimumWageValueMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_MinimumWageValueMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CutOffDateMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CutOffDateMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var cutOffDateData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "haritrakhir" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

////            records.Content = cutOffDateData.OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = cutOffDateData
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _CutOffDateMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var cutOffDateData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "haritrakhir" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

////            tblOptionConfigsWebCutOffDateValueViewModel cutOffDatevalueViewModel = new tblOptionConfigsWebCutOffDateValueViewModel();

////            PropertyCopy.Copy(cutOffDatevalueViewModel, cutOffDateData);

////            return PartialView(cutOffDatevalueViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CutOffDateMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                int n;
////                bool isNumeric = int.TryParse(optionConfigsWeb.fldOptConfValue, out n);

////                if (isNumeric == false || n < 0)
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }

////                if (ModelState.IsValid)
////                {
////                    var cutOffDateData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "haritrakhir" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

////                    cutOffDateData.fldOptConfValue = optionConfigsWeb.fldOptConfValue;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "cutOffDateMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CutOffDateMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult IncentiveMaintenance(string IncentiveList, int page = 1, string sort = "fld_KodInsentif",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            List<SelectListItem> incentiveList = new List<SelectListItem>();

////            incentiveList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem {Value = s.fldOptConfValue, Text = s.fldOptConfDesc}),
////                "Value", "Text").ToList();
////            incentiveList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.IncentiveList = incentiveList;

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _IncentiveMaintenance(string IncentiveList, int page = 1,
////            string sort = "fld_KodInsentif",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            if (String.IsNullOrEmpty(IncentiveList))
////            {
////                ViewBag.Message = "Sila Pilih Jenis Insentif";
////                return View();
////            }

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_JenisInsentif>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var incentiveCategoryData = db.tbl_JenisInsentif
////                .Where(x => x.fld_KodInsentif.Contains(IncentiveList) && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            records.Content = incentiveCategoryData.OrderBy(sort + " " + sortdir)
////                .Skip((page - 1) * pageSize)
////                .Take(pageSize)
////                .ToList();

////            records.TotalRecords = incentiveCategoryData
////                .Count();

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;
////            ViewBag.TotalRecords = incentiveCategoryData
////                .Count();
////            ViewBag.ContributionCode = IncentiveList;

////            if (incentiveCategoryData.Count() <= 0)
////            {
////                ViewBag.Message = "Tiada Maklumat";
////            }

////            return View(records);
////        }

////        public ActionResult _IncentiveMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> incentiveList = new List<SelectListItem>();

////            incentiveList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            incentiveList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.IncentiveList = incentiveList;

////            List<SelectListItem> GLList = new List<SelectListItem>();

////            GLList = new SelectList(
////                db.tbl_Lejar
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodLejar)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
////                "Value", "Text").ToList();
////            GLList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.GLList = GLList;

////            List<SelectListItem> optionList = new List<SelectListItem>();

////            optionList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            optionList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.OptionList = optionList;

////            List<SelectListItem> workerTypeList = new List<SelectListItem>();

////            workerTypeList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisKelayakanInsentif" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            workerTypeList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.WorkerTypeList = workerTypeList;

////            List<SelectListItem> incentiveValueTypeList = new List<SelectListItem>();

////            incentiveValueTypeList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "tetapanNilai" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            incentiveValueTypeList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.IncentiveValueTypeList = incentiveValueTypeList;

////            MasterModels.tbl_JenisInsentif jenisInsentif = new MasterModels.tbl_JenisInsentif();

////            return PartialView(jenisInsentif);
////        }

////        public JsonResult checkIncentiveRunningNo(string incentiveType)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            if (!String.IsNullOrEmpty(incentiveType))
////            {
////                var getIncentiveRunningNo = db.tbl_JenisInsentif
////                    .Where(x => x.fld_KodInsentif.Contains(incentiveType) && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID)
////                    .OrderByDescending(o => o.fld_KodInsentif)
////                    .Select(s => new {s.fld_KodInsentif, s.fld_KodAktvt})
////                    .FirstOrDefault();

////                int incentiveTypeCodeLength = incentiveType.Length;

////                string incentiveCode = "";

////                if (getIncentiveRunningNo == null)
////                {
////                    incentiveCode = incentiveType + "01";
////                }

////                else
////                {
////                    int generateNewInsentiveNo =
////                        Convert.ToInt32(getIncentiveRunningNo.fld_KodInsentif.Substring(incentiveTypeCodeLength)) + 1;
////                    incentiveCode = incentiveType + generateNewInsentiveNo.ToString("00");
////                }

////                var getInsentifConfigData = db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fldOptConfValue == incentiveType &&
////                                x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .Select(s => new {s.fldOptConfFlag2})
////                    .SingleOrDefault();

////                string activityCode = "";

////                if (getIncentiveRunningNo == null)
////                {
////                    activityCode = getInsentifConfigData.fldOptConfFlag2;
////                }

////                else
////                {
////                    int generateNewKodAktvtNo = Convert.ToInt32(getIncentiveRunningNo.fld_KodAktvt) + 1;
////                    activityCode = generateNewKodAktvtNo.ToString();
////                }

////                return Json(new
////                {
////                    incentiveCode = incentiveCode,
////                    activityCode = activityCode
////                });
////            }

////            else
////            {
////                return Json(new
////                {
////                    incentiveCode = "",
////                    activityCode = ""
////                });
////            }
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _IncentiveMaintenanceCreate(MasterModels.tbl_JenisInsentif jenisInsentif)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    jenisInsentif.fld_Keterangan = jenisInsentif.fld_Keterangan.ToUpper();
////                    jenisInsentif.fld_NegaraID = NegaraID;
////                    jenisInsentif.fld_SyarikatID = SyarikatID;
////                    jenisInsentif.fld_Deleted = false;

////                    db.tbl_JenisInsentif.Add(jenisInsentif);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "incentiveMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_IncentiveMaintenance",
////                        controller = "Maintenance",
////                        paramName = "IncentiveList",
////                        paramValue = jenisInsentif.fld_JenisInsentif
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _IncentiveMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var incentiveCategoryData = db.tbl_JenisInsentif
////                .Where(x => x.fld_JenisInsentifID == id && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID)
////                .SingleOrDefault();

////            List<SelectListItem> GLList = new List<SelectListItem>();

////            GLList = new SelectList(
////                db.tbl_Lejar
////                    .Where(x => x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_KodLejar)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
////                "Value", "Text").ToList();
////            GLList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.GLList = GLList;

////            List<SelectListItem> optionList = new List<SelectListItem>();

////            optionList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            optionList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.OptionList = optionList;

////            List<SelectListItem> workerTypeList = new List<SelectListItem>();

////            workerTypeList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jenisKelayakanInsentif" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            workerTypeList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.WorkerTypeList = workerTypeList;

////            List<SelectListItem> incentiveValueTypeList = new List<SelectListItem>();

////            incentiveValueTypeList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "tetapanNilai" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            incentiveValueTypeList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.IncentiveValueTypeList = incentiveValueTypeList;

////            return PartialView(incentiveCategoryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _IncentiveMaintenanceEdit(MasterModels.tbl_JenisInsentif jenisInsentif)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
            
////            try
////            {
////                if (ModelState.IsValid)
////                {

////                    var incentiveCategoryData = db.tbl_JenisInsentif.SingleOrDefault(
////                        x => x.fld_JenisInsentifID == jenisInsentif.fld_JenisInsentifID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    incentiveCategoryData.fld_Keterangan = jenisInsentif.fld_Keterangan.ToUpper();
////                    incentiveCategoryData.fld_KodGL = jenisInsentif.fld_KodGL;
////                    incentiveCategoryData.fld_TetapanNilai = jenisInsentif.fld_TetapanNilai;
////                    incentiveCategoryData.fld_AdaCaruman = jenisInsentif.fld_AdaCaruman;
////                    incentiveCategoryData.fld_MinValue = jenisInsentif.fld_MinValue;
////                    incentiveCategoryData.fld_MaxValue = jenisInsentif.fld_MaxValue;
////                    incentiveCategoryData.fld_FixedValue = jenisInsentif.fld_FixedValue;
////                    incentiveCategoryData.fld_DailyFixedValue = jenisInsentif.fld_DailyFixedValue;
////                    incentiveCategoryData.fld_KelayakanKepada = jenisInsentif.fld_KelayakanKepada;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "incentiveMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_IncentiveMaintenance",
////                        controller = "Maintenance",
////                        paramName = "IncentiveList",
////                        paramValue = incentiveCategoryData.fld_JenisInsentif
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _IncentiveMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var incentiveCategoryData = db.tbl_JenisInsentif.SingleOrDefault(
////                x => x.fld_JenisInsentifID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(incentiveCategoryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _IncentiveMaintenanceDelete(MasterModels.tbl_JenisInsentif jenisInsentif)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var incentiveCategoryData = db.tbl_JenisInsentif.SingleOrDefault(
////                    x => x.fld_JenisInsentifID == jenisInsentif.fld_JenisInsentifID &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (incentiveCategoryData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                incentiveCategoryData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "incentiveMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_IncentiveMaintenance",
////                    controller = "Maintenance",
////                    paramName = "IncentiveList",
////                    paramValue = incentiveCategoryData.fld_JenisInsentif
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult BankMaintenance(string filter, int page = 1, string sort = "fld_KodBank",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _BankMaintenance(string filter, int page = 1,
////            string sort = "fld_KodBank",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_Bank>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var bankData = db.tbl_Bank
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = bankData
////                    .Where(x => x.fld_KodBank.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_NamaBank.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = bankData
////                    .Count(x => x.fld_KodBank.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_NamaBank.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = bankData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = bankData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _BankMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_Bank bank = new MasterModels.tbl_Bank();

////            var getBankRunningNo = db.tbl_Bank
////                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fld_KodBank)
////                .Select(s => s.fld_KodBank)
////                .FirstOrDefault();

////            int bankCodeLength = getBankRunningNo.Length;

////            string bankCode = "";

////            if (String.IsNullOrEmpty(getBankRunningNo))
////            {
////                bankCode = "01";
////            }

////            else
////            {
////                int generateNewBankNo = Convert.ToInt32(getBankRunningNo) + 1;
////                bankCode = generateNewBankNo.ToString("0");
////            }

////            bank.fld_KodBank = bankCode;

////            return PartialView(bank);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BankMaintenanceCreate(MasterModels.tbl_Bank bank)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    bank.fld_NamaBank = bank.fld_NamaBank.ToUpper();
////                    bank.fld_NegaraID = NegaraID;
////                    bank.fld_SyarikatID = SyarikatID;
////                    bank.fld_Deleted = false;

////                    db.tbl_Bank.Add(bank);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "bankMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_BankMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _BankMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var bankData = db.tbl_Bank
////                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            return PartialView(bankData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BankMaintenanceEdit(MasterModels.tbl_Bank bank)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var bankData = db.tbl_Bank.SingleOrDefault(
////                        x => x.fld_ID == bank.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    bankData.fld_NamaBank = bank.fld_NamaBank.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "2",
////                        div = "bankMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_BankMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _BankMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var bankData = db.tbl_Bank
////                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                                      x.fld_SyarikatID == SyarikatID);

////            return PartialView(bankData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BankMaintenanceDelete(MasterModels.tbl_Bank bank)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var bankData = db.tbl_Bank.SingleOrDefault(
////                    x => x.fld_ID == bank.fld_ID &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (bankData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                bankData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "2",
////                    div = "bankMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_BankMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CompanyGroupMaintenance(string filter, int page = 1, string sort = "fld_NamaKmplnSyrkt",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CompanyGroupMaintenance(string filter, int page = 1, string sort = "fld_NamaKmplnSyrkt", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_KumpulanSyarikat>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var companyGroupData = db.tbl_KumpulanSyarikat;

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = companyGroupData
////                    .Where(x => x.fld_NamaKmplnSyrkt.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = companyGroupData
////                    .Count(x => x.fld_NamaKmplnSyrkt.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = companyGroupData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = companyGroupData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;
////            ViewBag.SyarikatID = SyarikatID;
////            ViewBag.NegaraID = NegaraID;

////            return View(records);
////        }

////        public ActionResult _CompanyGroupMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_KumpulanSyarikat kumpulanSyarikat = new MasterModels.tbl_KumpulanSyarikat();

////            return PartialView(kumpulanSyarikat);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyGroupMaintenanceCreate(MasterModels.tbl_KumpulanSyarikat kumpulanSyarikat)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var companyGroupData = db.tbl_KumpulanSyarikat
////                    .Where(x => x.fld_NamaKmplnSyrkt.ToUpper() == kumpulanSyarikat.fld_NamaKmplnSyrkt.ToUpper());

////                if (companyGroupData.ToList().Count != 0)
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorDuplicateCompanyGroup,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }

////                if (ModelState.IsValid)
////                {
////                    kumpulanSyarikat.fld_NamaKmplnSyrkt = kumpulanSyarikat.fld_NamaKmplnSyrkt.ToUpper();
////                    kumpulanSyarikat.fld_Deleted = false;

////                    db.tbl_KumpulanSyarikat.Add(kumpulanSyarikat);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "companyGroupMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CompanyGroupMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CompanyGroupMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var companyGroupData = db.tbl_KumpulanSyarikat
////                .SingleOrDefault(x => x.fld_KmplnSyrktID == id);

////            return PartialView(companyGroupData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyGroupMaintenanceEdit(MasterModels.tbl_KumpulanSyarikat kumpulanSyarikat)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var companyGroupData = db.tbl_KumpulanSyarikat
////                        .SingleOrDefault(x => x.fld_KmplnSyrktID == kumpulanSyarikat.fld_KmplnSyrktID);

////                    companyGroupData.fld_NamaKmplnSyrkt = kumpulanSyarikat.fld_NamaKmplnSyrkt.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "companyGroupMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CompanyGroupMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CompanyGroupMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var companyGroupData = db.tbl_KumpulanSyarikat
////                .SingleOrDefault(x => x.fld_KmplnSyrktID == id);

////            return PartialView(companyGroupData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyGroupMaintenanceDelete(MasterModels.tbl_KumpulanSyarikat kumpulanSyarikat)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var companyGroupData = db.tbl_KumpulanSyarikat
////                    .SingleOrDefault(x => x.fld_KmplnSyrktID == kumpulanSyarikat.fld_KmplnSyrktID);

////                bool status = true;

////                var message = "";
////                if (companyGroupData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                companyGroupData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgDelete2,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "companyGroupMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CompanyGroupMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CompanyCountryMaintenance(string filter, int page = 1, string sort = "fld_NamaNegara",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CompanyCountryMaintenance(string filter, int page = 1, string sort = "fld_NamaNegara", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_Negara>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var companyCountryData = db.tbl_Negara;

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = companyCountryData
////                    .Where(x => x.fld_NamaNegara.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = companyCountryData
////                    .Count(x => x.fld_NamaNegara.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = companyCountryData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = companyCountryData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;
////            ViewBag.SyarikatID = SyarikatID;
////            ViewBag.NegaraID = NegaraID;

////            return View(records);
////        }

////        public ActionResult _CompanyCountryMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_Negara negara = new MasterModels.tbl_Negara();

////            List<SelectListItem> CountryList = new List<SelectListItem>();

////            CountryList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "krytnlist" && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfDesc, Text = s.fldOptConfDesc }),
////                "Value", "Text").DistinctBy(d => d.Value).ToList();
////            CountryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CountryList = CountryList;

////            List<SelectListItem> CompanyGroupList = new List<SelectListItem>();

////            CompanyGroupList = new SelectList(
////                db.tbl_KumpulanSyarikat
////                    .Where(x => x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_NamaKmplnSyrkt)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KmplnSyrktID.ToString(), Text = s.fld_NamaKmplnSyrkt }),
////                "Value", "Text").ToList();
////            CompanyGroupList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CompanyGroupList = CompanyGroupList;

////            return PartialView(negara);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyCountryMaintenanceCreate(MasterModels.tbl_Negara negara)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var companyCountryData = db.tbl_Negara
////                    .Where(x => x.fld_NamaNegara.ToUpper() == negara.fld_NamaNegara.ToUpper() && x.fld_KmplnSyrktID == negara.fld_KmplnSyrktID);

////                if (companyCountryData.ToList().Count != 0)
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorDuplicateCompanyCountry,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }

////                if (ModelState.IsValid)
////                {
////                    negara.fld_Deleted = false;

////                    db.tbl_Negara.Add(negara);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "companyCountryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CompanyCountryMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CompanyCountryMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var companyCountryData = db.tbl_Negara
////                .SingleOrDefault(x => x.fld_NegaraID == id);

////            List<SelectListItem> CountryList = new List<SelectListItem>();

////            CountryList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "krytnlist" && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfDesc)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfDesc, Text = s.fldOptConfDesc }),
////                "Value", "Text").DistinctBy(d => d.Value).ToList();
////            CountryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CountryList = CountryList;

////            List<SelectListItem> CompanyGroupList = new List<SelectListItem>();

////            CompanyGroupList = new SelectList(
////                db.tbl_KumpulanSyarikat
////                    .Where(x => x.fld_Deleted == false)
////                    .OrderBy(o => o.fld_NamaKmplnSyrkt)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KmplnSyrktID.ToString(), Text = s.fld_NamaKmplnSyrkt }),
////                "Value", "Text").ToList();
////            CompanyGroupList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CompanyGroupList = CompanyGroupList;

////            return PartialView(companyCountryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyCountryMaintenanceEdit(MasterModels.tbl_Negara negara)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var companyCountryData = db.tbl_Negara
////                        .SingleOrDefault(x => x.fld_NegaraID == negara.fld_NegaraID);

////                    companyCountryData.fld_NamaNegara = negara.fld_NamaNegara;
////                    companyCountryData.fld_KmplnSyrktID = negara.fld_KmplnSyrktID;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "companyCountryMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CompanyCountryMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CompanyCountryMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var companyCountryData = db.tbl_Negara
////                .SingleOrDefault(x => x.fld_NegaraID == id);            

////            return PartialView(companyCountryData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyCountryMaintenanceDelete(MasterModels.tbl_Negara negara)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var companyCountryData = db.tbl_Negara
////                    .SingleOrDefault(x => x.fld_NegaraID == negara.fld_NegaraID);

////                bool status = true;

////                var message = "";
////                if (companyCountryData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                companyCountryData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "companyCountryMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CompanyCountryMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult CompanyMaintenance(string filter, int page = 1, string sort = "fld_NamaSyarikat",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _CompanyMaintenance(string filter, int page = 1, string sort = "fld_NamaSyarikat", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_Syarikat>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var companyData = db.tbl_Syarikat;

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = companyData
////                    .Where(x => x.fld_NamaSyarikat.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = companyData
////                    .Count(x => x.fld_NamaSyarikat.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = companyData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = companyData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _CompanyMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_Syarikat syarikat = new MasterModels.tbl_Syarikat();

////            var companyGroupCountryData = from tbl_Negara in db.tbl_Negara
////                join tbl_KumpulanSyarikat in db.tbl_KumpulanSyarikat on tbl_Negara.fld_KmplnSyrktID equals
////                tbl_KumpulanSyarikat.fld_KmplnSyrktID
////                where tbl_Negara.fld_Deleted == false && tbl_KumpulanSyarikat.fld_Deleted == false
////                select new { Negara = tbl_Negara, KumpulanSyarikat = tbl_KumpulanSyarikat };

////            List<SelectListItem> CompanyGroupCountryList = new List<SelectListItem>();

////            CompanyGroupCountryList = new SelectList(
////                companyGroupCountryData
////                    .Select(
////                        s => new SelectListItem { Value = s.Negara.fld_NegaraID.ToString(), Text = s.KumpulanSyarikat.fld_NamaKmplnSyrkt + " (" + s.Negara.fld_NamaNegara +")" }),
////                "Value", "Text").ToList();
////            CompanyGroupCountryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CompanyGroupCountryList = CompanyGroupCountryList;

////            return PartialView(syarikat);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyMaintenanceCreate(MasterModels.tbl_Syarikat syarikat, int? CompanyGroupCountryLists)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var companyData = db.tbl_Syarikat
////                    .Where(x => x.fld_NamaSyarikat.ToUpper() == syarikat.fld_NamaSyarikat.ToUpper() ||
////                                x.fld_NamaPndkSyarikat.ToUpper() == syarikat.fld_NamaPndkSyarikat.ToUpper() ||
////                                x.fld_NoSyarikat.ToUpper() == syarikat.fld_NoSyarikat.ToUpper() ||
////                                x.fld_FrstNmeUsrNme.ToUpper() == syarikat.fld_FrstNmeUsrNme.ToUpper() ||
////                                x.fld_RequestCode.ToUpper() == syarikat.fld_RequestCode.ToUpper());

////                if (companyData.ToList().Count != 0)
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorDuplicateCompanyCountry,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }

////                if (ModelState.IsValid)
////                {
////                    syarikat.fld_NamaSyarikat = syarikat.fld_NamaSyarikat.ToUpper();
////                    syarikat.fld_NamaPndkSyarikat = syarikat.fld_NamaPndkSyarikat.ToUpper();
////                    syarikat.fld_NoSyarikat = syarikat.fld_NoSyarikat.ToUpper();
////                    syarikat.fld_SyarikatEmail = syarikat.fld_SyarikatEmail.ToUpper();
////                    syarikat.fld_FrstNmeUsrNme = syarikat.fld_FrstNmeUsrNme.ToUpper();
////                    syarikat.fld_RequestCode = syarikat.fld_RequestCode.ToUpper();
////                    syarikat.fld_Deleted = false;

////                    db.tbl_Syarikat.Add(syarikat);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "companyMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CompanyMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CompanyMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var companyData = db.tbl_Syarikat
////                .SingleOrDefault(x => x.fld_SyarikatID == id);

////            var companyGroupCountryData = from tbl_Negara in db.tbl_Negara
////                join tbl_KumpulanSyarikat in db.tbl_KumpulanSyarikat on tbl_Negara.fld_KmplnSyrktID equals
////                tbl_KumpulanSyarikat.fld_KmplnSyrktID
////                where tbl_Negara.fld_Deleted == false && tbl_KumpulanSyarikat.fld_Deleted == false
////                select new { Negara = tbl_Negara, KumpulanSyarikat = tbl_KumpulanSyarikat };

////            List<SelectListItem> CompanyGroupCountryList = new List<SelectListItem>();

////            CompanyGroupCountryList = new SelectList(
////                companyGroupCountryData
////                    .Select(
////                        s => new SelectListItem { Value = s.Negara.fld_NegaraID.ToString(), Text = s.KumpulanSyarikat.fld_NamaKmplnSyrkt + " (" + s.Negara.fld_NamaNegara + ")" }),
////                "Value", "Text", companyData.fld_NegaraID).ToList();
////            CompanyGroupCountryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CompanyGroupCountryLists = CompanyGroupCountryList;

////            return PartialView(companyData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyMaintenanceEdit(MasterModels.tbl_Syarikat syarikat)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var companyData = db.tbl_Syarikat
////                        .SingleOrDefault(x => x.fld_SyarikatID == syarikat.fld_SyarikatID);

////                    companyData.fld_NegaraID = syarikat.fld_NegaraID;
////                    companyData.fld_NamaSyarikat = syarikat.fld_NamaSyarikat.ToUpper();
////                    companyData.fld_NamaPndkSyarikat = syarikat.fld_NamaPndkSyarikat.ToUpper();
////                    companyData.fld_NoSyarikat = syarikat.fld_NoSyarikat.ToUpper();
////                    companyData.fld_SyarikatEmail = syarikat.fld_SyarikatEmail.ToUpper();
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "companyMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_CompanyMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _CompanyMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var companyData = db.tbl_Syarikat
////                .SingleOrDefault(x => x.fld_SyarikatID == id);

////            var companyGroupCountryData = from tbl_Negara in db.tbl_Negara
////                join tbl_KumpulanSyarikat in db.tbl_KumpulanSyarikat on tbl_Negara.fld_KmplnSyrktID equals
////                tbl_KumpulanSyarikat.fld_KmplnSyrktID
////                where tbl_Negara.fld_Deleted == false && tbl_KumpulanSyarikat.fld_Deleted == false
////                select new { Negara = tbl_Negara, KumpulanSyarikat = tbl_KumpulanSyarikat };

////            List<SelectListItem> CompanyGroupCountryList = new List<SelectListItem>();

////            CompanyGroupCountryList = new SelectList(
////                companyGroupCountryData
////                    .Select(
////                        s => new SelectListItem { Value = s.Negara.fld_NegaraID.ToString(), Text = s.KumpulanSyarikat.fld_NamaKmplnSyrkt + " (" + s.Negara.fld_NamaNegara + ")" }),
////                "Value", "Text").ToList();
////            CompanyGroupCountryList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });

////            ViewBag.CompanyGroupCountryList = CompanyGroupCountryList;

////            return PartialView(companyData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _CompanyMaintenanceDelete(MasterModels.tbl_Syarikat syarikat)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var companyData = db.tbl_Syarikat
////                    .SingleOrDefault(x => x.fld_SyarikatID == syarikat.fld_SyarikatID);

////                companyData.fld_Deleted = true;
////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgDelete2,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "companyMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_CompanyMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KiraanMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _KiraanMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "kiraot" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KiraanMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kiraot" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsKiraOTViewModel unitViewModel = new tblOptionConfigsKiraOTViewModel();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            //List<SelectListItem> numberList = new List<SelectListItem>();

////            //numberList = new SelectList(
////            //    db.tblOptionConfigsWebs
////            //        .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////            //        .OrderBy(o => o.fldOptConfID)
////            //        .Select(
////            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////            //    "Value", "Text").ToList();
////            //numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            //ViewBag.NumberList = numberList;

////            //List<SelectListItem> categoryList = new List<SelectListItem>();

////            //categoryList = new SelectList(
////            //    db.tblOptionConfigsWebs
////            //        .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
////            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////            //        .OrderBy(o => o.fldOptConfID)
////            //        .Select(
////            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////            //    "Value", "Text").ToList();
////            //categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            //ViewBag.CategoryList = categoryList;

////            return PartialView(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KiraanMaintenanceEdit(MasterModels.tblOptionConfigsKiraOTViewModel optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kiraot" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "kiraMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KiraanMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KdrHargaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _KdrHargaMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "kadarot" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID &&
////                            x.fldOptConfFlag2 == "1");

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KdrHargaMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kadarot" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag2 == "1");

////            tblOptionConfigsHargaOTViewModel unitViewModel = new tblOptionConfigsHargaOTViewModel();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            //List<SelectListItem> numberList = new List<SelectListItem>();

////            //numberList = new SelectList(
////            //    db.tblOptionConfigsWebs
////            //        .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////            //        .OrderBy(o => o.fldOptConfID)
////            //        .Select(
////            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////            //    "Value", "Text").ToList();
////            //numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            //ViewBag.NumberList = numberList;

////            //List<SelectListItem> categoryList = new List<SelectListItem>();

////            //categoryList = new SelectList(
////            //    db.tblOptionConfigsWebs
////            //        .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
////            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////            //        .OrderBy(o => o.fldOptConfID)
////            //        .Select(
////            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////            //    "Value", "Text").ToList();
////            //categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            //ViewBag.CategoryList = categoryList;

////            return PartialView(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KdrHargaMaintenanceEdit(MasterModels.tblOptionConfigsHargaOTViewModel optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kadarot" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID &&
////                             x.fldOptConfFlag2 == "1");

////                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "KdrHargaMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KdrHargaMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PmbhgiHargaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _PmbhgiHargaMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "kadarot" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID &&
////                            x.fldOptConfFlag2 == "2");

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _PmbhgiHargaMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kadarot" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag2 == "2");

////            tblOptionConfigsOTViewModel unitViewModel = new tblOptionConfigsOTViewModel();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return PartialView(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PmbhgiHargaMaintenanceEdit(MasterModels.tblOptionConfigsOTViewModel optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kadarot" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID &&
////                             x.fldOptConfFlag2 == "2");

////                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "PmbhgiHargaMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PmbhgiHargaMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult StateWeekTypeMaintenance(string filter, int page = 1, string sort = "fld_NegeriID",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            var negeriCount = db.tblOptionConfigsWebs.Where(
////                x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                     x.fldDeleted == false).Count();

////            var mingguNegeriCount = db.tbl_MingguNegeri.Where(
////                x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                     x.fld_Deleted == false).Count();

////            bool completed = false;

////            if (negeriCount == mingguNegeriCount)
////            {
////                completed = true;
////            }

////            ViewBag.Completed = completed;

////            return View();
////        }

////        public ActionResult _StateWeekTypeMaintenance(string filter, int page = 1, string sort = "fld_NegeriID", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.vw_MingguNegeri>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var weeklyLeaveData =
////                db.vw_MingguNegeri.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = weeklyLeaveData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = weeklyLeaveData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = weeklyLeaveData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = weeklyLeaveData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _StateWeekTypeMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> stateList = new List<SelectListItem>();

////            stateList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfFlag3, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            stateList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.StateList = stateList;

////            List<SelectListItem> weeklyLeaveList = new List<SelectListItem>();

////            weeklyLeaveList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "hari" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            weeklyLeaveList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.WeeklyLeaveList = weeklyLeaveList;

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _StateWeekTypeMaintenanceCreate(MasterModels.tbl_MingguNegeri mingguNegeri)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    mingguNegeri.fld_Deleted = false;
////                    mingguNegeri.fld_NegaraID = NegaraID;
////                    mingguNegeri.fld_SyarikatID = SyarikatID;

////                    db.tbl_MingguNegeri.Add(mingguNegeri);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "stateWeekTypeMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_StateWeekTypeMaintenance",
////                        controller = "Maintenance"
////                    });

////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public JsonResult IsStateWeekTypeExist(int fld_NegeriID)
////        {
////            return Json(!db.tbl_MingguNegeri.Any(x => x.fld_NegeriID == fld_NegeriID), JsonRequestBehavior.AllowGet);
////        }

////        public ActionResult _StateWeekTypeMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
////                x => x.fld_MingguNegeriID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tbl_MingguNegeriViewModel mingguNegeriViewModel = new tbl_MingguNegeriViewModel();

////            PropertyCopy.Copy(mingguNegeriViewModel, weeklyLeaveData);

////            List<SelectListItem> weeklyLeaveList = new List<SelectListItem>();

////            weeklyLeaveList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "hari" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            weeklyLeaveList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.WeeklyLeaveList = weeklyLeaveList;

////            return PartialView(mingguNegeriViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _StateWeekTypeMaintenanceEdit(MasterModels.tbl_MingguNegeriViewModel mingguNegeri)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
////                        x => x.fld_MingguNegeriID == mingguNegeri.fld_MingguNegeriID && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);
                    
////                    weeklyLeaveData.fld_JenisMinggu = mingguNegeri.fld_JenisMinggu;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "stateWeekTypeMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_StateWeekTypeMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _StateWeekTypeMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
////                x => x.fld_MingguNegeriID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(weeklyLeaveData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _StateWeekTypeMaintenanceDelete(MasterModels.tbl_MingguNegeri mingguNegeri)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
////                    x => x.fld_MingguNegeriID == mingguNegeri.fld_MingguNegeriID && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (weeklyLeaveData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                weeklyLeaveData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "stateWeekTypeMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_StateWeekTypeMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult WorkingDayMaintenance(string StateList, string YearList, int page = 1, string sort = "fld_NegeriID",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            List<SelectListItem> stateList = new List<SelectListItem>();

////            stateList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfFlag3, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            stateList.Insert(0, new SelectListItem { Text = "SEMUA", Value = "" });

////            ViewBag.StateList = stateList;

////            int drpyear = 0;
////            int drprangeyear = 0;

////            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
////            drprangeyear = timezone.gettimezone().Year;

////            var yearlist = new List<SelectListItem>();
////            for (var i = drpyear; i <= drprangeyear; i++)
////            {
////                if (i == timezone.gettimezone().Year)
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
////                }
////                else
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
////                }
////            }

////            ViewBag.YearList = yearlist;

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _WorkingDayMaintenance(string StateList, string YearList, int page = 1,
////            string sort = "fld_NegeriID",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.vw_HariBekerja>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var workingDayData = db.vw_HariBekerja
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

////            if (String.IsNullOrEmpty(YearList))
////            {
////                YearList = DateTime.Now.Year.ToString();
////            }

////            if (!String.IsNullOrEmpty(StateList))
////            {
////                records.Content = workingDayData
////                    .Where(x => x.fld_NegeriID.ToString() == StateList && x.fld_Year.ToString() == YearList)
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = workingDayData
////                    .Count(x => x.fld_NegeriID.ToString() == StateList && x.fld_Year.ToString() == YearList);
////            }

////            else
////            {
////                records.Content = workingDayData.Where(x => x.fld_Year.ToString() == YearList)
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = workingDayData.Where(x => x.fld_Year.ToString() == YearList)
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _WorkingDayMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            int drpyear = 0;
////            int drprangeyear = 0;

////            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
////            drprangeyear = timezone.gettimezone().Year;

////            var yearlist = new List<SelectListItem>();
////            for (var i = drpyear; i <= drprangeyear; i++)
////            {
////                if (i == timezone.gettimezone().Year)
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
////                }
////                else
////                {
////                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
////                }
////            }

////            ViewBag.YearList = yearlist;

////            return View();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _WorkingDayMaintenanceCreate(string YearList)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var workingDayData = db.tbl_HariBekerja.Where(x => x.fld_Year.ToString() == YearList);

////                foreach (var workingDay in workingDayData)
////                {
////                    workingDay.fld_Deleted = true;
////                }

////                db.SaveChanges();

////                int year = Convert.ToInt32(YearList);

////                //get list of month
////                var monthList = db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "monthlist" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .Select(s => s.fldOptConfValue)
////                    .ToList();

////                //get all kod negeri in malaysia
////                var NegeriList = db.vw_MingguNegeri
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .ToList();

////                foreach (var negeri in NegeriList)
////                {
////                    var kodNegeri = Convert.ToInt32(negeri.fldOptConfValue);

////                    foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
////                    {
////                        if ((int)day == negeri.fld_JenisMinggu)
////                        {
////                            foreach (var month in monthList)
////                            {
////                                var cutiUmum = db.tbl_CutiUmum
////                                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
////                                                x.fld_Deleted == false && x.fld_Negeri == kodNegeri &&
////                                                x.fld_Tahun == year &&
////                                                x.fld_TarikhCuti.Value.Month.ToString() == month)
////                                    .ToList();

////                                //First We find out last date of mont
////                                //DateTime today = DateTime.Today;
////                                DateTime endOfMonth = new DateTime(year, Convert.ToInt32(month),
////                                    DateTime.DaysInMonth(year, Convert.ToInt32(month)));

////                                //get only last day of month
////                                int daysInMonth = endOfMonth.Day;

////                                int totalLeaveInAMonth = 0;

////                                for (int i = 0; i < daysInMonth; ++i)
////                                {
////                                    DateTime d = new DateTime(year, Convert.ToInt32(month), i + 1);

////                                    //Compare date with sunday
////                                    if (d.DayOfWeek == day)
////                                    {
////                                        totalLeaveInAMonth = totalLeaveInAMonth + 1;
////                                    }
////                                }

////                                var workingDaysInMonth = (DateTime.DaysInMonth(year, Convert.ToInt32(month))) - totalLeaveInAMonth -
////                                                         cutiUmum.Count;

////                                MasterModels.tbl_HariBekerja hariBekerjaMinggu1 = new MasterModels.tbl_HariBekerja();

////                                hariBekerjaMinggu1.fld_Month = Convert.ToInt16(month);
////                                hariBekerjaMinggu1.fld_Year = Convert.ToInt16(year);
////                                hariBekerjaMinggu1.fld_BilanganHariBekerja = Convert.ToInt16(workingDaysInMonth);
////                                hariBekerjaMinggu1.fld_JenisMinggu = negeri.fld_JenisMinggu;
////                                hariBekerjaMinggu1.fld_NegaraID = NegaraID;
////                                hariBekerjaMinggu1.fld_NegeriID = kodNegeri;
////                                hariBekerjaMinggu1.fld_SyarikatID = SyarikatID;
////                                hariBekerjaMinggu1.fld_Deleted = false;

////                                db.tbl_HariBekerja.Add(hariBekerjaMinggu1);
////                                db.SaveChanges();
////                            }

////                        }
////                    }
////                }

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgGenerateWorkingDay,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "workingDayMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_WorkingDayMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "1"
////                });
////            }
////        }

////        public ActionResult OilPriceRangeMaintenance(string filter, int page = 1, string sort = "fld_RangeHargaLower",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _OilPriceRangeMaintenance(string filter, int page = 1, string sort = "fld_RangeHargaLower", string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_HargaSawitRange>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var oilPriceRangeData = db.tbl_HargaSawitRange
////                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = oilPriceRangeData
////                    .Where(x => x.fld_KodHarga.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = oilPriceRangeData
////                    .Count(x => x.fld_KodHarga.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = oilPriceRangeData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = oilPriceRangeData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _OilPriceRangeMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _OilPriceRangeMaintenanceCreate(MasterModels.tbl_HargaSawitRange hargaSawitRange)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    hargaSawitRange.fld_KodHarga = hargaSawitRange.fld_KodHarga.ToUpper();
////                    hargaSawitRange.fld_Deleted = false;
////                    hargaSawitRange.fld_NegaraID = NegaraID;
////                    hargaSawitRange.fld_SyarikatID = SyarikatID;

////                    db.tbl_HargaSawitRange.Add(hargaSawitRange);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "oilPriceRangeMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_OilPriceRangeMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public JsonResult IsOilPriceRangeCodeExist(string fld_KodHarga)
////        {
////            return Json(!db.tbl_HargaSawitRange.Any(x => x.fld_KodHarga.ToUpper() == fld_KodHarga.ToUpper()), JsonRequestBehavior.AllowGet);
////        }

////        public ActionResult _OilPriceRangeMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tbl_HargaSawitRangeViewModel oilPriceRangeViewModel = new tbl_HargaSawitRangeViewModel();

////            PropertyCopy.Copy(oilPriceRangeViewModel, oilPriceRangeData);

////            return PartialView(oilPriceRangeViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _OilPriceRangeMaintenanceEdit(MasterModels.tbl_HargaSawitRangeViewModel hargaSawitRange)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
////                        x => x.fld_ID == hargaSawitRange.fld_ID && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    oilPriceRangeData.fld_KodHarga = hargaSawitRange.fld_KodHarga.ToUpper();
////                    oilPriceRangeData.fld_RangeHargaLower = hargaSawitRange.fld_RangeHargaLower;
////                    oilPriceRangeData.fld_RangeHargaUpper = hargaSawitRange.fld_RangeHargaUpper;
////                    oilPriceRangeData.fld_Insentif = hargaSawitRange.fld_Insentif;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "oilPriceRangeMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_OilPriceRangeMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _OilPriceRangeMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(oilPriceRangeData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _OilPriceRangeMaintenanceDelete(MasterModels.tbl_HargaSawitRangeViewModel hargaSawitRange)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
////                    x => x.fld_ID == hargaSawitRange.fld_ID && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (oilPriceRangeData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                oilPriceRangeData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "oilPriceRangeMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_OilPriceRangeMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult IncentiveEligibilityMaintenance(string IncentiveList, int page = 1, string sort = "fld_KodInsentif",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _IncentiveEligibilityMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            List<CustMod_DesignationIncentiveEligibility> DesignationIncentiveEligibility = new List<CustMod_DesignationIncentiveEligibility>();

////            ViewBag.pageSize = int.Parse(GetConfig.GetData("paging"));

////            if (!String.IsNullOrEmpty(filter))
////            {
////                var incentiveTypeData = db.tbl_JenisInsentif
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(x => x.fld_KodInsentif);

////                foreach (var i in incentiveTypeData)
////                {
////                    var designationData = db.tblOptionConfigsWebs
////                        .Where(a => a.fldOptConfFlag2 == i.fld_KodInsentif && a.fld_NegaraID == NegaraID &&
////                                    a.fld_SyarikatID == SyarikatID && a.fldDeleted == false)
////                        .OrderBy(x => x.fldOptConfValue)
////                        .ToList();
////                    DesignationIncentiveEligibility.Add(new CustMod_DesignationIncentiveEligibility { JenisInsentif = i, Designation = designationData });
////                }
////            }

////            else
////            {
////                var incentiveTypeData = db.tbl_JenisInsentif
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                    .OrderBy(x => x.fld_KodInsentif);

////                foreach (var i in incentiveTypeData)
////                {
////                    var designationData = db.tblOptionConfigsWebs
////                        .Where(a => a.fldOptConfFlag2 == i.fld_KodInsentif && a.fld_NegaraID == NegaraID &&
////                                    a.fld_SyarikatID == SyarikatID)
////                        .OrderBy(x => x.fldOptConfValue)
////                        .ToList();
////                    DesignationIncentiveEligibility.Add(new CustMod_DesignationIncentiveEligibility { JenisInsentif = i, Designation = designationData });
////                }
////            }

////            return View(DesignationIncentiveEligibility);
////        }

////        public ActionResult _IncentiveEligibilityMaintenanceCreate(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> designationList = new List<SelectListItem>();

////            designationList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
////                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                    .OrderBy(o => o.fldOptConfID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////                "Value", "Text").ToList();
////            designationList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            ViewBag.DesignationList = designationList;

////            tblOptionConfigsWebIncentiveEligibilityViewModel optionConfigsWeb =
////                new tblOptionConfigsWebIncentiveEligibilityViewModel();

////            optionConfigsWeb.fldOptConfFlag2 = GetConfig.GetIncentiveCodeFromID(id);
////            optionConfigsWeb.fld_NegaraID = NegaraID;
////            optionConfigsWeb.fld_SyarikatID = SyarikatID;

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _IncentiveEligibilityMaintenanceCreate(MasterModels.tblOptionConfigsWebIncentiveEligibilityViewModel optionConfigsWebViewModel)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (db.tblOptionConfigsWebs.Any(x => x.fldOptConfValue.ToUpper() == optionConfigsWebViewModel.fldOptConfValue.ToUpper() &&
////                                                     x.fldOptConfFlag2.ToUpper() == optionConfigsWebViewModel.fldOptConfFlag2.ToUpper() &&
////                                                     x.fldOptConfFlag1 == "kelayakanInsentif"))
////                {
////                    ModelState.AddModelError("", "");
////                }

////                if (ModelState.IsValid)
////                {
////                    optionConfigsWebViewModel.fldOptConfDesc = GetConfig.GetWebConfigDesc(optionConfigsWebViewModel.fldOptConfValue,
////                        "designation", NegaraID, SyarikatID);
////                    optionConfigsWebViewModel.fldOptConfFlag1 = "kelayakanInsentif";
////                    optionConfigsWebViewModel.fldDeleted = false;
////                    optionConfigsWebViewModel.fld_NegaraID = NegaraID;
////                    optionConfigsWebViewModel.fld_SyarikatID = SyarikatID;

////                    MasterModels.tblOptionConfigsWeb tblOptionConfigsWeb = new MasterModels.tblOptionConfigsWeb();

////                    PropertyCopy.Copy(tblOptionConfigsWeb, optionConfigsWebViewModel);

////                    db.tblOptionConfigsWebs.Add(tblOptionConfigsWeb);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "incentiveEligibilityMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_IncentiveEligibilityMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _IncentiveEligibilityMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var incentiveEligibilityData = db.tblOptionConfigsWebs
////                .SingleOrDefault(x => x.fldOptConfID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////            return PartialView(incentiveEligibilityData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _IncentiveEligibilityMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var incentiveEligibilityData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kelayakanInsentif" &&
////                         x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (incentiveEligibilityData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                incentiveEligibilityData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "incentiveEligibilityMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_IncentiveEligibilityMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public JsonResult IsIncentiveEligibilityExist(string fldOptConfFlag2, string fldOptConfValue)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return Json(
////                !db.tblOptionConfigsWebs.Any(x => x.fldOptConfValue.ToUpper() == fldOptConfValue.ToUpper() &&
////                                                  x.fldOptConfFlag2.ToUpper() == fldOptConfFlag2.ToUpper() &&
////                                                  x.fldOptConfFlag1 == "kelayakanInsentif" &&
////                                                  x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
////                JsonRequestBehavior.AllowGet);
////        }

////        public ActionResult HarvestingDifficultyPriceMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _HarvestingDifficultyPriceMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var harvestingDifficultyData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "KesukaranMenuai" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = harvestingDifficultyData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = harvestingDifficultyData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = harvestingDifficultyData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = harvestingDifficultyData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _HarvestingDifficultyPriceMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            MasterModels.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate optionConfigsWeb = new MasterModels.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate();

////            var getCurrentRunningHarvestingDifficultyPriceCode = dbview.tblOptionConfigsWeb
////                .Where(x => x.fldOptConfFlag1 == "KesukaranMenuai")
////                .OrderByDescending(o => o.fldOptConfValue)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            if (getCurrentRunningHarvestingDifficultyPriceCode == null)
////            {
////                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
////                                                       .Where(
////                                                           x => x.fldOptConfFlag1 == "KesukaranMenuaiFlag" &&
////                                                                x.fld_NegaraID == NegaraID &&
////                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() + "01";
////            }

////            else
////            {
////                int generateNewHarvestingDifficultyPriceCode =
////                    Convert.ToInt32(getCurrentRunningHarvestingDifficultyPriceCode.Substring(1)) + 1;

////                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
////                                                       .Where(
////                                                           x => x.fldOptConfFlag1 == "KesukaranMenuaiFlag" &&
////                                                                x.fld_NegaraID == NegaraID &&
////                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() +
////                                                   generateNewHarvestingDifficultyPriceCode.ToString("00");
////            }

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _HarvestingDifficultyPriceMaintenanceCreate(MasterModels.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tblOptionConfigsWeb harvestingDifficultyPriceModel = new MasterModels.tblOptionConfigsWeb();

////                    harvestingDifficultyPriceModel.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    harvestingDifficultyPriceModel.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    harvestingDifficultyPriceModel.fldOptConfFlag1 = "KesukaranMenuai";
////                    harvestingDifficultyPriceModel.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
////                    harvestingDifficultyPriceModel.fldDeleted = false;
////                    harvestingDifficultyPriceModel.fld_NegaraID = NegaraID;
////                    harvestingDifficultyPriceModel.fld_SyarikatID = SyarikatID;

////                    db.tblOptionConfigsWebs.Add(harvestingDifficultyPriceModel);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "harvestingDifficultyPriceMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_HarvestingDifficultyPriceMaintenance",
////                        controller = "Maintenance"
////                    });

////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _HarvestingDifficultyPriceMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMenuai" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit harvestingDifficultyPriceViewModel = new tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit();

////            PropertyCopy.Copy(harvestingDifficultyPriceViewModel, harvestingDifficultyPriceData);

////            return PartialView(harvestingDifficultyPriceViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _HarvestingDifficultyPriceMaintenanceEdit(MasterModels.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMenuai" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    harvestingDifficultyPriceData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "harvestingDifficultyPriceMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_HarvestingDifficultyPriceMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _HarvestingDifficultyPriceMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMenuai" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(harvestingDifficultyPriceData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _HarvestingDifficultyPriceMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMenuai" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (harvestingDifficultyPriceData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                harvestingDifficultyPriceData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "harvestingDifficultyPriceMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_HarvestingDifficultyPriceMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult FertilizingDifficultyPriceMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _FertilizingDifficultyPriceMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var fertilizingDifficultyData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "KesukaranMembaja" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = fertilizingDifficultyData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = fertilizingDifficultyData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = fertilizingDifficultyData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = fertilizingDifficultyData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _FertilizingDifficultyPriceMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////            MasterModels.tblOptionConfigsWebFertilizingDifficultyPriceViewModelCreate optionConfigsWeb = new MasterModels.tblOptionConfigsWebFertilizingDifficultyPriceViewModelCreate();

////            var getCurrentRunningFertilizingDifficultyPriceCode = dbview.tblOptionConfigsWeb
////                .Where(x => x.fldOptConfFlag1 == "KesukaranMembaja")
////                .OrderByDescending(o => o.fldOptConfValue)
////                .Select(s => s.fldOptConfValue)
////                .FirstOrDefault();

////            if (getCurrentRunningFertilizingDifficultyPriceCode == null)
////            {
////                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
////                                                       .Where(
////                                                           x => x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&
////                                                                x.fld_NegaraID == NegaraID &&
////                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() + "01";
////            }

////            else
////            {
////                int generateNewFertilizingDifficultyPriceCode =
////                    Convert.ToInt32(getCurrentRunningFertilizingDifficultyPriceCode.Substring(1)) + 1;

////                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
////                                                       .Where(
////                                                           x => x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&
////                                                                x.fld_NegaraID == NegaraID &&
////                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() +
////                                                   generateNewFertilizingDifficultyPriceCode.ToString("00");
////            }

////            return PartialView(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _FertilizingDifficultyPriceMaintenanceCreate(MasterModels.tblOptionConfigsWebFertilizingDifficultyPriceViewModelCreate optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    MasterModels.tblOptionConfigsWeb fertilizingDifficultyPriceModel = new MasterModels.tblOptionConfigsWeb();

////                    fertilizingDifficultyPriceModel.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    fertilizingDifficultyPriceModel.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    fertilizingDifficultyPriceModel.fldOptConfFlag1 = "KesukaranMembaja";
////                    fertilizingDifficultyPriceModel.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
////                    fertilizingDifficultyPriceModel.fldDeleted = false;
////                    fertilizingDifficultyPriceModel.fld_NegaraID = NegaraID;
////                    fertilizingDifficultyPriceModel.fld_SyarikatID = SyarikatID;

////                    db.tblOptionConfigsWebs.Add(fertilizingDifficultyPriceModel);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "fertilizingDifficultyPriceMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_FertilizingDifficultyPriceMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _FertilizingDifficultyPriceMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var fertilizingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMembaja" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsWebFertilizingDifficultyPriceViewModelEdit fertilizingDifficultyPriceViewModel = new tblOptionConfigsWebFertilizingDifficultyPriceViewModelEdit();

////            PropertyCopy.Copy(fertilizingDifficultyPriceViewModel, fertilizingDifficultyPriceData);

////            return PartialView(fertilizingDifficultyPriceViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _FertilizingDifficultyPriceMaintenanceEdit(MasterModels.tblOptionConfigsWebFertilizingDifficultyPriceViewModelEdit optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMembaja" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    harvestingDifficultyPriceData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "fertilizingDifficultyPriceMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_FertilizingDifficultyPriceMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _FertilizingDifficultyPriceMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMembaja" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(harvestingDifficultyPriceData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _FertilizingDifficultyPriceMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMembaja" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (harvestingDifficultyPriceData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                harvestingDifficultyPriceData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "fertilizingDifficultyPriceMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_FertilizingDifficultyPriceMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PayRateMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "unit" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult KmplnKategoriMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _KmplnKategoriMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "kmplnKategoriList" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KmplnKategoriMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kmplnKategoriList" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsKmplnViewModel unitViewModel = new tblOptionConfigsKmplnViewModel();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            //List<SelectListItem> numberList = new List<SelectListItem>();

////            //numberList = new SelectList(
////            //    db.tblOptionConfigsWebs
////            //        .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
////            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////            //        .OrderBy(o => o.fldOptConfID)
////            //        .Select(
////            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////            //    "Value", "Text").ToList();
////            //numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            //ViewBag.NumberList = numberList;

////            //List<SelectListItem> categoryList = new List<SelectListItem>();

////            //categoryList = new SelectList(
////            //    db.tblOptionConfigsWebs
////            //        .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
////            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
////            //        .OrderBy(o => o.fldOptConfID)
////            //        .Select(
////            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
////            //    "Value", "Text").ToList();
////            //categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

////            //ViewBag.CategoryList = categoryList;

////            return PartialView(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KmplnKategoriMaintenanceEdit(MasterModels.tblOptionConfigsKmplnViewModel optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kmplnKategoriList" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
////                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "KmplnKategoriMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KmplnKategoriMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KmplnKategoriMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KmplnKategoriMaintenanceCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "kmplnKategoriList" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "kmplnKategoriList";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "KmplnKategoriMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_KmplnKategoriMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KmplnKategoriMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kmplnKategoriList" && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(unitData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KmplnKategoriMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kmplnKategoriList" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "KmplnKategoriMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_KmplnKategoriMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }




////        public ActionResult GLMaintenance(string filter, int page = 1, string sort = "fld_KodGL",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";
            
////            return View();
////        }

////        public ActionResult _GLMaintenance(string filter, int page = 1,
////            string sort = "fld_KodGL",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_MapGL>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var glData = db.tbl_MapGL
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = glData
////                    .Where(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = glData
////                    .Count(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = glData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = glData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }


////        public JsonResult GetAktvt(string JnisAktvt)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";

////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
////            MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

////            List<SelectListItem> PilihAktiviti = new List<SelectListItem>();

////            var tbl_UpahAktiviti = db.tbl_UpahAktiviti.Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodJenisAktvt == JnisAktvt && x.fld_Deleted == false).ToList();

////            PilihAktiviti = new SelectList(tbl_UpahAktiviti.OrderBy(o => o.fld_KodAktvt).Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_KodAktvt.Trim() + " - " + s.fld_Desc }), "Value", "Text").ToList();
////            PilihAktiviti.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            dbr.Dispose();
////            return Json(new { PilihAktiviti });
////        }

////        public ActionResult _GLMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////           try
////            {
////                var jnsxtivlist = db.tbl_JenisAktiviti
////                    .Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_KodJnsAktvt).ToList();

////                ViewBag.JnisAktvt = new SelectList(
////                    jnsxtivlist
////                    .Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();

////                var fistxtivit = jnsxtivlist.Select(s => s.fld_KodJnsAktvt).Take(1).FirstOrDefault();
////                ViewBag.KodAktvtList = new SelectList(
////                    db.tbl_UpahAktiviti.Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodJenisAktvt == fistxtivit && x.fld_Deleted == false).OrderBy(o => o.fld_KodAktvt)
////                    .Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_KodAktvt.Trim() + " - " + s.fld_Desc }), "Value", "Text").ToList();

////                ViewBag.PaysheetList = new SelectList(
////                    db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "jnsPaysheet" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
////                        .Select(
////                            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),"Value", "Text").ToList();

////                ViewBag.KodGLList = new SelectList(
////                    db.tbl_GLSAP
////                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_GLcode)
////                        .Select(
////                            s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_GLcode }),"Value", "Text").ToList();

////                return PartialView();
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

          
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _GLMaintenanceCreate(MasterModels.tbl_MapGL GlMaintenance, string KodAktvtList, string PaysheetList, string KodGLList)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
////                                                    x.fld_KodAktvt == KodAktvtList && x.fld_KodGL == KodGLList &&
////                                                    x.fld_Paysheet == PaysheetList && x.fld_Deleted == false).FirstOrDefault();
////                if (checkdata == null)
////                {
////                    GlMaintenance.fld_KodAktvt = KodAktvtList;
////                    GlMaintenance.fld_KodGL = KodGLList;
////                    GlMaintenance.fld_Paysheet = PaysheetList;
////                    GlMaintenance.fld_Deleted = false;
////                    GlMaintenance.fld_NegaraID = NegaraID;
////                    GlMaintenance.fld_SyarikatID = SyarikatID;
////                    GlMaintenance.fld_WilayahID = WilayahID;
////                    GlMaintenance.fld_LadangID = LadangID;

////                    db.tbl_MapGL.Add(GlMaintenance);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "GLMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_GLMaintenance",
////                        controller = "Maintenance"
////                    });
////                }
////                else
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////                }


////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _GLMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);


////            var glData = db.tbl_MapGL
////                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
////                                    x.fld_Deleted == false);

////            var JnsAktivitiData = db.tbl_UpahAktiviti
////                .SingleOrDefault(x => x.fld_KodAktvt == glData.fld_KodAktvt.Trim() && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);


////            List<SelectListItem> JnisAktvt = new List<SelectListItem>();
////            JnisAktvt = new SelectList(
////                db.tbl_JenisAktiviti
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodJnsAktvt.ToString(), Text = s.fld_Desc }), "Value", "Text", JnsAktivitiData.fld_KodJenisAktvt).ToList();
////            JnisAktvt.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_KodJnsAktvt = JnisAktvt;


////            List<SelectListItem> kodAktvtList = new List<SelectListItem>();
////            kodAktvtList = new SelectList(
////                db.tbl_UpahAktiviti
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodAktvt)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodAktvt.ToString(), Text = s.fld_KodAktvt.Trim() + " - " + s.fld_Desc }), "Value", "Text", glData.fld_KodAktvt.Trim()).ToList();
////            kodAktvtList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_KodAktvt = kodAktvtList;



////            List<SelectListItem> paysheetList = new List<SelectListItem>();
////            paysheetList = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jnsPaysheet" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
////                    .Select(
////                           s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),"Value", "Text",glData.fld_Paysheet.Trim()).ToList();
////            paysheetList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_Paysheet = paysheetList;


////            List<SelectListItem> kodGLList = new List<SelectListItem>();
////            kodGLList = new SelectList(
////                db.tbl_GLSAP
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_GLcode)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_GLcode }),"Value", "Text",glData.fld_KodGL.Trim()).ToList();
////            kodGLList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_KodGL = kodGLList;

                      
////            return PartialView(glData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _GLMaintenanceEdit(MasterModels.tbl_MapGL gl)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
////                                                    x.fld_KodAktvt == gl.fld_KodAktvt && x.fld_KodGL == gl.fld_KodGL &&
////                                                    x.fld_Paysheet == gl.fld_Paysheet && x.fld_Deleted == false).FirstOrDefault();
////                if (checkdata == null)
////                {
////                    MasterModels.tbl_MapGL getGL = db.tbl_MapGL
////                        .Single(x => x.fld_ID == gl.fld_ID &&
////                                     x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID && x.fld_Deleted == false);

////                    getGL.fld_KodAktvt = gl.fld_KodAktvt;
////                    getGL.fld_KodGL = gl.fld_KodGL;
////                    getGL.fld_Paysheet = gl.fld_Paysheet;


////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "GLMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_GLMaintenance",
////                        controller = "Maintenance"
////                    });
////                }
////                else
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _GLMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var GlData = db.tbl_MapGL
////                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                                      x.fld_SyarikatID == SyarikatID);

////            return PartialView(GlData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _GLMaintenanceDelete(MasterModels.tbl_MapGL gL)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var GlData = db.tbl_MapGL.SingleOrDefault(
////                    x => x.fld_ID == gL.fld_ID &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (GlData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                GlData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgUpdate,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "GLMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_GLMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult GmnMapping(string filter, int page = 1, string sort = "fld_KodGL",
////           string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _GmnMapping(string filter, int page = 1,
////            string sort = "fld_KodGL",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_MapGL>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var glData = db.tbl_MapGL
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == 2);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = glData
////                    .Where(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = glData
////                    .Count(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = glData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = glData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }


////        public JsonResult GetAktvtGMN(string KategoriAktiviti)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";

////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
////            MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

////            List<SelectListItem> PilihAktiviti = new List<SelectListItem>();

////            var tbl_UpahAktiviti = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == KategoriAktiviti && x.fld_Deleted == false).ToList();

////            PilihAktiviti = new SelectList(tbl_UpahAktiviti.OrderBy(o => o.fld_KodAktvt).Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
////            PilihAktiviti.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            dbr.Dispose();
////            return Json(new { PilihAktiviti });
////        }


////        public JsonResult GetGLGMN(string JnsGL)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";

////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
////            MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

////            List<SelectListItem> PilihGL = new List<SelectListItem>();

////            var tblOptionConfigsWebs = db.tblOptionConfigsWebs.Where(x => x.fldOptConfValue == JnsGL && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).ToList();

////            PilihGL = new SelectList(tblOptionConfigsWebs.OrderBy(o => o.fldOptConfValue).Select(s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfFlag2 }), "Value", "Text").ToList();
////            //PilihGL.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" }));

////            dbr.Dispose();
////            return Json(new { PilihGL });
////        }

////        public ActionResult _GmnMappingCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var jnsxtivlist = db.tbl_KategoriAktiviti
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).ToList();

////                ViewBag.KategoriAktiviti = new SelectList(
////                    jnsxtivlist
////                    .Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();

////                var fistxtivit = jnsxtivlist.Select(s => s.fld_KodKategori).Take(1).FirstOrDefault();
////                ViewBag.KodAktvtList = new SelectList(
////                    db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == fistxtivit && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
////                    .Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
              
////                var JnsGLlist = db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "jnsGL" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue);

////                ViewBag.JnsGL = new SelectList(
////                    JnsGLlist
////                    .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();

////                var fistJnsGL = JnsGLlist.Select(s => s.fldOptConfFlag2).FirstOrDefault();
////                ViewBag.KodJnsGL = new SelectList(
////                    db.tbl_GLSAP.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_GLcode == fistJnsGL && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
////                    .Select(s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_Desc }), "Value", "Text").ToList();


////                return PartialView();
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }


////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _GmnMappingCreate(MasterModels.tbl_MapGL GmnMapping, string KodAktvtList, string KodJnsGL, string JnsGL)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
////                                                    x.fld_KodAktvt == KodAktvtList && x.fld_KodGL == KodJnsGL &&
////                                                    x.fld_Paysheet == JnsGL && x.fld_Deleted == false).FirstOrDefault();
////                if (checkdata == null)
////                {
////                    GmnMapping.fld_KodAktvt = KodAktvtList;
                   
////                    GmnMapping.fld_KodGL = KodJnsGL;
////                    GmnMapping.fld_Paysheet = JnsGL;
////                    GmnMapping.fld_Deleted = false;
////                    GmnMapping.fld_NegaraID = NegaraID;
////                    GmnMapping.fld_SyarikatID = SyarikatID;
////                    GmnMapping.fld_WilayahID = WilayahID;
////                    GmnMapping.fld_LadangID = LadangID;

////                    db.tbl_MapGL.Add(GmnMapping);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "GmnMappingDetails",
////                        rootUrl = domain,
////                        action = "_GmnMapping",
////                        controller = "Maintenance"
////                    });
////                }
////                else
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////                }


////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _GmnMappingEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);


////            var glData = db.tbl_MapGL
////                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
////                                    x.fld_Deleted == false);

////            var JnsAktivitiData = db.tbl_UpahAktiviti
////                .SingleOrDefault(x => x.fld_KodAktvt == glData.fld_KodAktvt.Trim() && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);


////            var KategoriAktivitis = db.tbl_KategoriAktiviti
////                .SingleOrDefault(x => x.fld_KodKategori == JnsAktivitiData.fld_KategoriAktvt.Trim() && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);


////            List<SelectListItem> KodKategori = new List<SelectListItem>();
////            KodKategori = new SelectList(
////                db.tbl_KategoriAktiviti
////                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodKategori.ToString(), Text = s.fld_Kategori }), "Value", "Text", JnsAktivitiData.fld_KategoriAktvt.Trim()).ToList();
////            KodKategori.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_KodKategori = KodKategori;


////            List<SelectListItem> kodAktvtList = new List<SelectListItem>();
////            kodAktvtList = new SelectList(
////                db.tbl_UpahAktiviti
////                    .Where(x => x.fld_KategoriAktvt == KategoriAktivitis.fld_KodKategori && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodAktvt)
////                    .Select(
////                        s => new SelectListItem { Value = s.fld_KodAktvt.ToString(), Text = s.fld_Desc }), "Value", "Text", glData.fld_KodAktvt.Trim()).ToList();
////            kodAktvtList.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_KodAktvt = kodAktvtList;


////            //paysheet
////            List<SelectListItem> JnsGL = new List<SelectListItem>();
////            JnsGL = new SelectList(
////                db.tblOptionConfigsWebs
////                    .Where(x => x.fldOptConfFlag1 == "JnsGL" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
////                    .Select(
////                           s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", glData.fld_Paysheet.Trim()).ToList();
////            JnsGL.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_Paysheet = JnsGL;

//            //var JnsGLlist = db.tblOptionConfigsWebs
//            //        .Where(x => x.fldOptConfFlag1 == "jnsGL" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue);

////            //kodGL
////            List<SelectListItem> KodJnsGL = new List<SelectListItem>();
////            KodJnsGL = new SelectList(
////                db.tbl_GLSAP
////                    .Where(x => x.fld_GLcode == glData.fld_KodGL && x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_ID)
////                    .Select(
////                           s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_GLcode }), "Value", "Text", glData.fld_KodGL.Trim()).ToList();
////            JnsGL.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
////            ViewBag.fld_KodGL = KodJnsGL;

////            return PartialView(glData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _GmnMappingEdit(MasterModels.tbl_MapGL gl)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
////                                                    x.fld_KodAktvt == gl.fld_KodAktvt && x.fld_KodGL == gl.fld_KodGL &&
////                                                    x.fld_Paysheet == gl.fld_Paysheet && x.fld_Deleted == false).FirstOrDefault();
////                if (checkdata == null)
////                {
////                    MasterModels.tbl_MapGL getGL = db.tbl_MapGL
////                        .Single(x => x.fld_ID == gl.fld_ID &&
////                                     x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID && x.fld_Deleted == false);

////                    getGL.fld_KodAktvt = gl.fld_KodAktvt;
////                    getGL.fld_KodGL = gl.fld_KodGL;
////                    getGL.fld_Paysheet = gl.fld_Paysheet;


////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "GmnMappingDetails",
////                        rootUrl = domain,
////                        action = "_GmnMapping",
////                        controller = "Maintenance"
////                    });
////                }
////                else
////                {
////                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _GmnMappingDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var GlData = db.tbl_MapGL
////                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                                      x.fld_SyarikatID == SyarikatID);

////            return PartialView(GlData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _GmnMappingDelete(MasterModels.tbl_MapGL gL)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var GlData = db.tbl_MapGL.SingleOrDefault(
////                    x => x.fld_ID == gL.fld_ID &&
////                         x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (GlData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                GlData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgUpdate,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "GmnMappingDetails",
////                    rootUrl = domain,
////                    action = "_GmnMapping",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult KategoriAktiMaintenance(string filter, int page = 1, string sort = "fld_KodKategori",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _KategoriAktiMaintenance(string filter, int page = 1,
////            string sort = "fld_KodKategori",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_KategoriAktiviti>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var KategoriAktiData = db.tbl_KategoriAktiviti
////                .Where(x => x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = KategoriAktiData
////                    .Where(x => x.fld_KodKategori.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Kategori.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = KategoriAktiData
////                    .Count(x => x.fld_KodKategori.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fld_Kategori.ToUpper().Contains(filter.ToUpper()));
////            }

////            else
////            {
////                records.Content = KategoriAktiData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = KategoriAktiData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _KategoriAktiMaintenanceCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            
////            MasterModels.tbl_KategoriAktivitiCreate optionConfigsWeb = new MasterModels.tbl_KategoriAktivitiCreate();

////            var getAktCode = db.tbl_KategoriAktiviti
////                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
////                .OrderByDescending(o => o.fld_KodKategori)
////                .Select(s => s.fld_KodKategori)
////                .FirstOrDefault();

////            if (getAktCode == null)
////            {
////                optionConfigsWeb.fld_KodKategori = "01";
                    
////                    //db.tbl_KategoriAktiviti
////                    //                                   .SingleOrDefault(
////                    //                                       x => /*x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&*/
////                    //                                            x.fld_NegaraID == NegaraID &&
////                    //                                            x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                    //                                   .fld_KodKategori + "01";

////            }

////            else
////            {
                
////                var AktCode = db.tbl_KategoriAktiviti
////                .Where(x => /*x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&*/
////                       x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////                .OrderByDescending(o => o.fld_KodKategori)
////                .Select(s => s.fld_KodKategori)
////                .FirstOrDefault();

////                var generateCurrentCode = Convert.ToInt32(AktCode) + 1;

////                if (generateCurrentCode < 10)
////                {
////                    var Code = "0" + Convert.ToInt32(generateCurrentCode);
////                    optionConfigsWeb.fld_KodKategori = Code.ToString();
////                }
////                else
////                {
////                    optionConfigsWeb.fld_KodKategori = generateCurrentCode.ToString();
////                }
////            }

////            return View(optionConfigsWeb);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KategoriAktiMaintenanceCreate(MasterModels.tbl_KategoriAktivitiCreate optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tbl_KategoriAktiviti
////                        .Where(x =>
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fld_PrefixPkt)
////                        .ToList();

////                    if (unitData.Contains(optionConfigsWeb.fld_PrefixPkt.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigPrefix,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }
////                    else
////                    {
////                        MasterModels.tbl_KategoriAktiviti KateAKtModel = new MasterModels.tbl_KategoriAktiviti();

////                        KateAKtModel.fld_KodKategori = optionConfigsWeb.fld_KodKategori;
////                        KateAKtModel.fld_Kategori = optionConfigsWeb.fld_Kategori.ToUpper();
////                        KateAKtModel.fld_Deleted = false;
////                        KateAKtModel.fld_NegaraID = NegaraID;
////                        KateAKtModel.fld_SyarikatID = SyarikatID;
////                        KateAKtModel.fld_PrefixPkt = optionConfigsWeb.fld_PrefixPkt.ToUpper();



////                        db.tbl_KategoriAktiviti.Add(KateAKtModel);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgAdd,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "KategoriAktiMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_KategoriAktiMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KategoriAktiMaintenanceEdit(int? id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            tbl_KategoriAktivitiView unitViewModel = new tbl_KategoriAktivitiView();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return PartialView(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KategoriAktiMaintenanceEdit(MasterModels.tbl_KategoriAktivitiView optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
////                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fld_KodKategori = optionConfigsWeb.fld_KodKategori.ToUpper();
////                    unitData.fld_Kategori = optionConfigsWeb.fld_Kategori.ToUpper();
////                    unitData.fld_PrefixPkt = optionConfigsWeb.fld_PrefixPkt.ToUpper();
////                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "KategoriAktiMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KategoriAktiMaintenance",
////                        controller = "Maintenance"
////                    });
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _KategoriAktiMaintenanceDelete(int? id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            return PartialView(unitData);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _KategoriAktiMaintenanceDelete(MasterModels.tbl_KategoriAktiviti optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
////                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgAdd,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "KategoriAktiMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_KategoriAktiMaintenance",
////                        controller = "Maintenance"
////                    });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        //public ActionResult PayrateAllMaintenance()
////        //{
////        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
////        //    string host, catalog, user, pass = "";
////        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////        //        NegaraID.Value);

////        //    List<SelectListItem> aktvtlist = new List<SelectListItem>();

////        //    aktvtlist = new SelectList(db.tbl_JenisAktiviti
////        //        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
////        //        .OrderBy(o => o.fld_KodJnsAktvt)
////        //        .Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();

////        //    aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////        //    ViewBag.Maintenance = "class = active";
////        //    ViewBag.AktvtList = aktvtlist;

////        //    return View();
////        //}

////        //public ActionResult _PayrateAllMaintenance(string AktvtList = "", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
////        //{
////        //    //ViewBag.Maintenance = "class = active";
////        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
////        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////        //    MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////        //    int pageSize = int.Parse(GetConfig.GetData("paging"));
////        //    var records = new PagedList<ViewingModels.tbl_UpahAktiviti>();

////        //    if (AktvtList != "0")
////        //    {
////        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////        //               .OrderBy(sort + " " + sortdir)
////        //               .Skip((page - 1) * pageSize)
////        //               .Take(pageSize)
////        //               .ToList();

////        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////        //        records.CurrentPage = page;
////        //        records.PageSize = pageSize;
////        //        //ViewBag.AktvtList = AktvtList;
////        //        db.Dispose();
////        //        dbview.Dispose();
////        //    }
////        //    else
////        //    {
////        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////        //               .OrderBy(sort + " " + sortdir)
////        //               .Skip((page - 1) * pageSize)
////        //               .Take(pageSize)
////        //               .ToList();

////        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////        //        records.CurrentPage = page;
////        //        records.PageSize = pageSize;
////        //        db.Dispose();
////        //        dbview.Dispose();
////        //    }

////        //    //ViewBag.AktvtList = aktvtlist;
////        //    ViewBag.Datacount = records.TotalRecords;
////        //    return View(records);

////        //}

////        //public ActionResult _PayrateAllMaintenanceEdit(int id)
////        //{
////        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
////        //    string host, catalog, user, pass = "";
////        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////        //    MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

////        //    List<SelectListItem> unitlist = new List<SelectListItem>();

////        //    unitlist = new SelectList(db.tblOptionConfigsWebs
////        //        .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
////        //        x.fld_SyarikatID == SyarikatID)
////        //        .OrderBy(o => o.fldOptConfID)
////        //        .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
////        //        , "Value", "Text").ToList();

////        //    //unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////        //    var PayData = db.tbl_UpahAktiviti.SingleOrDefault(
////        //        x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////        //             x.fld_SyarikatID == SyarikatID);

////        //    MasterModels.tbl_UpahAktiviti unitViewModel = new MasterModels.tbl_UpahAktiviti();

////        //    PropertyCopy.Copy(unitViewModel, PayData);

////        //    ViewBag.fld_Unit = unitlist;
////        //    return View(unitViewModel);
////        //}

////        //[HttpPost]
////        //[ValidateAntiForgeryToken]
////        //public ActionResult _PayrateAllMaintenanceEdit(MasterModels.tbl_UpahAktiviti UpahAktiviti)
////        //{
////        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
////        //    string host, catalog, user, pass = "";
////        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////        //    try
////        //    {
////        //        if (ModelState.IsValid)
////        //        {
////        //            var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
////        //                x => x.fld_ID == UpahAktiviti.fld_ID &&
////        //                     x.fld_NegaraID == NegaraID &&
////        //                     x.fld_SyarikatID == SyarikatID);

////        //            var unit = "0" + UpahAktiviti.fld_Unit;

////        //            unitData.fld_Desc = UpahAktiviti.fld_Desc;
////        //            unitData.fld_Harga = UpahAktiviti.fld_Harga;
////        //            unitData.fld_Unit = unit;

////        //            db.SaveChanges();

////        //            string appname = Request.ApplicationPath;
////        //            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////        //            var lang = Request.RequestContext.RouteData.Values["lang"];

////        //            if (appname != "/")
////        //            {
////        //                domain = domain + appname;
////        //            }

////        //            return Json(new
////        //            {
////        //                success = true,
////        //                msg = GlobalResEstate.msgUpdate,
////        //                status = "success",
////        //                checkingdata = "0",
////        //                method = "1",
////        //                div = "PayRateMaintenanceDetails",
////        //                rootUrl = domain,
////        //                action = "_PayrateAllMaintenance",
////        //                controller = "Maintenance"
////        //            });

////        //        }

////        //        else
////        //        {
////        //            return Json(new
////        //            {
////        //                success = false,
////        //                msg = GlobalResEstate.msgErrorData,
////        //                status = "danger",
////        //                checkingdata = "0"
////        //            });
////        //        }
////        //    }

////        //    catch (Exception ex)
////        //    {
////        //        geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////        //        return Json(new
////        //        {
////        //            success = false,
////        //            msg = GlobalResEstate.msgError,
////        //            status = "danger",
////        //            checkingdata = "0"
////        //        });
////        //    }

////        //    finally
////        //    {
////        //        db.Dispose();
////        //    }

////        //}

////        public ActionResult BlokDataMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _BlokDataMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "blokDataKerja" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));

                
////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _BlokDataMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "blokdatakerja" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////                tblOptionConfigsWebBlokUpdate unitViewModel = new tblOptionConfigsWebBlokUpdate();

////                PropertyCopy.Copy(unitViewModel, unitData);

////                return View(unitViewModel);
            
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BlokDataMaintenanceEdit(MasterModels.tblOptionConfigsWebBlokUpdate optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "blokDataKerja" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);


////                    int no = Convert.ToInt32(unitData.fldOptConfValue);
////                    int max = Convert.ToInt32(unitData.fldOptConfFlag2);

////                    if (no == max)
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.lblError,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {

////                        unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "BlokDataMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_BlokDataMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult BlokDataVldMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _BlokDataVldMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "blokDataKerjaVldDt" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _BlokDataVldMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "blokdatakerjavlddt" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsWebBlokUpdate unitViewModel = new tblOptionConfigsWebBlokUpdate();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);

////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BlokDataVldMaintenanceEdit(MasterModels.tblOptionConfigsWebBlokUpdate optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "blokdatakerjavlddt" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);


////                    int no = Convert.ToInt32(unitData.fldOptConfValue);
////                    int max = Convert.ToInt32(unitData.fldOptConfFlag2);

////                    if (no == max)
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.lblError,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }
////                    else
////                    {

////                        unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "BlokDataVldMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_BlokDataVldMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult BangsaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _BangsaMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "Bangsa" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _BangsaMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Bangsa" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsWebBangsa unitViewModel = new tblOptionConfigsWebBangsa();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);

////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BangsaMaintenanceEdit(MasterModels.tblOptionConfigsWebBangsa optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Bangsa" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                        unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "BangsaMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_BangsaMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
                

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _BangsaMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Bangsa" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            tblOptionConfigsWebBangsa unitViewModel = new tblOptionConfigsWebBangsa();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BangsaMaintenanceDelete(MasterModels.tblOptionConfigsWebBangsa optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Bangsa" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "BangsaMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_BangsaMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _BangsaCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _BangsaCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "Bangsa" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "Bangsa";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "BangsaMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_BangsaMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult AgamaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _AgamaMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "Agama" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _AgamaMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Agama" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            MasterModels.tblOptionConfigsWeb unitViewModel = new MasterModels.tblOptionConfigsWeb();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);

////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _AgamaMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Agama" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "AgamaMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_AgamaMaintenance",
////                        controller = "Maintenance"
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _AgamaMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Agama" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            MasterModels.tblOptionConfigsWeb unitViewModel = new MasterModels.tblOptionConfigsWeb();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _AgamaMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Agama" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "AgamaMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_AgamaMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _AgamaCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _AgamaCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "Agama" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "Agama";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "AgamaMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_AgamaMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PositionMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            ViewBag.Maintenance = "class = active";

////            return View();
////        }

////        public ActionResult _PositionMaintenance(string filter, int page = 1,
////            string sort = "fldOptConfFlag1",
////            string sortdir = "ASC")
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);

////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tblOptionConfigsWeb>();
////            int role = GetIdentity.RoleID(getuserid).Value;

////            var unitData = db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "Position" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            if (!String.IsNullOrEmpty(filter))
////            {
////                records.Content = unitData
////                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
////                    .OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
////                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


////            }

////            else
////            {
////                records.Content = unitData.OrderBy(sort + " " + sortdir)
////                    .Skip((page - 1) * pageSize)
////                    .Take(pageSize)
////                    .ToList();

////                records.TotalRecords = unitData
////                    .Count();
////            }

////            records.CurrentPage = page;
////            records.PageSize = pageSize;
////            ViewBag.RoleID = role;
////            ViewBag.pageSize = 1;

////            return View(records);
////        }

////        public ActionResult _PositionCreate()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PositionCreate(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs
////                        .Where(x => x.fldOptConfFlag1 == "Position" &&
////                                    x.fld_NegaraID == NegaraID &&
////                                    x.fld_SyarikatID == SyarikatID)
////                        .Select(s => s.fldOptConfValue)
////                        .ToList();

////                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
////                    {
////                        return Json(new
////                        {
////                            success = false,
////                            msg = GlobalResEstate.msgErrorDuplicateOptionConfigCode,
////                            status = "danger",
////                            checkingdata = "0"
////                        });
////                    }

////                    else
////                    {
////                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();
////                        optionConfigsWeb.fldOptConfFlag1 = "Position";
////                        optionConfigsWeb.fldDeleted = false;
////                        optionConfigsWeb.fld_NegaraID = NegaraID;
////                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

////                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
////                        db.SaveChanges();

////                        string appname = Request.ApplicationPath;
////                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                        var lang = Request.RequestContext.RouteData.Values["lang"];

////                        if (appname != "/")
////                        {
////                            domain = domain + appname;
////                        }

////                        return Json(new
////                        {
////                            success = true,
////                            msg = GlobalResEstate.msgUpdate,
////                            status = "success",
////                            checkingdata = "0",
////                            method = "1",
////                            div = "PositionMaintenanceDetails",
////                            rootUrl = domain,
////                            action = "_PositionMaintenance",
////                            controller = "Maintenance"
////                        });
////                    }
////                }

////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PositionMaintenanceEdit(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Position" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            MasterModels.tblOptionConfigsWeb unitViewModel = new MasterModels.tblOptionConfigsWeb();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);

////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PositionMaintenanceEdit(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Position" &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
////                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper();

////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "PositionMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PositionMaintenance",
////                        controller = "Maintenance"
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PositionMaintenanceDelete(int id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Position" &&
////                            x.fld_NegaraID == NegaraID &&
////                            x.fld_SyarikatID == SyarikatID);

////            MasterModels.tblOptionConfigsWeb unitViewModel = new MasterModels.tblOptionConfigsWeb();

////            PropertyCopy.Copy(unitViewModel, unitData);

////            return View(unitViewModel);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PositionMaintenanceDelete(MasterModels.tblOptionConfigsWeb optionConfigsWeb)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
////                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Position" && x.fld_NegaraID == NegaraID &&
////                         x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fldDeleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fldDeleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = message,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "PositionMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_PositionMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult PayrateGMNMaintenance()
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
////                NegaraID.Value);
////            List<SelectListItem> aktvtlist = new List<SelectListItem>();
////            aktvtlist = new SelectList(db.tbl_KategoriAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodKategori).Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();
////            aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.Maintenance = "class = active";
////            ViewBag.AktvtList = aktvtlist;

////            return View();
////        }

////        public ActionResult _PayrateGMNMaintenance(string AktvtList = "", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
////        {
////            //ViewBag.Maintenance = "class = active";
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            //List<SelectListItem> aktvtlist = new List<SelectListItem>();
////            //aktvtlist = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID==SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
////            //aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
////            int pageSize = int.Parse(GetConfig.GetData("paging"));
////            var records = new PagedList<MasterModels.tbl_UpahAktiviti>();

////            if (AktvtList != "0")
////            {
////                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_KategoriAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = db.tbl_UpahAktiviti.Where(x => x.fld_KategoriAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                //ViewBag.AktvtList = AktvtList;
////                db.Dispose();
////                dbview.Dispose();
////            }
////            else
////            {
////                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
////                       .OrderBy(sort + " " + sortdir)
////                       .Skip((page - 1) * pageSize)
////                       .Take(pageSize)
////                       .ToList();

////                records.TotalRecords = db.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
////                records.CurrentPage = page;
////                records.PageSize = pageSize;
////                db.Dispose();
////                dbview.Dispose();
////            }

////            //ViewBag.AktvtList = aktvtlist;
////            ViewBag.Datacount = records.TotalRecords;
////            return View(records);

////        }

////        public ActionResult PayrateGMNInsert()
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            List<SelectListItem> JnsAktvt = new List<SelectListItem>();
////            List<SelectListItem> unitlist = new List<SelectListItem>();
////            List<SelectListItem> Flaglist = new List<SelectListItem>();
////            JnsAktvt = new SelectList(db.tbl_KategoriAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();
////            JnsAktvt.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));
////            unitlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));
////            Flaglist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
////            Flaglist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            ViewBag.fld_DisabledFlag = Flaglist;
////            ViewBag.fld_Unit = unitlist;
////            ViewBag.fld_KategoriAktvt = JnsAktvt;
////            db.Dispose();
////            return PartialView();
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult PayrateGMNInsert(MasterModels.tbl_UpahAktiviti UpahAktiviti)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {

////                    UpahAktiviti.fld_KodAktvt = UpahAktiviti.fld_KodAktvt;
////                    UpahAktiviti.fld_Desc = UpahAktiviti.fld_Desc.ToUpper();
////                    UpahAktiviti.fld_Unit = UpahAktiviti.fld_Unit.ToUpper();
////                    UpahAktiviti.fld_Harga = UpahAktiviti.fld_Harga;
////                    UpahAktiviti.fld_KategoriAktvt = UpahAktiviti.fld_KategoriAktvt;
////                    UpahAktiviti.fld_DisabledFlag = UpahAktiviti.fld_DisabledFlag;
////                    UpahAktiviti.fld_KdhByr = "B";
////                    UpahAktiviti.fld_MaxProduktiviti = UpahAktiviti.fld_MaxProduktiviti;
////                    UpahAktiviti.fld_Deleted = false;
////                    UpahAktiviti.fld_NegaraID = NegaraID;
////                    UpahAktiviti.fld_SyarikatID = SyarikatID;

////                    db.tbl_UpahAktiviti.Add(UpahAktiviti);
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "GMNMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PayrateGMNMaintenance",
////                        controller = "Maintenance"
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public JsonResult GenerateKodKategori(string jnsAktvt)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

////            string lastcode = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == jnsAktvt && x.fld_Deleted == false).OrderByDescending(o => o.fld_KodAktvt.Trim()).Select(s => s.fld_KodAktvt).FirstOrDefault();
////            int generated = int.Parse(lastcode) + 1;
////            string newcode = generated.ToString("0000");
////            return Json(newcode);

////        }

////        public ActionResult _PayrateGMNUpdate(int? id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            List<SelectListItem> unitlist = new List<SelectListItem>();
////            List<SelectListItem> Flaglist = new List<SelectListItem>();

////            unitlist = new SelectList(db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
////                x.fld_SyarikatID == SyarikatID)
////                .OrderBy(o => o.fldOptConfID)
////                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
////                , "Value", "Text").ToList();

////            Flaglist = new SelectList(db.tblOptionConfigsWebs
////                .Where(x => x.fldOptConfFlag1 == "upahFlag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
////                x.fld_SyarikatID == SyarikatID)
////                .OrderBy(o => o.fldOptConfID)
////                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
////                , "Value", "Text").ToList();

////            //unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

////            var PayData = db.tbl_UpahAktiviti.SingleOrDefault(
////                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                     x.fld_SyarikatID == SyarikatID);

////            MasterModels.tbl_UpahAktivitiViewModelGMN unitViewModel = new MasterModels.tbl_UpahAktivitiViewModelGMN();

////            PropertyCopy.Copy(unitViewModel, PayData);

////            ViewBag.fld_DisabledFlag = Flaglist;
////            ViewBag.fld_Unit = unitlist;
////            return View(unitViewModel);

////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PayrateGMNUpdate(MasterModels.tbl_UpahAktivitiViewModelGMN tbl_UpahAktiviti)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                if (ModelState.IsValid)
////                {
////                    var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
////                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                    unitData.fld_Desc = tbl_UpahAktiviti.fld_Desc;
////                    unitData.fld_Harga = tbl_UpahAktiviti.fld_Harga;
////                    unitData.fld_Unit = tbl_UpahAktiviti.fld_Unit;
////                    unitData.fld_DisabledFlag = tbl_UpahAktiviti.fld_DisabledFlag;
////                    //getdata.fld_Produktvt = tbl_UpahAktiviti.fld_Produktvt;

////                    //db.Entry(unitData).State = EntityState.Modified;
////                    db.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        method = "1",
////                        div = "GMNMaintenanceDetails",
////                        rootUrl = domain,
////                        action = "_PayrateGMNMaintenance",
////                        controller = "Maintenance"
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult _PayrateGMNDelete(int? id)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            MasterModels.tbl_UpahAktiviti Payrate = db.tbl_UpahAktiviti
////                .Single(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////            return PartialView(Payrate);
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult _PayrateGMNDelete(MasterModels.tbl_UpahAktiviti tbl_UpahAktiviti)
////        {
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

////            try
////            {
////                var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
////                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
////                             x.fld_NegaraID == NegaraID &&
////                             x.fld_SyarikatID == SyarikatID);

////                bool status = true;

////                var message = "";
////                if (unitData.fld_Deleted == false)
////                {
////                    status = true;
////                    message = GlobalResEstate.msgDelete2;
////                }

////                else
////                {
////                    status = false;
////                    message = GlobalResEstate.msgUndelete;
////                }

////                unitData.fld_Deleted = status;

////                db.SaveChanges();

////                string appname = Request.ApplicationPath;
////                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                var lang = Request.RequestContext.RouteData.Values["lang"];

////                if (appname != "/")
////                {
////                    domain = domain + appname;
////                }

////                return Json(new
////                {
////                    success = true,
////                    msg = GlobalResEstate.msgAdd,
////                    status = "success",
////                    checkingdata = "0",
////                    method = "1",
////                    div = "GMNMaintenanceDetails",
////                    rootUrl = domain,
////                    action = "_PayrateGMNMaintenance",
////                    controller = "Maintenance"
////                });
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }

////        public ActionResult Kepuasan()
////        {
////            ViewBag.Maintenance = "class = active";
////            int? NegaraID, SyarikatID, WilayahID, LadangID;
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////                Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
////            MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);
////            //MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();


//            //var result = dbr.tbl_Kepuasan
//            //    .Where(x => x.fld_UserID == getuserid && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_LadangID == LadangID)
//            //    ;
////            var result = dbr.tbl_Kepuasan
////                .Where(x => x.fld_UserID == getuserid && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_LadangID == LadangID)
////                ;

//            //if (result != null)
//            //{
//            //    ViewBag.Message = "Ada Data";
//            //    return View();
//            //}
//            //else
//            //{
//        //    ViewBag.Maintenance = "class = active";
//        //    return View();
//        //    //}
//        //}
////            if (result != null)
////            {
////                ViewBag.Message = "Ada Data";
////                return View();
////            }
////            else
////            {
////                return View();
////            }
////        }

////        [HttpPost]
////        [ValidateAntiForgeryToken]
////        public ActionResult Kepuasan(Models.tbl_Kepuasan UpahAktiviti, int RadioGroup)
////        {
////            int? getuserid = GetIdentity.ID(User.Identity.Name);
////            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
////            string host, catalog, user, pass = "";
////            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
////            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
////            MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

////            try
////            {
////                if (ModelState.IsValid)
////                {

////                    UpahAktiviti.fld_UserID = getuserid;
////                    UpahAktiviti.fld_Kepuasan = RadioGroup;
////                    UpahAktiviti.fld_LadangID = LadangID;
////                    UpahAktiviti.fld_SyarikatID = SyarikatID;
////                    UpahAktiviti.fld_WilayahID = WilayahID;
////                    UpahAktiviti.fld_NegaraID = NegaraID;
////                    UpahAktiviti.fld_Tarikh = DateTime.Today;
////                    UpahAktiviti.fld_Catatan = UpahAktiviti.fld_Catatan;

////                    dbr.tbl_Kepuasan.Add(UpahAktiviti);
////                    dbr.SaveChanges();

////                    string appname = Request.ApplicationPath;
////                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
////                    var lang = Request.RequestContext.RouteData.Values["lang"];

////                    if (appname != "/")
////                    {
////                        domain = domain + appname;
////                    }

////                    return Json(new
////                    {
////                        success = true,
////                        msg = GlobalResEstate.msgUpdate,
////                        status = "success",
////                        checkingdata = "0",
////                        action = "index",
////                    });
////                }


////                else
////                {
////                    return Json(new
////                    {
////                        success = false,
////                        msg = GlobalResEstate.msgErrorData,
////                        status = "danger",
////                        checkingdata = "0"
////                    });
////                }
////            }

////            catch (Exception ex)
////            {
////                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
////                return Json(new
////                {
////                    success = false,
////                    msg = GlobalResEstate.msgError,
////                    status = "danger",
////                    checkingdata = "0"
////                });
////            }

////            finally
////            {
////                db.Dispose();
////            }
////        }


////    }
////}

//        //cost center mapping
//        public ActionResult CostCentMapping(string filter, int page = 1, string sort = "fld_CostCentre", string sortdir = "ASC")
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            
//            ViewBag.Maintenance = "class = active";

//            return View();
//        }

//        public ActionResult _CostCentMapping(string filter, int page = 1, string sort = "fld_CostCentre", string sortdir = "ASC")
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            
//            int pageSize = int.Parse(GetConfig.GetData("paging"));
//            var records = new PagedList<MasterModels.tbl_CostCentre>();
//            int role = GetIdentity.RoleID(getuserid).Value;

//            var ccData = db.tbl_CostCentre
//                .Where(x => x.fld_NegaraID == NegaraID &&
//                            x.fld_SyarikatID == SyarikatID);

//            if (!String.IsNullOrEmpty(filter))
//            {
//                records.Content = ccData
//                    .Where(x => x.fld_CostCentre.ToUpper().Contains(filter.ToUpper()) ||
//                                x.fld_KodKtgri.ToUpper().Contains(filter.ToUpper()))
//                    .OrderBy(sort + " " + sortdir)
//                    .Skip((page - 1) * pageSize)
//                    .Take(pageSize)
//                    .ToList();

//                records.TotalRecords = ccData
//                    .Count(x => x.fld_CostCentre.ToUpper().Contains(filter.ToUpper()) ||
//                                x.fld_KodKtgri.ToUpper().Contains(filter.ToUpper()));
//            }

//            else
//            {
//                records.Content = ccData.OrderBy(sort + " " + sortdir)
//                    .Skip((page - 1) * pageSize)
//                    .Take(pageSize)
//                    .ToList();

//                records.TotalRecords = ccData
//                    .Count();
//            }

//            records.CurrentPage = page;
//            records.PageSize = pageSize;
//            ViewBag.RoleID = role;
//            ViewBag.pageSize = 1;

//            return View(records);
//        }

//        public ActionResult _CostCentMappingCreate()
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            

//            try
//            {
               
//                ViewBag.ccList = new SelectList(
//                    db.tbl_CCSAP
//                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
//                        .Select(
//                            s => new SelectListItem { Value = s.fld_CCcode, Text = s.fld_CCcode }), "Value", "Text").ToList();

//                ViewBag.katxtivitiList = new SelectList(
//                    db.tbl_KategoriAktiviti
//                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
//                        .Select(
//                            s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();


//                return PartialView();
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }


//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _CostCentMappingCreate(MasterModels.tbl_CostCentre CostCentMapping, string ccList, string katxtivitiList)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var checkdata = db.tbl_CostCentre.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
//                                                    x.fld_CostCentre == ccList && x.fld_KodKtgri == katxtivitiList && x.fld_Deleted == false).FirstOrDefault();
//                if (checkdata == null)
//                {
//                    CostCentMapping.fld_CostCentre = ccList;
//                    CostCentMapping.fld_KodKtgri = katxtivitiList;
//                    CostCentMapping.fld_Deleted = false;
//                    CostCentMapping.fld_NegaraID = NegaraID;
//                    CostCentMapping.fld_SyarikatID = SyarikatID;
//                    CostCentMapping.fld_WilayahID = WilayahID;
//                    CostCentMapping.fld_LadangID = LadangID;

//                    db.tbl_CostCentre.Add(CostCentMapping);
//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgAdd,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "CostCentMappingDetails",
//                        rootUrl = domain,
//                        action = "_CostCentMapping",
//                        controller = "Maintenance"
//                    });
//                }
//                else
//                {
//                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
//                }


//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }
//        public ActionResult _CostCentMappingEdit(int id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);


//            var ccData = db.tbl_CostCentre
//                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
//                                    x.fld_Deleted == false);

            
//            List<SelectListItem> Kodcostcent = new List<SelectListItem>();
//            Kodcostcent = new SelectList(
//                db.tbl_CCSAP
//                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
//                    .Select(
//                        s => new SelectListItem { Value = s.fld_CCcode.ToString(), Text = s.fld_CCcode }), "Value", "Text", ccData.fld_CostCentre.Trim()).ToList();
//            Kodcostcent.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
//            ViewBag.fld_CCcode = Kodcostcent;


//            List<SelectListItem> KodKategori = new List<SelectListItem>();
//            KodKategori = new SelectList(
//                db.tbl_KategoriAktiviti
//                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
//                    .Select(
//                        s => new SelectListItem { Value = s.fld_KodKategori.ToString(), Text = s.fld_Kategori }), "Value", "Text", ccData.fld_KodKtgri.Trim()).ToList();
//            KodKategori.Insert(0, new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "" });
//            ViewBag.fld_KodKategori = KodKategori;


//            return PartialView(ccData);
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _CostCentMappingEdit(MasterModels.tbl_CostCentre cc)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var checkdata = db.tbl_CostCentre.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
//                                                    x.fld_CostCentre == cc.fld_CostCentre && x.fld_KodKtgri == cc.fld_KodKtgri && x.fld_Deleted == false).FirstOrDefault();
//                if (checkdata == null)
//                {
//                    MasterModels.tbl_CostCentre getcc = db.tbl_CostCentre
//                        .Single(x => x.fld_ID == cc.fld_ID &&
//                                     x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID && x.fld_Deleted == false);

//                    getcc.fld_CostCentre = cc.fld_CostCentre;
//                    getcc.fld_KodKtgri = cc.fld_KodKtgri;
                  

//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgUpdate,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "CostCentMappingDetails",
//                        rootUrl = domain,
//                        action = "_CostCentMapping",
//                        controller = "Maintenance"
//                    });
//                }
//                else
//                {
//                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
//                }
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public ActionResult _CostCentMappingDelete(int id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            var ccData = db.tbl_CostCentre
//                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
//                                      x.fld_SyarikatID == SyarikatID);

//            return PartialView(ccData);
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _CostCentMappingDelete(MasterModels.tbl_CostCentre cc)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            // Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var ccData = db.tbl_CostCentre.SingleOrDefault(
//                    x => x.fld_ID == cc.fld_ID &&
//                         x.fld_NegaraID == NegaraID &&
//                         x.fld_SyarikatID == SyarikatID);

//                bool status = true;

//                var message = "";
//                if (ccData.fld_Deleted == false)
//                {
//                    status = true;
//                    message = GlobalResEstate.msgDelete2;
//                }

//                else
//                {
//                    status = false;
//                    message = GlobalResEstate.msgUndelete;
//                }

//                ccData.fld_Deleted = status;

//                db.SaveChanges();

//                string appname = Request.ApplicationPath;
//                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                var lang = Request.RequestContext.RouteData.Values["lang"];

//                if (appname != "/")
//                {
//                    domain = domain + appname;
//                }

//                return Json(new
//                {
//                    success = true,
//                    msg = GlobalResEstate.msgUpdate,
//                    status = "success",
//                    checkingdata = "0",
//                    method = "1",
//                    div = "CostCentMappingDetails",
//                    rootUrl = domain,
//                    action = "_CostCentMapping",
//                    controller = "Maintenance"
//                });
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }


//        //tambah maklumat GL
//        public ActionResult GLMaintenance(string filter, int page = 1, string sort = "fld_GLcode",
//            string sortdir = "ASC")
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
//                NegaraID.Value);

//            ViewBag.Maintenance = "class = active";

//            return View();
//        }

//        public ActionResult _GLMaintenance(string filter, int page = 1,
//            string sort = "fld_GLcode",
//            string sortdir = "ASC")
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
//                NegaraID.Value);

//            int pageSize = int.Parse(GetConfig.GetData("paging"));
//            var records = new PagedList<MasterModels.tbl_GLSAP>();
//            int role = GetIdentity.RoleID(getuserid).Value;

//            var glData = db.tbl_GLSAP
//                .Where(x => x.fld_NegaraID == NegaraID &&
//                            x.fld_SyarikatID == SyarikatID);

//            if (!String.IsNullOrEmpty(filter))
//            {
//                records.Content = glData
//                    .Where(x => x.fld_GLcode.ToUpper().Contains(filter.ToUpper()) ||
//                                x.fld_Desc.ToUpper().Contains(filter.ToUpper()))
//                    .OrderBy(sort + " " + sortdir)
//                    .Skip((page - 1) * pageSize)
//                    .Take(pageSize)
//                    .ToList();

//                records.TotalRecords = glData
//                    .Count(x => x.fld_GLcode.ToUpper().Contains(filter.ToUpper()) ||
//                                x.fld_Desc.ToUpper().Contains(filter.ToUpper()));
//            }

//            else
//            {
//                records.Content = glData.OrderBy(sort + " " + sortdir)
//                    .Skip((page - 1) * pageSize)
//                    .Take(pageSize)
//                    .ToList();

//                records.TotalRecords = glData
//                    .Count();
//            }

//            records.CurrentPage = page;
//            records.PageSize = pageSize;
//            ViewBag.RoleID = role;
//            ViewBag.pageSize = 1;

//            return View(records);
//        }


        
//        public ActionResult _GLMaintenanceCreate()
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {

//                return PartialView();
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }


//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _GLMaintenanceCreate(MasterModels.tbl_GLSAP GlMaintenance)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var checkdata = db.tbl_GLSAP.Where(x => x.fld_GLcode == GlMaintenance.fld_GLcode && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&  x.fld_Deleted == false).FirstOrDefault();
//                if (checkdata == null)
//                {
//                    GlMaintenance.fld_GLcode = GlMaintenance.fld_GLcode;
//                    GlMaintenance.fld_Desc = GlMaintenance.fld_Desc.ToUpper();
//                    GlMaintenance.fld_Deleted = false;
//                    GlMaintenance.fld_NegaraID = NegaraID;
//                    GlMaintenance.fld_SyarikatID = SyarikatID;
                    
//                    db.tbl_GLSAP.Add(GlMaintenance);
//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgAdd,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "GLMaintenanceDetails",
//                        rootUrl = domain,
//                        action = "_GLMaintenance",
//                        controller = "Maintenance"
//                    });
//                }
//                else
//                {
//                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
//                }


//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public ActionResult _GLMaintenanceEdit(int id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            var glData = db.tbl_GLSAP
//                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

//            return PartialView(glData);

//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _GLMaintenanceEdit(MasterModels.tbl_GLSAP gl)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var checkdata = db.tbl_GLSAP.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && 
//                                                    x.fld_GLcode == gl.fld_GLcode && x.fld_Desc == gl.fld_Desc && x.fld_Deleted == false).FirstOrDefault();
//                if (checkdata == null)
//                {
//                    MasterModels.tbl_GLSAP getGL = db.tbl_GLSAP
//                        .Single(x => x.fld_ID == gl.fld_ID && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

//                    getGL.fld_GLcode = gl.fld_GLcode;
//                    getGL.fld_Desc = gl.fld_Desc;


//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgUpdate,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "GLMaintenanceDetails",
//                        rootUrl = domain,
//                        action = "_GLMaintenance",
//                        controller = "Maintenance"
//                    });
//                }
//                else
//                {
//                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
//                }
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public ActionResult _GLMaintenanceDelete(int id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            var GlData = db.tbl_GLSAP
//                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
//                                      x.fld_SyarikatID == SyarikatID);

//            return PartialView(GlData);
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _GLMaintenanceDelete(MasterModels.tbl_MapGL gL)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var GlData = db.tbl_GLSAP.SingleOrDefault(
//                    x => x.fld_ID == gL.fld_ID &&
//                         x.fld_NegaraID == NegaraID &&
//                         x.fld_SyarikatID == SyarikatID);

//                bool status = true;

//                var message = "";
//                if (GlData.fld_Deleted == false)
//                {
//                    status = true;
//                    message = GlobalResEstate.msgDelete2;
//                }

//                else
//                {
//                    status = false;
//                    message = GlobalResEstate.msgUndelete;
//                }

//                GlData.fld_Deleted = status;

//                db.SaveChanges();

//                string appname = Request.ApplicationPath;
//                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                var lang = Request.RequestContext.RouteData.Values["lang"];

//                if (appname != "/")
//                {
//                    domain = domain + appname;
//                }

//                return Json(new
//                {
//                    success = true,
//                    msg = GlobalResEstate.msgUpdate,
//                    status = "success",
//                    checkingdata = "0",
//                    method = "1",
//                    div = "GLMaintenanceDetails",
//                    rootUrl = domain,
//                    action = "_GLMaintenance",
//                    controller = "Maintenance"
//                });
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        //tambah maklumat Cost Center
//        public ActionResult CostCenterMaintenance(string filter, int page = 1, string sort = "fld_CCcode", string sortdir = "ASC")
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
//                NegaraID.Value);

//            ViewBag.Maintenance = "class = active";

//            return View();
//        }

//        public ActionResult _CostCenterMaintenance(string filter, int page = 1,string sort = "fld_CCcode", string sortdir = "ASC")
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
//                NegaraID.Value);

//            int pageSize = int.Parse(GetConfig.GetData("paging"));
//            var records = new PagedList<MasterModels.tbl_CCSAP>();
//            int role = GetIdentity.RoleID(getuserid).Value;

//            var glData = db.tbl_CCSAP
//                .Where(x => x.fld_NegaraID == NegaraID &&
//                            x.fld_SyarikatID == SyarikatID);

//            if (!String.IsNullOrEmpty(filter))
//            {
//                records.Content = glData
//                    .Where(x => x.fld_CCcode.ToUpper().Contains(filter.ToUpper()) ||
//                                x.fld_Desc.ToUpper().Contains(filter.ToUpper()))
//                    .OrderBy(sort + " " + sortdir)
//                    .Skip((page - 1) * pageSize)
//                    .Take(pageSize)
//                    .ToList();

//                records.TotalRecords = glData
//                    .Count(x => x.fld_CCcode.ToUpper().Contains(filter.ToUpper()) ||
//                                x.fld_Desc.ToUpper().Contains(filter.ToUpper()));
//            }

//            else
//            {
//                records.Content = glData.OrderBy(sort + " " + sortdir)
//                    .Skip((page - 1) * pageSize)
//                    .Take(pageSize)
//                    .ToList();

//                records.TotalRecords = glData
//                    .Count();
//            }

//            records.CurrentPage = page;
//            records.PageSize = pageSize;
//            ViewBag.RoleID = role;
//            ViewBag.pageSize = 1;

//            return View(records);
//        }

//        public ActionResult _CostCenterMaintenanceCreate()
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
                
//                return PartialView();
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _CostCenterMaintenanceCreate(MasterModels.tbl_CCSAP ccMaintenance)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var checkdata = db.tbl_CCSAP.Where(x => x.fld_CCcode == ccMaintenance.fld_CCcode && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).FirstOrDefault();
//                if (checkdata == null)
//                {
//                    ccMaintenance.fld_CCcode = ccMaintenance.fld_CCcode;
//                    ccMaintenance.fld_Desc = ccMaintenance.fld_Desc.ToUpper();
//                    ccMaintenance.fld_Deleted = false;
//                    ccMaintenance.fld_NegaraID = NegaraID;
//                    ccMaintenance.fld_SyarikatID = SyarikatID;

//                    db.tbl_CCSAP.Add(ccMaintenance);
//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgAdd,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "CostCenterMaintenanceDetails",
//                        rootUrl = domain,
//                        action = "_CostCenterMaintenance",
//                        controller = "Maintenance"
//                    });
//                }
//                else
//                {
//                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
//                }


//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public ActionResult _CostCenterMaintenanceEdit(int id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            var ccData = db.tbl_CCSAP
//                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

//            return PartialView(ccData);

//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _CostCenterMaintenanceEdit(MasterModels.tbl_CCSAP cc)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var checkdata = db.tbl_CCSAP.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
//                                                    x.fld_CCcode == cc.fld_CCcode && x.fld_Desc == cc.fld_Desc && x.fld_Deleted == false).FirstOrDefault();
//                if (checkdata == null)
//                {
//                    MasterModels.tbl_CCSAP getCC = db.tbl_CCSAP
//                        .Single(x => x.fld_ID == cc.fld_ID && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

//                    getCC.fld_CCcode = cc.fld_CCcode;
//                    getCC.fld_Desc = cc.fld_Desc;


//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgUpdate,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "CostCenterMaintenanceDetails",
//                        rootUrl = domain,
//                        action = "_CostCenterMaintenance",
//                        controller = "Maintenance"
//                    });
//                }
//                else
//                {
//                    return Json(new { success = true, msg = GlobalResEstate.msgDataExist, status = "warning", checkingdata = "1" });
//                }
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public ActionResult _CostCenterMaintenanceDelete(int id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            var CcData = db.tbl_CCSAP
//                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
//                                      x.fld_SyarikatID == SyarikatID);

//            return PartialView(CcData);
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _CostCenterMaintenanceDelete(MasterModels.tbl_CCSAP cc)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var CcData = db.tbl_CCSAP.SingleOrDefault(
//                    x => x.fld_ID == cc.fld_ID &&
//                         x.fld_NegaraID == NegaraID &&
//                         x.fld_SyarikatID == SyarikatID);

//                bool status = true;

//                var message = "";
//                if (CcData.fld_Deleted == false)
//                {
//                    status = true;
//                    message = GlobalResEstate.msgDelete2;
//                }

//                else
//                {
//                    status = false;
//                    message = GlobalResEstate.msgUndelete;
//                }

//                CcData.fld_Deleted = status;

//                db.SaveChanges();

//                string appname = Request.ApplicationPath;
//                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                var lang = Request.RequestContext.RouteData.Values["lang"];

//                if (appname != "/")
//                {
//                    domain = domain + appname;
//                }

//                return Json(new
//                {
//                    success = true,
//                    msg = GlobalResEstate.msgUpdate,
//                    status = "success",
//                    checkingdata = "0",
//                    method = "1",
//                    div = "CostCenterMaintenanceDetails",
//                    rootUrl = domain,
//                    action = "_CostCenterMaintenance",
//                    controller = "Maintenance"
//                });
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        //pup ym mapping
//        public ActionResult PupYmMapping()
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
//                NegaraID.Value);

//            List<SelectListItem> Kategorilist = new List<SelectListItem>();
//            Kategorilist = new SelectList(db.tbl_KategoriAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
//                .OrderBy(o => o.fld_KodKategori).Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();
//            Kategorilist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

//            ViewBag.Maintenance = "class = active";
//            ViewBag.Kategorilist = Kategorilist;

//            return View();
//        }

//        public ActionResult _PupYmMapping(string Kategorilist, int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
//        {
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
//                NegaraID.Value);

//            MVC_SYSTEM_Viewing dbview = MVC_SYSTEM_Viewing.ConnectToSqlServer(host, catalog, user, pass);
//            int pageSize = int.Parse(GetConfig.GetData("paging"));
//            var records = new PagedList<ViewingModels.tbl_UpahAktiviti>();

//            if (String.IsNullOrEmpty(Kategorilist))     
//            {
//                records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
//                       .OrderBy(sort + " " + sortdir)
//                       .Skip((page - 1) * pageSize)
//                       .Take(pageSize)
//                       .ToList();

//                records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
//                records.CurrentPage = page;
//                records.PageSize = pageSize;
//                //db.Dispose();
//                //dbview.Dispose();
//            }
//            else
//            {
//                records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_KategoriAktvt == Kategorilist && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
//                       .OrderBy(sort + " " + sortdir)
//                       .Skip((page - 1) * pageSize)
//                       .Take(pageSize)
//                       .ToList();

//                records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KategoriAktvt == Kategorilist && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
//                records.CurrentPage = page;
//                records.PageSize = pageSize;
//                //db.Dispose();
//                //dbview.Dispose(); 
//            }

//            ViewBag.Datacount = records.TotalRecords;
//            return View(records);
//        }

//        public ActionResult _PupYmMappingCreate()
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            try
//            {
//                List<SelectListItem> KategoriList = new List<SelectListItem>();
//                List<SelectListItem> unitlist = new List<SelectListItem>();
//                List<SelectListItem> Flaglist = new List<SelectListItem>();
//                KategoriList = new SelectList(db.tbl_KategoriAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();
//                KategoriList.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));
//                unitlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
//                unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));
//                Flaglist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
//                Flaglist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

//                ViewBag.fld_DisabledFlag = Flaglist;
//                ViewBag.fld_Unit = unitlist;
//                ViewBag.fld_KategoriAktvt = KategoriList;
//                //db.Dispose();
//                return PartialView();
//            }
//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _PupYmMappingCreate(MasterModels.tbl_UpahAktiviti pupYmMapping)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
//            try
//            {
//                //if (ModelState.IsValid)
//                //{

//                    pupYmMapping.fld_KodAktvt = pupYmMapping.fld_KodAktvt;
//                    pupYmMapping.fld_Desc = pupYmMapping.fld_Desc.ToUpper();
//                    pupYmMapping.fld_Unit = pupYmMapping.fld_Unit.ToUpper();
//                    pupYmMapping.fld_Harga = pupYmMapping.fld_Harga;
//                    pupYmMapping.fld_KategoriAktvt = pupYmMapping.fld_KategoriAktvt;
//                    pupYmMapping.fld_DisabledFlag = 1;
//                    //pupYmMapping.fld_KdhByr = "B";
//                    //UpahAktiviti.
//                    pupYmMapping.fld_Deleted = false;
//                    pupYmMapping.fld_NegaraID = NegaraID;
//                    pupYmMapping.fld_SyarikatID = SyarikatID;

//                    db.tbl_UpahAktiviti.Add(pupYmMapping);
//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgAdd,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "2",
//                        div = "PupYmMappingDetails",
//                        rootUrl = domain,
//                        action = "_PupYmMapping",
//                        controller = "Maintenance",
//                        paramName = "Kategorilist",
//                        paramValue = ""
//                    });
//                //}
//                //else
//                //{
//                //    return Json(new
//                //    {
//                //        success = false,
//                //        msg = GlobalResEstate.msgErrorData,
//                //        status = "danger",
//                //        checkingdata = "0"
//                //    });
//                //}
//            }
//            finally
//            {
//                db.Dispose();
//            }           
//        }



//        public ActionResult _PupYmMappingEdit(int? id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

//            var PayData = db.tbl_UpahAktiviti.SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

//            List<SelectListItem> unitlist = new List<SelectListItem>();
//            List<SelectListItem> Flaglist = new List<SelectListItem>();

//            unitlist = new SelectList(db.tblOptionConfigsWebs
//                .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID)
//                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", PayData.fld_Unit).ToList();

//            Flaglist = new SelectList(db.tblOptionConfigsWebs
//                .Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID)
//                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();

            
            

//            MasterModels.tbl_UpahAktivitiViewModel unitViewModel = new MasterModels.tbl_UpahAktivitiViewModel();

//            PropertyCopy.Copy(unitViewModel, PayData);

//            ViewBag.fld_DisabledFlag = Flaglist;
//            ViewBag.fld_Unit = unitlist;
//            return View(unitViewModel);
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _PupYmMappingEdit(MasterModels.tbl_UpahAktivitiViewModel Py)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

//            try
//            {
//                //if (ModelState.IsValid)
//                //{
//                    var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
//                        x => x.fld_ID == Py.fld_ID &&
//                             x.fld_NegaraID == NegaraID &&
//                             x.fld_SyarikatID == SyarikatID);

//                    unitData.fld_Desc = Py.fld_Desc.ToUpper();
//                    unitData.fld_Harga = Py.fld_Harga;
//                    unitData.fld_Unit = Py.fld_Unit.ToUpper();
//                    unitData.fld_DisabledFlag = 1;
                    
//                    db.SaveChanges();

//                    string appname = Request.ApplicationPath;
//                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                    var lang = Request.RequestContext.RouteData.Values["lang"];

//                    if (appname != "/")
//                    {
//                        domain = domain + appname;
//                    }

//                    return Json(new
//                    {
//                        success = true,
//                        msg = GlobalResEstate.msgUpdate,
//                        status = "success",
//                        checkingdata = "0",
//                        method = "1",
//                        div = "PupYmMappingDetails",
//                        rootUrl = domain,
//                        action = "_PupYmMapping",
//                        controller = "Maintenance"
//                    });
//                //}
//                //else
//                //{
//                //    return Json(new
//                //    {
//                //        success = false,
//                //        msg = GlobalResEstate.msgErrorData,
//                //        status = "danger",
//                //        checkingdata = "0"
//                //    });
//                //}
//            }
//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public ActionResult _PupYmMappingDelete(int? id)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            MasterModels.tbl_UpahAktiviti Payrate = db.tbl_UpahAktiviti
//                .Single(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
//                             x.fld_SyarikatID == SyarikatID);

//            return PartialView(Payrate);
//        }

//        [HttpPost]
//        [ValidateAntiForgeryToken]
//        public ActionResult _PupYmMappingDelete(MasterModels.tbl_UpahAktiviti Py)
//        {
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            string host, catalog, user, pass = "";
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
//            // Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

//            try
//            {
//                var PyData = db.tbl_UpahAktiviti.SingleOrDefault(
//                    x => x.fld_ID == Py.fld_ID &&
//                         x.fld_NegaraID == NegaraID &&
//                         x.fld_SyarikatID == SyarikatID);

//                bool status = true;

//                var message = "";
//                if (PyData.fld_Deleted == false)
//                {
//                    status = true;
//                    message = GlobalResEstate.msgDelete2;
//                }

//                else
//                {
//                    status = false;
//                    message = GlobalResEstate.msgUndelete;
//                }

//                PyData.fld_Deleted = status;

//                db.SaveChanges();

//                string appname = Request.ApplicationPath;
//                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
//                var lang = Request.RequestContext.RouteData.Values["lang"];

//                if (appname != "/")
//                {
//                    domain = domain + appname;
//                }

//                return Json(new
//                {
//                    success = true,
//                    msg = GlobalResEstate.msgUpdate,
//                    status = "success",
//                    checkingdata = "0",
//                    method = "1",
//                    div = "PupYmMappingDetails",
//                    rootUrl = domain,
//                    action = "_PupYmMapping",
//                    controller = "Maintenance"
//                });
//            }

//            catch (Exception ex)
//            {
//                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
//                return Json(new
//                {
//                    success = false,
//                    msg = GlobalResEstate.msgError,
//                    status = "danger",
//                    checkingdata = "0"
//                });
//            }

//            finally
//            {
//                db.Dispose();
//            }
//        }

//        public JsonResult GenerateKodAktvtPupYm(string KategoriAktvt)
//        {
//            int? getuserid = GetIdentity.ID(User.Identity.Name);
//            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
//            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

//            var lastcode = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == KategoriAktvt
//            && x.fld_Deleted == false).OrderByDescending(o => o.fld_KodAktvt.Trim()).Select(s => s.fld_KodAktvt).FirstOrDefault();
//            string newcode = "";
//            if (lastcode == null)
//            {
//                newcode = "01";
//                return Json(KategoriAktvt + newcode);
//            }
//            else
//            {
//                int generated = int.Parse(lastcode) + 1;
//                newcode = generated.ToString("0000");
//                return Json(newcode);
//            }
            
//        }
//    }
//}